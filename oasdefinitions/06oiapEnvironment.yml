openapi: '3.0.3'
info:
  version: '0.9.0-oas3'
  title: OIAP
  description: |
    **Open Info API para Puertos**


    This file contains all the APIs developed for the `Open Info API para Puertos` project for the **Environment Domain** within the initiative Ports 4.0 form Puertos del Estado (ES).

    The environment domain covers weather, sea state and pollution. 

  termsOfService: http://swagger.io/terms/
  license:
    name: CC0 1.0 Universal (CC0 1.0)
    url: https://creativecommons.org/publicdomain/zero/1.0/deed.es
  contact:
    name: OpenInfoAPI github
    url: https://github.com/portdebarcelona/OpenInfoAPI-Ports
tags:
  - name: Environment-Weather
    description: "APIs related to the weather in a port."
  # externalDocs:
  #   description: Description 
  #   url: http://swagger.io/ 
  - name: Environment-Sea State
    description: "APIs related to the sea state in the surrounding area of a port."
  - name: Environment-Pollution
    description: "APIs related to the pollution levels in a port area."

servers:
  - url: https://raw.githubusercontent.com/portdebarcelona/OpenInfoAPI-Ports/develop/oasdefinitions
    description: Main server 

paths:
  /realtimeWeather:
    get:
      tags:
        - Environment-Weather
      summary: Returns realtime weather information of the default weather station of a port.
      description: Returns realtime weather information of the default weather station of a port. 
      parameters:
        - $ref: '#/components/parameters/portCode'
      responses: #status code
        '200':
          description: Successful operation
          headers:
            oiapApiVersion:
              $ref: './oiapComponents.yml#/components/headers/oiapApiVersion'
          content: 
            application/json:
              schema:
                type: object
                properties:
                  realtimeWeather:
                    $ref: '#/components/schemas/realtimeWeather'
                  metadata: 
                    $ref: './oiapComponents.yml#/components/schemas/metadata'
                  requestedParams:
                    type: object
                    properties:
                      portCode:
                        $ref: './oiapComponents.yml#/components/schemas/portCode'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error' 
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error'  

  /weatherForecast:
    get:
      tags:
        - Environment-Weather
      summary: Returns the 5 days weather forecast for a port.
      description: Returns the 5 days weather forecast for a port. 
      parameters:
        - $ref: '#/components/parameters/portCode'
      responses: #status code
        '200':
          description: Successful operation
          headers:
            oiapApiVersion:
              $ref: './oiapComponents.yml#/components/headers/oiapApiVersion'
          content: 
            application/json:
              schema:
                type: object
                properties:
                  weatherForecast:
                    type: array
                    items:
                      $ref: '#/components/schemas/weatherForecast'
                  metadata: 
                    $ref: './oiapComponents.yml#/components/schemas/metadata'
                  requestedParams:
                    type: object
                    properties:
                      portCode:
                        $ref: './oiapComponents.yml#/components/schemas/portCode'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error' 
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error' 

  /astronomicalData:
    get:
      tags:
        - Environment-Weather
      summary: Returns astronomical data from a port. 
      description: Returns astronomical data from a port. Up to date information for sunrise, sunset, moonrise, moonset, moon phase and illumination. 
      parameters:
        - $ref: '#/components/parameters/portCode'
      responses: #status code
        '200':
          description: Successful operation
          headers:
            oiapApiVersion:
              $ref: './oiapComponents.yml#/components/headers/oiapApiVersion'
          content: 
            application/json:
              schema:
                type: object
                properties:
                  astronomy:
                    type: array
                    items:
                      $ref: '#/components/schemas/astronomy'
                  metadata: 
                    $ref: './oiapComponents.yml#/components/schemas/metadata'
                  requestedParams:
                    type: object
                    properties:
                      portCode:
                        $ref: './oiapComponents.yml#/components/schemas/portCode'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error' 
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error'

  /seaCondition:
    get:
      tags:
        - Environment-Sea State
      summary: Returns information of the sea condition.
      description: Returns information of the sea condition.
      parameters:
        - $ref: '#/components/parameters/portCode'
      responses: #status code
        '200':
          description: Successful operation
          headers:
            oiapApiVersion:
              $ref: './oiapComponents.yml#/components/headers/oiapApiVersion'
          content: 
            application/json:
              schema:
                type: object
                properties:
                  seaCondition:
                    $ref: '#/components/schemas/seaCondition'
                  metadata: 
                    $ref: './oiapComponents.yml#/components/schemas/metadata'
                  requestedParams:
                    type: object
                    properties:
                      portCode:
                        $ref: './oiapComponents.yml#/components/schemas/portCode'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error' 
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error'

  /wavePrediction:
    get:
      tags:
        - Environment-Sea State
      summary: Returns the prediction of waves.
      description: Returns the prediction of waves, including the component of the wind waves plus the swell.
      parameters:
        - $ref: '#/components/parameters/portCode'
        - $ref: '#/components/parameters/forecastedDate'
      responses: #status code
        '200':
          description: Successful operation
          headers:
            oiapApiVersion:
              $ref: './oiapComponents.yml#/components/headers/oiapApiVersion'
          content: 
            application/json:
              schema:
                type: object
                properties:
                  wavePrediction:
                    type: array
                    items:
                      $ref: '#/components/schemas/wavePrediction'
                  metadata: 
                    $ref: './oiapComponents.yml#/components/schemas/metadata'
                  requestedParams:
                    type: object
                    properties:
                      portCode:
                        $ref: './oiapComponents.yml#/components/schemas/portCode'
                      forecastedDate:
                        $ref: './oiapComponents.yml#/components/schemas/forecastedDate'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error' 
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error'

  /tides:
    get:
      tags:
        - Environment-Sea State
      summary: Returns information about the tides of a port.
      description: Returns information about the tides of a port.
      parameters:
        - $ref: '#/components/parameters/portCode'
        - $ref: '#/components/parameters/forecastedDate'
      responses: #status code
        '200':
          description: Successful operation
          headers:
            oiapApiVersion:
              $ref: './oiapComponents.yml#/components/headers/oiapApiVersion'
          content: 
            application/json:
              schema:
                type: object
                properties:
                  tides:
                    type: array
                    items:
                      $ref: '#/components/schemas/tides'
                  metadata: 
                    $ref: './oiapComponents.yml#/components/schemas/metadata'
                  requestedParams:
                    type: object
                    properties:
                      portCode:
                        $ref: './oiapComponents.yml#/components/schemas/portCode'
                      forecastedDate:
                        $ref: './oiapComponents.yml#/components/schemas/forecastedDate'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error' 
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error'

  /airQualityIndex:
    get:
      tags:
        - Environment-Pollution
      summary: Returns the present value of the Air Quality Index and Level.
      description: Returns the present value of the Air Quality Index and Level.
      parameters:
        - $ref: '#/components/parameters/portCode'
      responses: #status code
        '200':
          description: Successful operation
          headers:
            apiVersion:
              $ref: './oiapComponents.yml#/components/headers/oiapApiVersion'
          content: 
            application/json:
              schema:
                type: object
                properties:
                  airQualityIndex:
                    $ref: '#/components/schemas/airQualityIndex'
                  metadata: 
                    $ref: './oiapComponents.yml#/components/schemas/metadata'
                  requestedParams:
                    type: object
                    properties:
                      portCode:
                        $ref: './oiapComponents.yml#/components/schemas/portCode'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error'  
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error' 

  /airQualityMonitoring:
    get:
      tags:
        - Environment-Pollution
      summary: Returns some common air quality parameters.
      description: Returns some common air quality parameters.
      parameters:
        - $ref: '#/components/parameters/portCode'
      responses: #status code
        '200':
          description: Successful operation
          headers:
            apiVersion:
              $ref: './oiapComponents.yml#/components/headers/oiapApiVersion'
          content: 
            application/json:
              schema:
                type: object
                properties:
                  airQualityPollution:
                    $ref: '#/components/schemas/airQualityPollution'
                  metadata: 
                    $ref: './oiapComponents.yml#/components/schemas/metadata'
                  requestedParams:
                    type: object
                    properties:
                      portCode:
                        $ref: './oiapComponents.yml#/components/schemas/portCode'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error'  
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error' 

  /waterQualityIndex:
    get:
      tags:
        - Environment-Pollution
      summary: Returns the present value of the Water Quality Index and Level.
      description: > 
            Returns the present value of the Water Quality Index and Level.
            
            WQI provides a single number that expresses the overall water quality, at a certain location and time, based on several water quality parameters. The objective of WQI is to turn complex water quality data into information that is understandable and usable by the public.
      parameters:
        - $ref: '#/components/parameters/portCode'
      responses: #status code
        '200':
          description: Successful operation
          headers:
            apiVersion:
              $ref: './oiapComponents.yml#/components/headers/oiapApiVersion'
          content: 
            application/json:
              schema:
                type: object
                properties:
                  waterQualityIndex:
                    type: array
                    items:
                      $ref: '#/components/schemas/waterQualityIndex'
                  metadata: 
                    $ref: './oiapComponents.yml#/components/schemas/metadata'
                  requestedParams:
                    type: object
                    properties:
                      portCode:
                        $ref: './oiapComponents.yml#/components/schemas/portCode'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error'  
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error' 

  /waterQualityMonitoring:
    get:
      tags:
        - Environment-Pollution
      summary: Returns some common water quality parameters.
      description: Returns some common water quality parameters.
      parameters:
        - $ref: '#/components/parameters/portCode'
      responses: #status code
        '200':
          description: Successful operation
          headers:
            apiVersion:
              $ref: './oiapComponents.yml#/components/headers/oiapApiVersion'
          content: 
            application/json:
              schema:
                type: object
                properties:
                  waterQualityParameters:
                    $ref: '#/components/schemas/waterQualityParameters'
                  metadata: 
                    $ref: './oiapComponents.yml#/components/schemas/metadata'
                  requestedParams:
                    type: object
                    properties:
                      portCode:
                        $ref: './oiapComponents.yml#/components/schemas/portCode'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error'  
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error' 

  /noiseLevel: 
    get:
      tags:
        - Environment-Pollution
      summary: Returns the level of noise of a port
      description: Returns the level of noise of a port
      parameters:
        - $ref: '#/components/parameters/portCode'
      responses: #status code
        '200':
          description: Successful operation
          headers:
            apiVersion:
              $ref: './oiapComponents.yml#/components/headers/oiapApiVersion'
          content: 
            application/json:
              schema:
                type: object
                properties:
                  noiseLevel:
                    $ref: '#/components/schemas/noiseLevel'
                  metadata: 
                    $ref: './oiapComponents.yml#/components/schemas/metadata'
                  requestedParams:
                    type: object
                    properties:
                      portCode:
                        $ref: './oiapComponents.yml#/components/schemas/portCode'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error'  
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error' 



components:
  parameters: 
    portCode:
      in: query
      name: portCode
      description: |
            Port UN/LOCODE
            Default value is Locode of Port what provides the services
            example: portCode=ESBCN        
      required: false
      style: form
      explode: false
      schema:
        $ref: './oiapComponents.yml#/components/schemas/portCode'

    forecastedDate:
      in: query
      name: forecastedDate
      description: Date of the forecast.     
      required: false
      style: form
      explode: false
      schema:
        $ref: './oiapComponents.yml#/components/schemas/forecastedDate'

  schemas:
    realtimeWeather: 
      description: 'Realtime weather information.'
      type: object
      allOf:
        - type: object 
          properties:
              dataProvider: 
                description: Specifies the URL to information about the provider of this information
                type: string
              name: 
                description: Name given to the weather observed location.
                type: string
              location: 
                description: Location of the weather observation represented by a GeoJSON geometry. https://tools.ietf.org/html/rfc7946. Mandatory if address is not defined.
                type: string             
              address: 
                description: Civic address of the weather observation. Sometimes it corresponds to a weather station address. https://schema.org/address. Mandatory if location is not present.
                type: string 
              dateObserved: 
                description: The date and time of this observation in ISO8601 UTCformat. It can be represented by an specific time instant or by an ISO8601 interval.
                type: string
                format: date-time
              source: 
                description: A sequence of characters giving the source of the entity data.
                type: string
              refDevice: 
                description: A reference to the device(s) which captured this observation.
                type: string
              refPointOfInterest: 
                description: A reference to a point of interest (usually a weather station) associated to this observation.
                type: string
              weatherTypes: 
                description: The observed weather types. It is represented by a comma separated list of weather statuses, for instance overcast, lightRain.
                type: array
                items:
                      $ref: './oiapComponents.yml#/components/schemas/weatherType'
              dewPoint: 
                 $ref: './oiapComponents.yml#/components/schemas/dewPoint'
              visibility: 
                $ref: './oiapComponents.yml#/components/schemas/visibility'
              temperature: 
                $ref: './oiapComponents.yml#/components/schemas/temperature'
              feelsLikeTemperature:  
                $ref: './oiapComponents.yml#/components/schemas/feelsLikeTemperature'
              relativeHumidity: 
                $ref: './oiapComponents.yml#/components/schemas/relativeHumidity'           
              precipitation: 
                $ref: './oiapComponents.yml#/components/schemas/precipitation'
              windDirection: 
                $ref: './oiapComponents.yml#/components/schemas/windDirection'
              windSpeed: 
                $ref: './oiapComponents.yml#/components/schemas/windSpeed'
              atmosphericPressure: 
                $ref: './oiapComponents.yml#/components/schemas/atmosphericPressure'
              pressureTendency: 
                $ref: './oiapComponents.yml#/components/schemas/pressureTendency'
              solarRadiation: 
                $ref: './oiapComponents.yml#/components/schemas/solarRadiation'
              illuminance: 
                $ref: './oiapComponents.yml#/components/schemas/illuminance'
      required:
        - dateObserved 

    weatherForecast: 
      description: 'Weather forecast information.'
      type: object
      allOf:
        - type: object 
          properties:        
            forecastedDate:  
              $ref: './oiapComponents.yml#/components/schemas/forecastedDate'
            atmosphericPressure:    
              $ref: './oiapComponents.yml#/components/schemas/atmosphericPressure'
            dayMaximum:    
              description: 'Maximum values for the reported period. Subattributes:- `temperature` : Maximum temperature. See `WeatherForecast.temperature` for description and units. - `feelLikesTemperature`. Maximum feels like temperature. Same semantics and units as `WeatherForecast.feelsLikeTemperature`.-   `relativeHumidity`. Maximum relative humidity. Same semantics and units as `WeatherForecast.relativeHumidity`.'    
              type: object  
              properties:    
                feelsLikeTemperature:    
                  $ref: './oiapComponents.yml#/components/schemas/feelsLikeTemperature'   
                relativeHumidity:    
                  $ref: './oiapComponents.yml#/components/schemas/relativeHumidity'    
                temperature:    
                  $ref: './oiapComponents.yml#/components/schemas/temperature'     
            dayMinimum:    
              description: 'Minimum values forecasted for the reported period.  Minimum values for the reported period. Subattributes:- `temperature` : Minimum temperature. See `WeatherForecast.temperature` for description and units. - `feelLikesTemperature`. Minimum feels like temperature. Same semantics and units as `WeatherForecast.feelsLikeTemperature`.- `relativeHumidity`. Minimum relative humidity. Same semantics and units as `WeatherForecast.relativeHumidity`'    
              type: object   
              properties:    
                feelsLikeTemperature:    
                  $ref: './oiapComponents.yml#/components/schemas/feelsLikeTemperature'    
                relativeHumidity:    
                  $ref: './oiapComponents.yml#/components/schemas/relativeHumidity'    
                temperature:    
                  $ref: './oiapComponents.yml#/components/schemas/temperature'             
            gustSpeed:    
              description: 'A sudden burst of high-speed wind over the observed average wind speed lasting only for a few seconds.'    
              type: number
            precipitationProbability:
              $ref: './oiapComponents.yml#/components/schemas/precipitationProbability'
            cloudCover:  
              $ref: './oiapComponents.yml#/components/schemas/cloudCover'
            dataProvider:    
              description: 'A sequence of characters identifying the provider of the harmonised data entity.'    
              type: string      
      required:
        - targetData 

    astronomy:  
      description: 'Astronomical data.'
      type: object
      allOf:
        - type: object 
          properties:
            sunrise:  
              $ref: './oiapComponents.yml#/components/schemas/sunrise'
            sunset:  
              $ref: './oiapComponents.yml#/components/schemas/sunset'
            moonrise:  
              $ref: './oiapComponents.yml#/components/schemas/moonrise'
            moonset:  
              $ref: './oiapComponents.yml#/components/schemas/moonset'
            moonPhase:  
              $ref: './oiapComponents.yml#/components/schemas/moonPhase'
            illumination:  
              $ref: './oiapComponents.yml#/components/schemas/illumination'   

    seaCondition: 
      description: 'Sea condition.'
      type: object
      allOf:
        - type: object 
          properties:
            lastCheckedResult:  
              $ref: './oiapComponents.yml#/components/schemas/lastCheckedResult'
            surfaceTemperature: 
              $ref: './oiapComponents.yml#/components/schemas/surfaceTemperature'
            waveHeight: 
              $ref: './oiapComponents.yml#/components/schemas/waveHeight'
            waveLevel: 
              $ref: './oiapComponents.yml#/components/schemas/waveLevel'
            wavePeriod: 
              $ref: './oiapComponents.yml#/components/schemas/wavePeriod'
            source: 
              $ref: './oiapComponents.yml#/components/schemas/source'
      required:
        - lastCheckedResult 

    wavePrediction: 
      description: Wave prediction.       
      type: object
      allOf:
        - type: object 
          properties:
            forecastedDate:  
              $ref: './oiapComponents.yml#/components/schemas/forecastedDate'
            waveHeight:
              $ref: './oiapComponents.yml#/components/schemas/waveHeight'
            swellHeight:  
              $ref: './oiapComponents.yml#/components/schemas/swellHeight'
            swellPeriod:  
              $ref: './oiapComponents.yml#/components/schemas/swellPeriod'
            swellDirection:              
              $ref: './oiapComponents.yml#/components/schemas/swellDirection'
            windDirection: 
              $ref: './oiapComponents.yml#/components/schemas/windDirection' 
            windSpeed: 
              $ref: './oiapComponents.yml#/components/schemas/windSpeed'
      required:
        - forecastedData 
        - waveHeight

    tides: 
      description: 'Tidal information.'
      type: object
      properties:
        forecastedDate:  
          description: Date for which the tides are forecasted
        highTide:  
          description: >
              The maximum height reached by a rising tide.  High tide is measured in meters.
          type: object
          properties:
            height:
              $ref: './oiapComponents.yml#/components/schemas/height'
            time: 
              $ref: './oiapComponents.yml#/components/schemas/time' 
        lowTide:  
          description: >
              The minimum height reached by a falling tide.  Low tide is measured in meters.
          type: object
          properties:
            height:
              $ref: './oiapComponents.yml#/components/schemas/height'
            time: 
              $ref: './oiapComponents.yml#/components/schemas/time' 
      required:
        - forecastedDates 

    airQualityIndex: 
      description: 'Air Quality Index.'
      type: object
      allOf:
        - type: object 
          properties:
            lastCheckedResult:  
              $ref: './oiapComponents.yml#/components/schemas/lastCheckedResult' 
            airQualityIndex:  
              description: 'Value of the Air Quality Index (AQI).'
              type: integer
              minimum: 0
              maximum: 100
              example: 65
            airQualityLevel:  
              description: 'Air Quality Level. Example values are those defined by the USA EPA Agency: (good, moderate, unhealthyForSensitiveGroups, unhealthy, veryUnhealthy, hazardous).'
              type: string
              enum: [good, moderate, unhealthyForSensitiveGroups, unhealthy, veryUnhealthy, hazardous]
              example: moderate 

    airQualityPollution: 
      description: 'Values of several parameters that measure the air quality.'
      type: object
      allOf:
        - type: object 
          properties:
            lastCheckedResult:  
              $ref: './oiapComponents.yml#/components/schemas/lastCheckedResult' 
            airQualityIndex:  
              description: 'Value of the Air Quality Index (AQI).'
              type: integer
              example: 65
            CO:  
              description: 'CO concentration, in milligrams per cubic meter.'
              type: integer
              example: 500 
            NO:  
              description: 'NO concentration, in milligrams per cubic meter.'
              type: integer
              example: 43
            NO2:  
              description: 'NO2 concentration, in milligrams per cubic meter.'
              type: integer
              example: 70
            NOx:  
              description: 'NOx concentration, in milligrams per cubic meter.'
              type: integer
              example: 490
            SO2:  
              description: 'SO2 concentration, in milligrams per cubic meter.'
              type: integer
              example: 12
      required:
        - lastCheckedResult
        - airQualityIndex

    waterQualityIndex: 
      description: 'Water Quality Index.'
      type: object
      allOf:
        - type: object 
          properties:
            lastCheckedResult:  
              $ref: './oiapComponents.yml#/components/schemas/lastCheckedResult' 
            waterQualityIndex:  
              $ref: './oiapComponents.yml#/components/schemas/waterQualityIndex' 
            waterQualityLevel:  
              $ref: './oiapComponents.yml#/components/schemas/waterQualityLevel' 
      required:
        - lastCheckedResult
        - waterQualityIndex

    waterQualityParameters: 
      description: 'Water quality parameters and chemical agents.'
      type: object
      allOf:
        - type: object 
          properties:
            lastCheckedResult:  
              $ref: './oiapComponents.yml#/components/schemas/lastCheckedResult' 
            waterTemperature:  
              $ref: './oiapComponents.yml#/components/schemas/waterTemperature'
            salinity: 
              $ref: './oiapComponents.yml#/components/schemas/salinity'
            ph: 
              $ref: './oiapComponents.yml#/components/schemas/ph'
            turbidity: 
              $ref: './oiapComponents.yml#/components/schemas/turbidity'
            o2: 
              $ref: './oiapComponents.yml#/components/schemas/o2'
            tss: 
              $ref: './oiapComponents.yml#/components/schemas/tss'
            tds: 
              $ref: './oiapComponents.yml#/components/schemas/tds'
            nitrates: 
              $ref: './oiapComponents.yml#/components/schemas/nitrates'
            nitrites: 
              $ref: './oiapComponents.yml#/components/schemas/nitrites'
            ammonia: 
              $ref: './oiapComponents.yml#/components/schemas/ammonia'             
            silicate: 
              $ref: './oiapComponents.yml#/components/schemas/silicate'
            phosphate: 
              $ref: './oiapComponents.yml#/components/schemas/phosphate'
      required:
        - lastCheckedResult

    noiseLevel: 
      description: 'Noise level, expressed in dB.'
      type: object
      allOf:
        - type: object 
          properties:
            lastCheckedResult:  
              $ref: './oiapComponents.yml#/components/schemas/lastCheckedResult'
            noiseLevel:
              $ref: './oiapComponents.yml#/components/schemas/noiseLevel'
      required:
        - lastCheckedResult
        - noiseLevel