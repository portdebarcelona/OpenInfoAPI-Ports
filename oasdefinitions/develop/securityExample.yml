swagger: '2.0'
info:
    title: 'Dictionary Data'
    description: 'This service provides information about dictionary data'
    contact:
        name: 'IT Department'
        url: 'https://www.firstdigitalfinance.com/'
        email: api-info@firstdigitalfinance.com
    license:
        name: FDFC
        url: 'https://www.firstdigitalfinance.com/license.txt'
    version: 1.0.0
consumes:
    - application/json
produces:
    - application/json
paths:
    /ping:
        get:
            tags:
                - ping
            summary: 'Ping the service'
            description: '`ping` the service'
            operationId: getPing
            responses:
                '200':
                    description: 'Successful response - returns an array of `ping` entities.'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/ping'
                    examples:
                        application/json: "{\n\t\"env\":\"prod\",\n\t\"ver\":\"1.0.1\",\n\t\"srv\":\"2018-10-25T13:12:01\"\n}"
    /dictionary:
        get:
            tags:
                - dictionary
            summary: 'Get all values from dictionary'
            description: 'Get all values from dictionary'
            operationId: getAllValues
            parameters:
                -
                    name: category
                    in: query
                    type: string
                -
                    name: status
                    in: query
                    description: "Get all or only active valus:\n\"active\"\n\"all\""
                    type: string
            responses:
                '200':
                    description: 'Successful operation'
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/valueRead'
                '401':
                    description: Unauthorized
                '500':
                    description: 'Internal error'
        post:
            tags:
                - dictionary
            summary: 'Create new value in the dictionary'
            description: 'Create new value in the dictionary'
            operationId: newValue
            parameters:
                -
                    name: body
                    in: body
                    description: 'Array of new values'
                    required: true
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/valueWrite'
            responses:
                '200':
                    description: 'Successful operation'
                    schema:
                        $ref: '#/definitions/responseId'
                '400':
                    description: 'Bad request'
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                '500':
                    description: 'Internal error'
            security:
                -
                    generic_auth:
                        - write
    '/dictionary/{id}':
        get:
            tags:
                - dictionary
            summary: 'Get Value By ID'
            description: 'Get Value By ID'
            operationId: getValue
            responses:
                '200':
                    description: 'Successful operation'
                    schema:
                        $ref: '#/definitions/valueRead'
                '401':
                    description: Unauthorized
                '500':
                    description: 'Internal error'
        patch:
            tags:
                - dictionary
            summary: 'Update value in the dictionary.'
            description: 'Update value in the dictionary'
            operationId: updateValue
            parameters:
                -
                    name: body
                    in: body
                    description: 'Update value by ID'
                    required: true
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/valueWrite'
            responses:
                '200':
                    description: 'Successful operation'
                '400':
                    description: 'Bad request'
                    schema:
                        $ref: '#/definitions/error'
                '401':
                    description: Unauthorized
                '500':
                    description: 'Internal error'
            security:
                -
                    generic_auth:
                        - write
        parameters:
            -
                name: id
                in: path
                description: 'Id of value'
                required: true
                type: integer
    /category:
        get:
            tags:
                - category
            summary: 'Get categories'
            description: 'Get all categories'
            operationId: getCategories
            responses:
                '200':
                    description: OK
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/categoryRead'
                '404':
                    description: 'Not Found'
                '500':
                    description: 'Internal Server Error'
                    schema:
                        $ref: '#/definitions/error'
        post:
            tags:
                - category
            summary: 'Create New Category'
            description: 'Create new category'
            operationId: createCategory
            parameters:
                -
                    name: body
                    in: body
                    required: true
                    schema:
                        $ref: '#/definitions/categoryWrite'
            responses:
                '200':
                    description: OK
                    schema:
                        $ref: '#/definitions/responseId'
                '400':
                    description: 'Bad Request'
                    schema:
                        $ref: '#/definitions/error'
                '500':
                    description: 'Internal Server Error'
                    schema:
                        $ref: '#/definitions/error'
    '/category/{id}':
        get:
            tags:
                - category
            summary: 'Get Category By ID'
            description: 'Get Category By ID'
            operationId: getCategory
            parameters:
                -
                    name: id
                    in: path
                    description: 'Category ID'
                    required: true
                    type: integer
            responses:
                '200':
                    description: OK
                    schema:
                        $ref: '#/definitions/categoryRead'
                '404':
                    description: 'Not Found'
                '500':
                    description: 'Internal Server Error'
                    schema:
                        $ref: '#/definitions/error'
definitions:
    ping:
        title: 'Root Type for ping'
        description: 'Information about service'
        required:
            - env
            - srv
            - ver
        type: object
        properties:
            env:
                description: 'Environment: prod;uat;dev'
                type: string
            ver:
                description: 'Service version'
                type: string
            srv:
                format: date-time
                description: 'Server time'
                type: string
        example: "{\n    \"env\": \"prod\",\n    \"ver\": \"1.0.1\",\n    \"srv\": \"2018-10-25T13:12:01\"\n}"
    errorType:
        title: 'Root Type for errorFields'
        description: 'Error Type'
        required:
            - code
        type: object
        properties:
            code:
                description: 'Error code'
                type: string
            message:
                description: "Error details\n\nThis field does not return in production mode"
                type: string
        example: "{\n    \"code\": 404,\n    \"message\": \"Resource not found\"\n}"
    valueRead:
        title: 'Root Type for Dictionary'
        description: 'Full information about dictionary value'
        required:
            - category
            - id
            - intId
            - status
            - value
        type: object
        properties:
            category:
                description: 'Category (field name)'
                type: string
            id:
                format: int32
                description: 'ID in database'
                type: integer
            intId:
                format: int32
                description: 'Integer ID of value (alias)'
                type: integer
            status:
                description: "Depricated value or not.\n- true - active\n- false - value is depricated"
                type: boolean
            strId:
                description: 'String ID of value (alias)'
                type: string
            value:
                description: Value
                type: string
    valueWrite:
        title: 'Root Type for Dictionary'
        description: 'Full information about dictionary value'
        required:
            - category
            - intId
            - status
            - value
        type: object
        properties:
            category:
                description: 'Category (field name)'
                type: string
            intId:
                format: int32
                description: 'Integer ID of value (alias)'
                type: integer
            status:
                description: "Depricated value or not.\ntrue - active\nfalse - value is depricated"
                type: boolean
            strId:
                description: 'String ID of value (alias)'
                type: string
            value:
                description: Value
                type: string
    categoryRead:
        title: 'Root Type for categoryRead'
        description: 'The root of the categoryRead type''s schema.'
        required:
            - category
            - created
            - description
            - id
            - status
        type: object
        properties:
            id:
                format: int32
                type: integer
            category:
                type: string
            description:
                type: string
            created:
                format: date-time
                type: string
            status:
                type: boolean
        example: "{\n    \"id\": 1,\n    \"category\": \"phone_type\",\n    \"description\": \"Phone type\",\n    \"created\": \"2018-12-12T10:10:10\",\n    \"status\": true\n}"
    categoryWrite:
        title: 'Root Type for categoryWrite'
        description: 'The root of the categoryWrite type''s schema.'
        type: object
        properties:
            category:
                type: string
            description:
                type: string
            status:
                type: boolean
        example: "{\n    \"category\": \"phone_type\",\n    \"description\": \"Phone type\",\n    \"status\": true\n}"
    responseId:
        title: 'Root Type for responseId'
        description: 'Id of record in case of successful operation'
        required:
            - id
        type: object
        properties:
            id:
                format: int32
                description: 'Id of record'
                type: integer
        example: "{\n    \"id\":1\n}"
    error:
        title: 'Root Type for error'
        description: 'Generic error description'
        required:
            - error
        type: object
        properties:
            error:
                $ref: '#/definitions/errorType'
securityDefinitions:
    api_key:
        type: apiKey
        description: 'Key Authorization'
        name: Authorization
        in: header
    generic_auth:
        type: oauth2
        description: OAuth
        flow: implicit
        authorizationUrl: 'http://api.web.lt/oauth/dialog'
        scopes:
            read: 'read information'
            write: 'write information'
security:
    - {}
    -
        api_key: []
tags:
    -
        name: ping
        description: 'Information about service'
    -
        name: category
        description: Fields
    -
        name: dictionary
        description: Values