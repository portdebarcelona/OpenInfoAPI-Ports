openapi: 3.0.0
info:
  title: OpenInfoAPI Template
  description: OpenInfoAPI Ports Template.
  termsOfService: http://example.com/terms/ 
  contact:
    name: OpenInfoAPI para Puertos GitHub
    url: https://github.com/portdebarcelona/OpenInfoAPI-Ports
    email: openinfoapiports@gmail.com
  license:
    name: CC0 1.0 Universal (CC0 1.0)
    url:  https://creativecommons.org/publicdomain/zero/1.0/deed.es
  version: 0.1.9
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
    variables:
      username:
        # note! no enum here means it is an open value
        default: demo
        description: this value is assigned by the service provider, in this example `gigantic-server.com`
      port:
        enum:
          - '8443'
          - '443'
        default: '8443'
      basePath:
        # open meaning there is the opportunity to use special base paths as assigned by the provider, default is `v2`
        default: v2
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing
paths:
  /users:
    get:
      description: Returns pets based on ID
      summary: Find pets by ID
      operationId: getPetsById
      responses:
        '200':
          description: pet response
          content:
            '*/*' :
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        default:
          description: error payload
          content:
            'text/html':
              schema:
                $ref: '#/components/schemas/GeneralError'
    parameters:
    - name: id
      in: path
      description: ID of pet to use
      required: true
      schema:
        type: array
        items:
          type: string  
      style: simple
components:
  schemas:
    GeneralError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
  parameters:
    coordinates:
      name: coordinates
      in: query
      content:
        application/json:
          schema:
            type: object
            required:
              - lat
              - long
            properties:
              lat:
                type: number
              long:
                type: number
    skipParam:
      name: skip
      in: query
      description: number of items to skip
      required: true
      schema:
        type: integer
        format: int32
    limitParam:
      name: limit
      in: query
      description: max records to return
      required: true
      schema:
        type: integer
        format: int32
  responses:
    NotFound:
      description: Entity not found.
    IllegalInput:
      description: Illegal input for operation.
    GeneralError:
      description: General Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
    petstore_auth:
      type: oauth2
      flows: 
        implicit:
          authorizationUrl: http://example.org/api/oauth/dialog
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
