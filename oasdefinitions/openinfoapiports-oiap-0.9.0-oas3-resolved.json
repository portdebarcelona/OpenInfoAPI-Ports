{
  "openapi": "3.0.3",
  "info": {
    "title": "OIAP",
    "description": "**Open Info API para Puertos** \n\nThis file contains all the APIs developed for the `Open Info API para Puertos` project within the initiative Ports 4.0 from Puertos del Estado (ES).   ",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "OpenInfoAPI github",
      "url": "https://github.com/portdebarcelona/OpenInfoAPI-Ports"
    },
    "license": {
      "name": "CC0 1.0 Universal (CC0 1.0)",
      "url": "https://creativecommons.org/publicdomain/zero/1.0/deed.es"
    },
    "version": "0.9.0-oas3"
  },
  "servers": [
    {
      "url": "https://raw.githubusercontent.com/portdebarcelona/OpenInfoAPI-Ports/main/oasdefinitions/"
    }
  ],
  "tags": [
    {
      "name": "Port Calls",
      "description": "Port Calls Domain. APIs related to the ships arrival or departure from a port."
    },
    {
      "name": "Liner Services",
      "description": "APIs related to the Liner Services that are scheduled in a port."
    },
    {
      "name": "Port Infrastructure",
      "description": "APIs related to the infrastructures of a port."
    },
    {
      "name": "Port Procedures",
      "description": "APIs related to the docummentary procedures of a port."
    },
    {
      "name": "Statistics",
      "description": "APIs related to statistics from a port."
    },
    {
      "name": "Environment-Weather",
      "description": "APIs related to the weather in a port."
    },
    {
      "name": "Environment-Sea State",
      "description": "APIs related to the sea state in the surrounding area of a port."
    },
    {
      "name": "Environment-Pollution",
      "description": "APIs related to the pollution levels in a port area."
    },
    {
      "name": "Rail Transport",
      "description": "APIs related to the flow of trains and cargo by rail in a port."
    },
    {
      "name": "Vehicle Traffic",
      "description": "APIs related to the docummentary procedures of a port."
    },
    {
      "name": "Terminal Performance",
      "description": "APIs related to the terminal performance of a port."
    },
    {
      "name": "News",
      "description": "APIs related to some news of interest from a port."
    },
    {
      "name": "Notices",
      "description": "APIs related to some notices of interest from a port."
    },
    {
      "name": "Rates and Fees",
      "description": "APIs related to the port rates and fees."
    },
    {
      "name": "Port Services",
      "description": "APIs related to the port services from a port."
    },
    {
      "name": "Port Calendar",
      "description": "APIs related to the calendar in a port."
    },
    {
      "name": "Port Directory",
      "description": "APIs related to the a port directory."
    }
  ],
  "paths": {
    "/shipsScheduled": {
      "get": {
        "tags": [
          "Port Calls"
        ],
        "summary": "Returns a list of ships that will arrive at a port in each period of time",
        "description": "Returns a list of ships that will arrive at a port in a given period of time",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "The start date of the period for which schedule information is requested. The value is populated in ISO 8601 Date format. If not provided, the current date is used by default.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/fromDate"
            }
          },
          {
            "name": "dateRange",
            "in": "query",
            "description": "The time period for which schedule information is sent. The duration is populated in ISO 8601 Duration format. If not provided, 24 hours is used by default.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/dateRange"
            },
            "example": "T24H"
          },
          {
            "name": "shipType",
            "in": "query",
            "description": "Type of ship. Default value are all types.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/shipType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/shipsInPort": {
      "get": {
        "tags": [
          "Port Calls"
        ],
        "summary": "Returns a list of ships that are anchored or moored now in a Port.",
        "description": "Returns a list of ships that are anchored or moored now in a Port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/shipsArrivals": {
      "get": {
        "tags": [
          "Port Calls"
        ],
        "summary": "Returns a list of ships that have arrived or will arrive today at a port.",
        "description": "Returns a list of ships that have arrived or will arrive today at a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/shipsDepartures": {
      "get": {
        "tags": [
          "Port Calls"
        ],
        "summary": "Returns a list of ships that have departed or will depart today from a port.",
        "description": "Returns a list of ships that have departed or will depart today from a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_3"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/shipsAproximation": {
      "get": {
        "tags": [
          "Port Calls"
        ],
        "summary": "Returns a list of ships that have initiated their aproximation manoeuvres to a port.",
        "description": "Returns a list of ships that have initiated their aproximation manouvres to a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_4"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/ferriesArrivals": {
      "get": {
        "tags": [
          "Port Calls"
        ],
        "summary": "Returns a list of all the ferries that have arrived or will arrive today at a port.",
        "description": "Returns a list of all the ferries that have arrived or will arrive today at a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_5"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/ferriesDepartures": {
      "get": {
        "tags": [
          "Port Calls"
        ],
        "summary": "Returns a list of ferries that have departed or will depart today from a port.",
        "description": "Returns a list of ferries that have departed or will depart today from a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_6"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/cruiseCalls": {
      "get": {
        "tags": [
          "Port Calls"
        ],
        "summary": "Returns information about the next arrival and departure of a cruise ship.",
        "description": "Returns information about the next arrival and departure of a cruise ship.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "shipName",
            "in": "query",
            "description": "Name of the cruise ship.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/shipName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_7"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/linerServices": {
      "get": {
        "tags": [
          "Liner Services"
        ],
        "summary": "Returns a list of liner services of a port.",
        "description": "Returns a list of liner services of a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "linkedPortCode",
            "in": "query",
            "description": "Port that is served by a direct service of a liner and do not requires a transshipment.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            },
            "example": "HKHKG"
          },
          {
            "name": "coastalArea",
            "in": "query",
            "description": "Maritime coastal areas.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/coastalArea"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_8"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/linkedPorts": {
      "get": {
        "tags": [
          "Liner Services"
        ],
        "summary": "Returns the list of linked ports served by liner services from a port.",
        "description": "This GET API returns the list of linked ports served by liner services from a port. ",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "coastalArea",
            "in": "query",
            "description": "Maritime coastal areas.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/coastalArea"
            }
          },
          {
            "name": "countryCode",
            "in": "query",
            "description": "Country code as in ISO3166 2 alpha characters.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/countryCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_9"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/linerCarriers": {
      "get": {
        "tags": [
          "Liner Services"
        ],
        "summary": "List of the carriers that serve a port, a maritime coastal area or a country.",
        "description": "List of the carriers that serve a port, a maritime coastal area or a country.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "coastalArea",
            "in": "query",
            "description": "Maritime coastal areas.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/coastalArea"
            }
          },
          {
            "name": "countryCode",
            "in": "query",
            "description": "Country code as in ISO3166 2 alpha characters.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/countryCode"
            }
          },
          {
            "name": "linkedPortCode",
            "in": "query",
            "description": "Port that is served by a direct service of a liner and do not requires a transshipment.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            },
            "example": "HKHKG"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_10"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/portInfrastructure": {
      "get": {
        "tags": [
          "Port Infrastructure"
        ],
        "summary": "Returns a list of basic data of the infrastructure of a port.",
        "description": "Returns a list of basic data of the infrastructure of a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_11"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/portGates": {
      "get": {
        "tags": [
          "Port Infrastructure"
        ],
        "summary": "Information about the mainland port accesses.",
        "description": "This GET API returns the list of port gates from a port. ",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_12"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/berths": {
      "get": {
        "tags": [
          "Port Infrastructure"
        ],
        "summary": "Information about the berths of a port",
        "description": "List of the berths from a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_13"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/portTerminals": {
      "get": {
        "tags": [
          "Port Infrastructure"
        ],
        "summary": "Information about the maritime terminals of a port",
        "description": "List of the maritime terminals from a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_14"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/railTerminals": {
      "get": {
        "tags": [
          "Port Infrastructure"
        ],
        "summary": "Information on all the rail terminals and loading tracks of a port",
        "description": "List of the rail terminals and loading tracks from a port. Rail facilities are caracterized because they have rail bundles of up to 10 rail tracks with lengths of a maximum of 800 meters per track. They are equipped to allow simultaneous batch exchanges (direct transshipment) through the use of rail-mounted gantry cranes that stretch over the rail bundles.\n",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_15"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/marineAids": {
      "get": {
        "tags": [
          "Port Infrastructure"
        ],
        "summary": "Marine aids to navigation",
        "description": "List of port marks in a specific port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_16"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/bathymetry": {
      "get": {
        "tags": [
          "Port Infrastructure"
        ],
        "summary": "Bathymetric data from channels and berths.",
        "description": "Data from the regular hydrographic surveis that are being performed at ports.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_17"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/customsClearanceProcedures": {
      "get": {
        "tags": [
          "Port Procedures"
        ],
        "summary": "Returns a resource where the procedures for clearing the goods in import can be found.",
        "description": "Returns a resource where the procedures for clearing the goods in import can be found.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_18"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/borderInspectionProcedures": {
      "get": {
        "tags": [
          "Port Procedures"
        ],
        "summary": "Returns a resource where the procedures for clearing the goods subject to controls from the border inspection services can be found.",
        "description": "Returns a resource where the procedures for clearing the goods subject to controls from the border inspection services can be found.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_19"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/vgmProcedures": {
      "get": {
        "tags": [
          "Port Procedures"
        ],
        "summary": "Returns a resource where the verified gross mass (VGM) procedures can be found.",
        "description": "Returns a resource where the verified gross mass (VGM) procedures can be found.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_20"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/containerTareWeight": {
      "get": {
        "tags": [
          "Port Procedures"
        ],
        "summary": "Returns the tare weight of a given container.",
        "description": "Returns the tare weight of a given container.",
        "parameters": [
          {
            "name": "containerNumber",
            "in": "query",
            "description": "Container number as is described in ISO6346.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/containerNumber"
            },
            "example": "ABCU1234567"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_21"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/qualityCertificationProcedures": {
      "get": {
        "tags": [
          "Port Procedures"
        ],
        "summary": "Returns a resource where the quality certification procedures from a port can be found.",
        "description": "Returns a resource where the quality certification procedures from a port can be found.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_22"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/qualityCertifiedPartners": {
      "get": {
        "tags": [
          "Port Procedures"
        ],
        "summary": "List of companies that have been certified by the quality seal managers of a port.",
        "description": "List of companies that have been certified by the quality seal managers of a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_23"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/partnerActivities": {
      "get": {
        "tags": [
          "Port Procedures"
        ],
        "summary": "List of possible activities of a partner.",
        "description": "List of possible activities of a partner.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_24"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/pickupProcedures": {
      "get": {
        "tags": [
          "Port Procedures"
        ],
        "summary": "Returns a resource, where the procedures for pick-up containers from the terminal and deliver the empty container to the depot, can be found.",
        "description": "Returns a resource, where the procedures for pick-up containers from the terminal and deliver the empty container to the depot, can be found.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_25"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/deliveryProcedures": {
      "get": {
        "tags": [
          "Port Procedures"
        ],
        "summary": "Returns a resource, where the procedures for pick-up empty containers from the depot and deliver full containers to the terminal, can be found.",
        "description": "Returns a resource, where the procedures for pick-up empty containers from the depot and deliver full containers to the terminal, can be found.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_26"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/approachInstructions": {
      "get": {
        "tags": [
          "Port Procedures"
        ],
        "summary": "Returns a resource where basic information for the approach of the vessels to a port can be found.",
        "description": "Returns a resource where basic information for the approach of the vessels to a port can be found.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_27"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/basicTrafficStatistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Statistical information from the carriage of goods and passengers by seagoing vessels calling at ports.",
        "description": "Statistical information from the carriage of goods and passengers by seagoing vessels calling at ports.\nIt is based on the definitions and classifications as included in the Directive 2009/42/EC of the European Parliament and of the Council of 6 May 2009 on statistical returns in respect of carriage of goods and passenger by sea and later amendments. \n",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_28"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/basicEconomicStatistics": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Statistical information from some economical parameters from a port.",
        "description": "Statistical information from some economical parameters from a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_29"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/typesOfCargo": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Returns a list of types of cargo.",
        "description": "Returns a list of types of cargo.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_30"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/commoditiesList": {
      "get": {
        "tags": [
          "Statistics"
        ],
        "summary": "Returns a list of types of commodities.",
        "description": "Returns a list of types of commodities.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_31"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/realtimeWeather": {
      "get": {
        "tags": [
          "Environment-Weather"
        ],
        "summary": "Returns real-time weather information on the default weather station of a port.",
        "description": "Returns realtime weather information on the default weather station of a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_32"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/weatherForecast": {
      "get": {
        "tags": [
          "Environment-Weather"
        ],
        "summary": "Returns the 5 days weather forecast for a port.",
        "description": "Returns the 5 days weather forecast for a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_33"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/astronomicalData": {
      "get": {
        "tags": [
          "Environment-Weather"
        ],
        "summary": "Returns astronomical data from a port.",
        "description": "Returns astronomical data from a port. Up to date information for sunrise, sunset, moonrise, moonset, moon phase and illumination.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_34"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/seaCondition": {
      "get": {
        "tags": [
          "Environment-Sea State"
        ],
        "summary": "Returns information on the sea condition.",
        "description": "Returns information on the sea condition.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_35"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/wavePrediction": {
      "get": {
        "tags": [
          "Environment-Sea State"
        ],
        "summary": "Returns the prediction of waves.",
        "description": "Returns the prediction of waves, including the component of the wind waves plus the swell.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "forecastedDate",
            "in": "query",
            "description": "Date of the forecast.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/forecastedDate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_36"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/tides": {
      "get": {
        "tags": [
          "Environment-Sea State"
        ],
        "summary": "Returns information about the tides of a port.",
        "description": "Returns information about the tides of a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "forecastedDate",
            "in": "query",
            "description": "Date of the forecast.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/forecastedDate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_37"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/airQuality": {
      "get": {
        "tags": [
          "Environment-Pollution"
        ],
        "summary": "Returns the present value of the Air Quality Index and Level.",
        "description": "Returns the present value of the Air Quality Index and Level.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "apiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_38"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/airPollution": {
      "get": {
        "tags": [
          "Environment-Pollution"
        ],
        "summary": "Returns some common air quality parameters.",
        "description": "Returns some common air quality parameters.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "apiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_39"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/waterQuality": {
      "get": {
        "tags": [
          "Environment-Pollution"
        ],
        "summary": "Returns the present value of the Water Quality Index and Level.",
        "description": "Returns the present value of the Water Quality Index and Level.\nWQI provides a single number that expresses the overall water quality, at a certain location and time, based on several water quality parameters. The objective of WQI is to turn complex water quality data into information that is understandable and usable by the public.\n",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "apiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_40"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/waterPollution": {
      "get": {
        "tags": [
          "Environment-Pollution"
        ],
        "summary": "Returns some common water quality parameters.",
        "description": "Returns some common water quality parameters.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "apiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_41"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/noiseLevel": {
      "get": {
        "tags": [
          "Environment-Pollution"
        ],
        "summary": "Returns the level of noise of a port",
        "description": "Returns the level of noise of a port",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "apiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_42"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/railConnections": {
      "get": {
        "tags": [
          "Rail Transport"
        ],
        "summary": "Returns a list of rail connections from a port.",
        "description": "Returns a list of rail connections from a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_43"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/railInlandTerminals": {
      "get": {
        "tags": [
          "Rail Transport"
        ],
        "summary": "Returns the list of the inland terminals served by rail from a port.",
        "description": "This GET API returns the list of the inland terminals served by rail from a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_44"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/railwayUndertakings": {
      "get": {
        "tags": [
          "Rail Transport"
        ],
        "summary": "List of the railway undertaking companies that operate in one port.",
        "description": "Returns a list of the rail undertaking companies that operate in a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_45"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/railLogisticServiceProviders": {
      "get": {
        "tags": [
          "Rail Transport"
        ],
        "summary": "List of the rail logistic service providers that operate in one port.",
        "description": "Returns a list of the rail logistic service providers that operate in a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_46"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/trainArrivals": {
      "get": {
        "tags": [
          "Rail Transport"
        ],
        "summary": "Returns a list of trains that have arrived or will arrive today at a port.",
        "description": "Returns a list of trains that have arrived or will arrive today at a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_47"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/trainDepartures": {
      "get": {
        "tags": [
          "Rail Transport"
        ],
        "summary": "Returns a list of trains that have departed or will depart today from a port.",
        "description": "Returns a list of trains that have departed or will depart today from a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_48"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/trafficFlowObserved": {
      "get": {
        "tags": [
          "Vehicle Traffic"
        ],
        "summary": "The number of vehicles entering or leaving a port or a terminal through a certain gate and in each period. And segregation of this data by type of vehicles.",
        "description": "Returns the number of vehicles entering or leaving a port or a terminal through a certain gate and in a given period of time. And segregation of this data by type of vehicles.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "vehicleTypes",
            "in": "query",
            "description": "Type of vehicle from the point of view of its structural characteristics.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/vehicleTypes"
            }
          },
          {
            "name": "portGate",
            "in": "query",
            "description": "Access gate",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/gate"
            }
          },
          {
            "name": "flowDirection",
            "in": "query",
            "description": "Flow direction.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/flowDirection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_49"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/accessWaitTime": {
      "get": {
        "tags": [
          "Terminal Performance"
        ],
        "summary": "Estimated waiting time that trucks have to queue before they can enter a terminal.",
        "description": "Returns a list with the estimated waiting time that trucks have to queue before they can enter a terminal.\n\n`Parameters`: Port Code and Terminal identifier\n\n`Returns`: Wait time of gtrucks to get intro terminals\n",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "terminal",
            "in": "query",
            "description": "Code that identifies a terminal.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/terminalCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_50"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/landsideThroughput": {
      "get": {
        "tags": [
          "Terminal Performance"
        ],
        "summary": "The number of units (containers, freight cars,...) that enter or leave a terminal per hour during the present day.",
        "description": "Returns a list with the number of units (containers, freight cars,...) that enter or leave a terminal per hour during the present day.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "terminal",
            "in": "query",
            "description": "Code that identifies a terminal.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/terminalCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_51"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/seasideThroughput": {
      "get": {
        "tags": [
          "Terminal Performance"
        ],
        "summary": "Returns the number of containers loaded or unloaded from vessels on a terminal per hour and during the present day.",
        "description": "eturns the number of containers loaded or unloaded from vessels on a terminal per hour and during the present day.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "terminal",
            "in": "query",
            "description": "Code that identifies a terminal.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/terminalCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_52"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/newsSubscriptionRequest": {
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Subscription request to a news service",
        "description": "Request a subscription to a news service from a port",
        "operationId": "subscriptionRequest",
        "requestBody": {
          "description": "request placed for subscribing to a news service",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscriber"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscriptionReference"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/newsSubscriptionValidation": {
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Last step for subscribing to a news service",
        "description": "Post the validation code is received to fulfill the subscription request to a news service from a port",
        "operationId": "subscriptionValidation",
        "requestBody": {
          "description": "request placed for validating the subscription to a news service",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newsSubscriptionValidation_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/validationMessage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/newsUnsubscriptionRequest": {
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Request to cancel the subscription to a news service",
        "description": "Request to cancel a subscription of a news service from a port",
        "operationId": "unsubscriptionRequest",
        "requestBody": {
          "description": "request placed for unsubscribing to a news service",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newsUnsubscriptionRequest_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unsubscriptionReference"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/newsUnsubscriptionValidation": {
      "post": {
        "tags": [
          "News"
        ],
        "summary": "Last step for cancelling the subscription to a news service",
        "description": "Post the validation code is received to cancel the subscription to a news service from a port",
        "operationId": "unsubscriptionValidation",
        "requestBody": {
          "description": "request placed for validating the unsubscription to a news service",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/newsUnsubscriptionValidation_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/validationMessage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/news": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Returns a list of news",
        "description": "Returns a list of news. The default value is a list of the active news but news that have expired can also be retrieved if the parameter 'publishingStage' is set to EXPIRED and the selection can be refined including the parameter 'fromDate'",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "publishingStage",
            "in": "query",
            "description": "The stage of the publishing process of a notice or news. There are only two possible stages, ACTIVE and EXPIRED. This parameter must be used when the publishing process is EXPIRED. If not provided, the ACTIVE stage is used by default.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/publishingStage"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "The start date of the period for which schedule information is requested. The value is populated in ISO 8601 Date format. If not provided, the current date is used by default.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/fromDate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_53"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/newsCategories": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Returns the list of news categories from a news service of a port",
        "description": "This GET API returns the list of all the category names that a user can subscribe.  Please see the 'newsCategories' attribute which returns an array of noticeCategories names. Each noticeCategories or a combination of noticeCategories can be searched using the syntax options shown below.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_54"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/newsLanguages": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "List of the possible languages from a news service of a port",
        "description": "Returns a list of the possible languages for news published.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_55"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/newsById": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Returns news identified by its unique id.",
        "description": "Returns news identified by its unique id.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "The unique identification of a database register.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_56"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/noticesSubscriptionRequest": {
      "post": {
        "tags": [
          "Notices"
        ],
        "summary": "Subscription request to a notices service",
        "description": "Request a subscription to a notices service from a port",
        "operationId": "noticesSubscriptionRequest",
        "requestBody": {
          "description": "request placed for subscribing to a notices service",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/subscriber"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/subscriptionReference"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/noticesSubscriptionValidation": {
      "post": {
        "tags": [
          "Notices"
        ],
        "summary": "Last step for subscribing to a notices service",
        "description": "Post the validation code is received to fulfill the subscription request to a notices service from a port",
        "operationId": "noticesSubscriptionValidation",
        "requestBody": {
          "description": "request placed for validating the subscription to a notices service",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/noticesSubscriptionValidation_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/validationMessage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/noticesUnsubscriptionRequest": {
      "post": {
        "tags": [
          "Notices"
        ],
        "summary": "Request to cancel the subscription to a notices service",
        "description": "Request to cancel a subscription of a notices service from a port",
        "operationId": "noticesUnsubscriptionRequest",
        "requestBody": {
          "description": "Request placed for unsubscribing to a notices service",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/noticesUnsubscriptionRequest_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/unsubscriptionReference"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/noticesUnsubscriptionValidation": {
      "post": {
        "tags": [
          "Notices"
        ],
        "summary": "Last step for cancelling the subscription to a notices service",
        "description": "Post the validation code is received to cancel the subscription to a notices service from a port",
        "operationId": "noticesUnsubscriptionValidation",
        "requestBody": {
          "description": "request placed for validating the unsubscription to a notices service",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/noticesUnsubscriptionValidation_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/validationMessage"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Order"
          }
        }
      }
    },
    "/notices": {
      "get": {
        "tags": [
          "Notices"
        ],
        "summary": "Returns a list of notices",
        "description": "Returns a list of notices. The default value is a list of the active notices but notices that have expired can also be retrieved if the parameter 'publishingStage' is set to EXPIRED and the selection can be refined including the parameter 'fromDate'",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "publishingStage",
            "in": "query",
            "description": "The stage of the publishing process of a notice or news. There are only two possible stages, ACTIVE and EXPIRED. This parameter must be used when the publishing process is EXPIRED. If not provided, the ACTIVE stage is used by default.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/publishingStage"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "The start date of the period for which schedule information is requested. The value is populated in ISO 8601 Date format. If not provided, the current date is used by default.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/fromDate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_57"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/noticesCategories": {
      "get": {
        "tags": [
          "Notices"
        ],
        "summary": "Returns the list of notices categories from a notices service of a port",
        "description": "This GET API returns the list of all the category names that a user can subscribe.  Please see the 'noticesCategories' attribute which returns an array of noticeCategories names. Each noticeCategories or a combination of noticeCategories can be searched using the syntax options shown below.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_58"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/noticesLanguages": {
      "get": {
        "tags": [
          "Notices"
        ],
        "summary": "List of the possible languages from a notices service of a port",
        "description": "Returns a list of the possible languages for the notices published.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_59"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/noticesById": {
      "get": {
        "tags": [
          "Notices"
        ],
        "summary": "Returns a particular notice identified by its unique id.",
        "description": "Returns a notice identified by its unique id.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "The unique identification of a database register.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_60"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/portRatesAndFees": {
      "get": {
        "tags": [
          "Rates and Fees"
        ],
        "summary": "Returns the URL of the website where rates and fees from a port are published.",
        "description": "Returns the URL of the website where rates and fees from a port are published.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_61"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/shipServices": {
      "get": {
        "tags": [
          "Port Services"
        ],
        "summary": "Returns a list of port services that can be ordered for a ship. Eg. bunkering, marpol, mooring, pilots, tugs,...",
        "description": "Returns a list of port services that can be ordered for a ship. Eg. bunkering, marpol, mooring, pilots, tugs,...",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "shipServiceType",
            "in": "query",
            "description": "Type of ship service.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/shipServiceType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_62"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/serviceTypes": {
      "get": {
        "tags": [
          "Port Services"
        ],
        "summary": "Returns a list of different service types that are offered in a port.",
        "description": "Returns a list of different service types that are offered in a port.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_63"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/holidays": {
      "get": {
        "tags": [
          "Port Calendar"
        ],
        "summary": "Returns a list of holidays in a given period of time of a year and for a given place.",
        "description": "Information about list of public holidays from a requested period of time of a year and a place (country and subdivision).",
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "description": "ISO3166 2 characters country code.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/countryCode"
            }
          },
          {
            "name": "subdivision",
            "in": "query",
            "description": "ubdivision code from ISO 3166 - Codes for the representation of names of countries and their subdivisions.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/subdivisionCode"
            }
          },
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "The start date of the period for which schedule information is requested. The value is populated in ISO 8601 Date format. If not provided, the current date is used by default.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/fromDate"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Last day of a period is expressed as YYYY-MM-DD.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/toDate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_64"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/holidayTypes": {
      "get": {
        "tags": [
          "Port Calendar"
        ],
        "summary": "Returns the list of all the holiday types.",
        "description": "Information about all the holiday types.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_65"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "Port Directory"
        ],
        "summary": "Get some overview data of all the companies from a port or all the companies that perform a specific activity.",
        "description": "Get some overview data of all the companies from a port or all the companies that perform a specific activity.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "activity",
            "in": "query",
            "description": "Activity of a company",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/activity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_66"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/companiesByName": {
      "get": {
        "tags": [
          "Port Directory"
        ],
        "summary": "Get a company by its name or part of it without diacritics. At least three characters have to be included.",
        "description": "Get a company by its name or part of it without diacritics. At least three characters have to be included.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "searchTerm",
            "in": "query",
            "description": "Part of the name of the company without diacritics",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/searchTerm"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_67"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/companyByVat": {
      "get": {
        "tags": [
          "Port Directory"
        ],
        "summary": "Get a company by its VAT number.",
        "description": "Get a company by its VAT number.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          },
          {
            "name": "companyName",
            "in": "query",
            "description": "Vat number of the company",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/companyVat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_68"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    },
    "/companyActivities": {
      "get": {
        "tags": [
          "Port Directory"
        ],
        "summary": "Get a list of all the possible activities for a company or governmental body.",
        "description": "Get a list of all the possible activities for a company or governmental body.",
        "parameters": [
          {
            "name": "portCode",
            "in": "query",
            "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
            "required": false,
            "style": "form",
            "explode": false,
            "schema": {
              "$ref": "#/components/schemas/portCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "headers": {
              "oiapApiVersion": {
                "$ref": "#/components/headers/oiapApiVersion"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_69"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "shipArrivalForecast": {
        "required": [
          "estimatedTimeOfArrival",
          "shipIMONumber",
          "shipName",
          "shipType"
        ],
        "type": "object",
        "description": "Ship that will arrive on a given period of time.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "shipIMONumber": {
                "$ref": "#/components/schemas/shipIMONumber"
              },
              "shipName": {
                "$ref": "#/components/schemas/shipName"
              },
              "shipType": {
                "$ref": "#/components/schemas/shipType"
              },
              "estimatedTimeOfArrival": {
                "$ref": "#/components/schemas/estimatedTimeOfArrival"
              }
            }
          }
        ]
      },
      "shipInPort": {
        "required": [
          "actualTimeOfArrival",
          "estimatedTimeOfDeparture",
          "shipIMONumber",
          "shipName",
          "shipType"
        ],
        "type": "object",
        "description": "Ship that is in port.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "shipIMONumber": {
                "$ref": "#/components/schemas/shipIMONumber"
              },
              "shipName": {
                "$ref": "#/components/schemas/shipName"
              },
              "shipType": {
                "$ref": "#/components/schemas/shipType"
              },
              "actualTimeOfArrival": {
                "$ref": "#/components/schemas/actualTimeOfArrival"
              },
              "estimatedTimeOfDeparture": {
                "$ref": "#/components/schemas/estimatedTimeOfDeparture"
              },
              "berth": {
                "$ref": "#/components/schemas/berth"
              },
              "lastPortOfCall": {
                "$ref": "#/components/schemas/lastPortOfCall"
              }
            }
          }
        ]
      },
      "shipArrival": {
        "required": [
          "berth",
          "estimatedTimeOfArrival",
          "shipIMONumber",
          "shipName",
          "shipType"
        ],
        "type": "object",
        "description": "Ship that has arrived or will arrive today.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "shipIMONumber": {
                "$ref": "#/components/schemas/shipIMONumber"
              },
              "shipName": {
                "$ref": "#/components/schemas/shipName"
              },
              "shipType": {
                "$ref": "#/components/schemas/shipType"
              },
              "actualTimeOfArrival": {
                "$ref": "#/components/schemas/actualTimeOfArrival"
              },
              "estimatedTimeOfArrival": {
                "$ref": "#/components/schemas/estimatedTimeOfArrival"
              },
              "nextPortOfCall": {
                "$ref": "#/components/schemas/lastPortOfCall"
              },
              "berth": {
                "$ref": "#/components/schemas/berth"
              }
            }
          }
        ]
      },
      "shipDeparture": {
        "required": [
          "berth",
          "estimatedTimeOfDeparture",
          "shipIMONumber",
          "shipName",
          "shipType"
        ],
        "type": "object",
        "description": "Ship that has departed or will depart today.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "shipIMONumber": {
                "$ref": "#/components/schemas/shipIMONumber"
              },
              "shipName": {
                "$ref": "#/components/schemas/shipName"
              },
              "shipType": {
                "$ref": "#/components/schemas/shipType"
              },
              "actualTimeOfDeparture": {
                "$ref": "#/components/schemas/actualTimeOfDeparture"
              },
              "estimatedTimeOfDeparture": {
                "$ref": "#/components/schemas/estimatedTimeOfDeparture"
              },
              "nextPortOfCall": {
                "$ref": "#/components/schemas/nextPortOfCall"
              },
              "berth": {
                "$ref": "#/components/schemas/berth"
              }
            }
          }
        ]
      },
      "shipAproximation": {
        "required": [
          "estimatedTimeOfArrival",
          "shipIMONumber",
          "shipName"
        ],
        "type": "object",
        "description": "Ship that has initiated their aproximation manouvres.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "shipIMONumber": {
                "$ref": "#/components/schemas/shipIMONumber"
              },
              "shipName": {
                "$ref": "#/components/schemas/shipName"
              },
              "estimatedTimeOfArrival": {
                "$ref": "#/components/schemas/estimatedTimeOfArrival"
              },
              "shipType": {
                "$ref": "#/components/schemas/shipType"
              },
              "lastPortOfCall": {
                "$ref": "#/components/schemas/lastPortOfCall"
              }
            }
          }
        ]
      },
      "ferryArrival": {
        "required": [
          "berth",
          "estimatedTimeOfArrival",
          "ferryOperator",
          "shipName"
        ],
        "type": "object",
        "description": "Ferry that has arrived or will arrive today.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "shipName": {
                "$ref": "#/components/schemas/shipName"
              },
              "ferryOperator": {
                "$ref": "#/components/schemas/ferryOperator"
              },
              "actualTimeOfArrival": {
                "$ref": "#/components/schemas/actualTimeOfArrival"
              },
              "estimatedTimeOfArrival": {
                "$ref": "#/components/schemas/estimatedTimeOfArrival"
              },
              "lastPortOfCall": {
                "$ref": "#/components/schemas/lastPortOfCall"
              },
              "berth": {
                "$ref": "#/components/schemas/berth"
              }
            }
          }
        ]
      },
      "ferryDeparture": {
        "required": [
          "berth",
          "estimatedTimeOfDeparture",
          "ferryOperator",
          "shipName"
        ],
        "type": "object",
        "description": "Ferry that has departed or will depart today.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "shipName": {
                "$ref": "#/components/schemas/shipName"
              },
              "ferryOperator": {
                "$ref": "#/components/schemas/ferryOperator"
              },
              "actualTimeOfDeparture": {
                "$ref": "#/components/schemas/actualTimeOfDeparture"
              },
              "estimatedTimeOfDeparture": {
                "$ref": "#/components/schemas/estimatedTimeOfDeparture"
              },
              "nextPortOfCall": {
                "$ref": "#/components/schemas/nextPortOfCall"
              },
              "berth": {
                "$ref": "#/components/schemas/berth"
              }
            }
          }
        ]
      },
      "cruiseCall": {
        "required": [
          "cruiseLine",
          "estimatedTimeOfArrival",
          "estimatedTimeOfDeparture",
          "facility",
          "shipName"
        ],
        "type": "object",
        "description": "Information about next cruise ship call.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "shipName": {
                "$ref": "#/components/schemas/shipName"
              },
              "cruiseLine": {
                "$ref": "#/components/schemas/cruiseLine"
              },
              "estimatedTimeOfArrival": {
                "$ref": "#/components/schemas/estimatedTimeOfArrival"
              },
              "estimatedTimeOfDeparture": {
                "$ref": "#/components/schemas/estimatedTimeOfDeparture"
              },
              "facility": {
                "$ref": "#/components/schemas/facility"
              }
            }
          }
        ]
      },
      "linerService": {
        "required": [
          "coveredGeographicalAreas",
          "linerCarriers",
          "linerSailingFrequency",
          "linerServiceName",
          "linerServiceType"
        ],
        "type": "object",
        "description": "List of attributes that describe a liner service.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "linerServiceName": {
                "$ref": "#/components/schemas/linerServiceName"
              },
              "linerServiceCode": {
                "$ref": "#/components/schemas/linerServiceCode"
              },
              "linerCarriers": {
                "$ref": "#/components/schemas/linerCarriers"
              },
              "linkedPorts": {
                "$ref": "#/components/schemas/linkedPorts"
              },
              "coveredGeographicalAreas": {
                "$ref": "#/components/schemas/coveredGeographicalAreas"
              },
              "linerServiceType": {
                "$ref": "#/components/schemas/linerServiceType"
              },
              "linerServiceCapacity": {
                "$ref": "#/components/schemas/linerServiceCapacity"
              },
              "linerSailingFrequency": {
                "$ref": "#/components/schemas/linerSailingFrequency"
              },
              "linerDurationOfRotation": {
                "$ref": "#/components/schemas/linerDurationOfRotation"
              }
            }
          }
        ]
      },
      "linerCarriers": {
        "type": "array",
        "description": "Carriers that operate in a liner service.",
        "items": {
          "$ref": "#/components/schemas/linerCarrier"
        }
      },
      "linkedPorts": {
        "type": "array",
        "description": "Ports that are served by a liner service.",
        "items": {
          "$ref": "#/components/schemas/linkedPort"
        }
      },
      "coveredGeographicalAreas": {
        "type": "array",
        "description": "Geographical area covered by a liner service.",
        "items": {
          "$ref": "#/components/schemas/coastalArea"
        }
      },
      "portInfrastructure": {
        "required": [
          "portName"
        ],
        "type": "object",
        "description": "List of main attibutes from the infrastructure of a port.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "portName": {
                "$ref": "#/components/schemas/portName"
              },
              "portCode": {
                "$ref": "#/components/schemas/portCode"
              },
              "portCoordinates": {
                "$ref": "#/components/schemas/coordinates"
              },
              "totalPortArea": {
                "$ref": "#/components/schemas/totalArea"
              },
              "totalBerthLength": {
                "$ref": "#/components/schemas/berthLength"
              },
              "totalCoveredWarehouses": {
                "$ref": "#/components/schemas/coveredWarehouses"
              }
            }
          }
        ]
      },
      "portTerminal": {
        "required": [
          "terminalName"
        ],
        "type": "object",
        "description": "Multifunctional logistics complex providing a full range of services for handling cargo.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "terminalName": {
                "$ref": "#/components/schemas/terminalName"
              },
              "terminalCode": {
                "$ref": "#/components/schemas/terminalCode"
              },
              "totalArea": {
                "$ref": "#/components/schemas/totalArea"
              },
              "coveredWarehouses": {
                "$ref": "#/components/schemas/coveredWarehouses"
              },
              "terminalGates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/gate"
                }
              },
              "berths": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/berth"
                }
              }
            }
          }
        ]
      },
      "railTerminal": {
        "required": [
          "railTerminalName"
        ],
        "type": "object",
        "description": "Attributes of a rail terminal facility.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "railTerminalName": {
                "$ref": "#/components/schemas/railTerminalName"
              },
              "railTerminalCode": {
                "$ref": "#/components/schemas/railTerminalCode"
              },
              "freightType": {
                "$ref": "#/components/schemas/freightType"
              },
              "coordinates": {
                "$ref": "#/components/schemas/coordinates"
              },
              "railBundles": {
                "$ref": "#/components/schemas/railBundles"
              },
              "trackMaximumLength": {
                "$ref": "#/components/schemas/trackMaximumLength"
              },
              "trackGauges": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/trackGauge"
                }
              },
              "gantryCranes": {
                "$ref": "#/components/schemas/gantryCranes"
              }
            }
          }
        ]
      },
      "portMark": {
        "required": [
          "coordinates",
          "markType"
        ],
        "type": "object",
        "description": "Buoys, Beacons and Marks, according to the IALA Buoyage System that includes five buoy types: cardinal, lateral, isolated danger, special and safe water marks.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "markRegion": {
                "$ref": "#/components/schemas/markRegion"
              },
              "markType": {
                "$ref": "#/components/schemas/markType"
              },
              "markTop": {
                "$ref": "#/components/schemas/markTop"
              },
              "markColour": {
                "$ref": "#/components/schemas/markColour"
              },
              "shapeOfBuoy": {
                "$ref": "#/components/schemas/shapeOfBuoy"
              },
              "markLight": {
                "$ref": "#/components/schemas/markLight"
              },
              "coordinates": {
                "$ref": "#/components/schemas/coordinates"
              }
            }
          }
        ]
      },
      "bathymetry": {
        "required": [
          "underwaterDepth"
        ],
        "type": "object",
        "description": "Depth in a singular point of the port waters.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "singularPoint": {
                "$ref": "#/components/schemas/singularPoint"
              },
              "underwaterDepth": {
                "$ref": "#/components/schemas/underwaterDepth"
              }
            }
          }
        ]
      },
      "customsClearanceProcedure": {
        "required": [
          "customsClearanceUri"
        ],
        "type": "object",
        "description": "URI where a customs clearance procedure from a port can be found.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "customsClearanceDescription": {
                "type": "string",
                "description": "Procedure description",
                "enum": [
                  "All shipments of goods entering the European Union from third countries are subject to Customs controls. All goods may be subject to the presentation of several documents and payments, as the payment of Customs duties based on the content of the shipment, payment of national taxes (VAT) or local taxes where applicable, payment of special taxes on tobacco, alcohol, etc., the cost of processing of Single Administrative Document (SAD) for imports, the costs arising from border safety controls, depending on the nature of the shipment (sanitary, pharmaceutical, veterinary, etc.). As a part of the customs clearance process, customs can carry out docummentary or physical inspections, and those can be carried out inside the cargo terminals, at the terminal yard or in a warehouse, but they can also inspect containers, platforms or trucks using a non-intrusive technology as an X-ray scanner. It is the recipient's responsibility to know the conditions for importing their shipment (prohibitions, restrictions, limitations, etc.) and to find out what documents may be required on arrival, including the commercial invoice, certificate of origin, licences and special authorisations for border controls, etc."
                ]
              },
              "customsClearanceUri": {
                "$ref": "#/components/schemas/uri"
              }
            }
          }
        ]
      },
      "borderInspectionProcedure": {
        "required": [
          "borderInspectionUri"
        ],
        "type": "object",
        "description": "URI where a border inspection procedure from a port can be found.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "borderInspectionDescription": {
                "type": "string",
                "description": "Procedure description",
                "enum": [
                  "The border inspection post (BIP) is a controlled and authorised station for customs and sanitary controls of goods. Physical and documentary inspections are carried out at these posts as well as analysis of samples. A Border Control Post is an inspection post designated and approved in line with EU legislation for carrying out checks on animals and animal products arriving from third countries at a European Union border. These checks are carried out to protect animal and public health, and animal welfare. As a part of the border clearance process, border inspection services can carry out docummentary or physical inspections, and those can be carried out inside the cargo terminals but usually the physical inspections are carried out at the Border Inspection Posts (BIP), where coexist several specific inspection areas as a designated point of import (DPI), a designated point of entry (DPE) or a border control post (BCP). It is the recipient's responsibility to know the conditions for importing their shipment (prohibitions, restrictions, limitations, etc.) and to find out what documents may be required on arrival, including the commercial invoice, certificate of origin, licences and special certifications for border controls, etc."
                ]
              },
              "borderInspectionUri": {
                "$ref": "#/components/schemas/uri"
              }
            }
          }
        ]
      },
      "vgmProcedure": {
        "required": [
          "vgmProcedureUri"
        ],
        "type": "object",
        "description": "URI where a VGM procedure from a port can be found.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "vgmProcedureDescription": {
                "type": "string",
                "description": "Procedure description",
                "enum": [
                  "As the International Maritime Organisation (IMO) declare: *\"discrepancies between the declared gross mass and the actual gross mass of a packed container could have an adverse impact on the safety of the ship, seafarers and shore-side workers, by leading to incorrect vessel stowage decisions and potentially collapsed container stacks or loss of containers overboard\"*. The IMO established a requirement that packed containers must be weighed to obtain their actual gross mass prior to vessel loading.  This requirement is included in the Guidelines regarding the verified gross mass of a container carrying cargo (MSC.1/Circ.1475) and the adoption of amendment to SOLAS regulation VI/2 requires the mandatory verification of the gross mass of packed containers (resolution MSC.380(94)). The aforementioned SOLAS amendments introduce two main new requirements:  1. the shipper is responsible for providing the verified weight by stating it in the shipping document and submitting it to the master or his representative and to the terminal representative sufficiently in advance to be used in the preparation of the ship stowage plan; and  2. the verified gross mass is a condition for loading a packed container onto a ship. A prerequisite for the container to be loaded onto a ship to which the SOLAS regulations apply is the availability of the verified gross mass of a packed container sufficiently in advance to the terminal representative and to the master or his representative to be used in the ship stowage plan.  However, it does not constitute an entitlement for loading, because the master retains ultimate discretion in deciding whether to accept a packed container for loading onto his ship. The verification of the gross mass can be achieved by either of two methods: 1. weighing the packed container; or 2. weighing all packages and cargo items, including the mass of pallets, dunnage and other securing material to be packed in the container and adding the tare mass of the container to the sum of the single masses, using a certified method approved by the competent authority of the State in which packing of the container was completed."
                ]
              },
              "vgmProcedureUri": {
                "$ref": "#/components/schemas/uri"
              }
            }
          }
        ]
      },
      "containerTare": {
        "required": [
          "equipmentTare"
        ],
        "type": "object",
        "description": "Tare weight of a container.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "containerNumber": {
                "$ref": "#/components/schemas/containerNumber"
              },
              "equipmentTare": {
                "$ref": "#/components/schemas/equipmentTare"
              },
              "iso6346": {
                "$ref": "#/components/schemas/iso6346"
              }
            }
          }
        ]
      },
      "qualityCertificationProcedure": {
        "required": [
          "qualityCertificationUri"
        ],
        "type": "object",
        "description": "URI where the quality certification procedure from a port can be found.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "qualityCertificationDescription": {
                "type": "string",
                "description": "Procedure description",
                "enum": [
                  "Several ports have developed own brands for their quality label schemas. There are some ports that every day manage the transportation of thousands of shipments. And the job of each port is to treat each one as it was the only one. To ensure that each shipment receives the treatment it deserves, some ports have created a quality brand that identifies the companies operating at that port that had adopted a commitment to efficiency the end customers with the utmost satisfaction. With this quality level the ports recognise and certify organisations involved and commited to the most rigorous standards of reliability."
                ]
              },
              "qualityCertificationUri": {
                "$ref": "#/components/schemas/uri"
              }
            }
          }
        ]
      },
      "qualityCertifiedPartner": {
        "type": "object",
        "description": "Information about companies and governmental bobies that have been certified with the quality level of a port.",
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "companyInfo": {
                "$ref": "#/components/schemas/companyInfo"
              },
              "governmentalBodyDetails": {
                "$ref": "#/components/schemas/companyInfo"
              }
            }
          }
        ]
      },
      "pickupProcedure": {
        "required": [
          "pickupProcedureUri"
        ],
        "type": "object",
        "description": "URI where the container pick up procedure from a port can be found.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "pickupProcedureDescription": {
                "type": "string",
                "description": "Procedure description",
                "enum": [
                  "Container traffic has a big economic impact in ports and the area that they serve. Logistic operators need to know the procedures that they have to follow for pick-up containes from a port. In this domain are included some APIs related with the information exchanged using the EDI messages for land operations with full and empty containers."
                ]
              },
              "pickupProcedureUri": {
                "$ref": "#/components/schemas/uri"
              }
            }
          }
        ]
      },
      "deliveryProcedure": {
        "required": [
          "deliveryProcedureUri"
        ],
        "type": "object",
        "description": "URI where the container delivery procedure from a port can be found.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "deliveryProcedureDescription": {
                "type": "string",
                "description": "Procedure description",
                "enum": [
                  "Container traffic has a big economic impact in ports and the area that they serve. Logistic operators need to know the procedures that they have to follow for delivery containes to a port. In this domain are included some APIs related with the information exchanged using the EDI messages for land operations with full and empty containers."
                ]
              },
              "deliveryProcedureUri": {
                "$ref": "#/components/schemas/uri"
              }
            }
          }
        ]
      },
      "approachInstructions": {
        "required": [
          "approachInstructionsUri"
        ],
        "type": "object",
        "description": "Basic information for the approach of the vessels to a port.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "approachInstructionsDescription": {
                "type": "string",
                "description": "Procedure description",
                "enum": [
                  "The purpose of this procedure is to regulate the management of maritime traffic in the waters of the service area of a Port. This shall be achieved, on the one hand, by setting standards and general technical criteria governing the system of navigation in the port waters, providing general services, and management and control mechanisms to facilitate the proper planning and supervision of maritime operations; and on the other hand, by implementing the route of the ship and reporting system in the approaches of the port to achieve a safer and more efficient port access traffic flows"
                ]
              },
              "approachInstructionsUri": {
                "$ref": "#/components/schemas/uri"
              }
            }
          }
        ]
      },
      "basicTrafficStatistics": {
        "required": [
          "dataset",
          "quarter",
          "reportingPort",
          "year"
        ],
        "type": "object",
        "description": "Statistical information from the traffic flows from a port.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "dataset": {
                "$ref": "#/components/schemas/dataset"
              },
              "year": {
                "$ref": "#/components/schemas/year"
              },
              "quarter": {
                "$ref": "#/components/schemas/quarter"
              },
              "reportingPort": {
                "$ref": "#/components/schemas/reportingPort"
              },
              "flowDirection": {
                "$ref": "#/components/schemas/flowDirection"
              },
              "portLoadingUnloading": {
                "$ref": "#/components/schemas/portLoadingUnloading"
              },
              "coastalArea": {
                "$ref": "#/components/schemas/coastalArea"
              },
              "typeOfCargo": {
                "$ref": "#/components/schemas/typeOfCargo"
              },
              "commodity": {
                "$ref": "#/components/schemas/commodity"
              },
              "grossWeightOfGoods": {
                "$ref": "#/components/schemas/grossWeight"
              },
              "unitsTotal": {
                "$ref": "#/components/schemas/units"
              },
              "unitsEmpty": {
                "$ref": "#/components/schemas/units"
              },
              "ferryPassengers": {
                "$ref": "#/components/schemas/passengers"
              },
              "cruisePassengers": {
                "$ref": "#/components/schemas/passengers"
              },
              "vesselType": {
                "$ref": "#/components/schemas/shipType"
              },
              "vesselNationality": {
                "$ref": "#/components/schemas/vesselNationality"
              },
              "vessels": {
                "$ref": "#/components/schemas/units"
              },
              "vesselDwt": {
                "$ref": "#/components/schemas/vesselDwt"
              },
              "vesselGt": {
                "$ref": "#/components/schemas/vesselGt"
              }
            }
          }
        ]
      },
      "basicEconomicData": {
        "required": [
          "reportingPort",
          "year"
        ],
        "type": "object",
        "description": "URI where a border inspection procedure from a port can be found.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "year": {
                "$ref": "#/components/schemas/year"
              },
              "reportingPort": {
                "$ref": "#/components/schemas/reportingPort"
              },
              "currency": {
                "$ref": "#/components/schemas/currency"
              },
              "netProffit": {
                "$ref": "#/components/schemas/netProffit"
              },
              "operatingProffit": {
                "$ref": "#/components/schemas/operatingProffit"
              },
              "financialResult": {
                "$ref": "#/components/schemas/financialResult"
              },
              "netTurnover": {
                "$ref": "#/components/schemas/netTurnover"
              },
              "ebitda": {
                "$ref": "#/components/schemas/ebitda"
              },
              "cashFlow": {
                "$ref": "#/components/schemas/cashFlow"
              },
              "investments": {
                "$ref": "#/components/schemas/investments"
              }
            }
          }
        ]
      },
      "realtimeWeather": {
        "required": [
          "dateObserved"
        ],
        "type": "object",
        "description": "Realtime weather information.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "dataProvider": {
                "$ref": "#/components/schemas/dataProvider"
              },
              "name": {
                "$ref": "#/components/schemas/name"
              },
              "location": {
                "$ref": "#/components/schemas/location"
              },
              "address": {
                "$ref": "#/components/schemas/address"
              },
              "dateObserved": {
                "$ref": "#/components/schemas/dateObserved"
              },
              "source": {
                "$ref": "#/components/schemas/source"
              },
              "refDevice": {
                "$ref": "#/components/schemas/refDevice"
              },
              "refPointOfInterest": {
                "$ref": "#/components/schemas/refPointOfInterest"
              },
              "weatherTypes": {
                "type": "array",
                "description": "The observed weather types. It is represented by a comma separated list of weather statuses, for instance overcast, lightRain.",
                "items": {
                  "$ref": "#/components/schemas/weatherType"
                }
              },
              "dewPoint": {
                "$ref": "#/components/schemas/dewPoint"
              },
              "visibility": {
                "$ref": "#/components/schemas/visibility"
              },
              "temperature": {
                "$ref": "#/components/schemas/temperature"
              },
              "feelsLikeTemperature": {
                "$ref": "#/components/schemas/feelsLikeTemperature"
              },
              "relativeHumidity": {
                "$ref": "#/components/schemas/relativeHumidity"
              },
              "precipitation": {
                "$ref": "#/components/schemas/precipitation"
              },
              "windDirection": {
                "$ref": "#/components/schemas/windDirection"
              },
              "windSpeed": {
                "$ref": "#/components/schemas/windSpeed"
              },
              "atmosphericPressure": {
                "$ref": "#/components/schemas/atmosphericPressure"
              },
              "pressureTendency": {
                "$ref": "#/components/schemas/pressureTendency"
              },
              "solarRadiation": {
                "$ref": "#/components/schemas/solarRadiation"
              },
              "illuminance": {
                "$ref": "#/components/schemas/illuminance"
              }
            }
          }
        ]
      },
      "weatherForecast": {
        "required": [
          "targetData"
        ],
        "type": "object",
        "description": "Weather forecast information.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "forecastedDate": {
                "$ref": "#/components/schemas/forecastedDate"
              },
              "atmosphericPressure": {
                "$ref": "#/components/schemas/atmosphericPressure"
              },
              "dayMaximum": {
                "$ref": "#/components/schemas/weatherForecast_dayMaximum"
              },
              "dayMinimum": {
                "$ref": "#/components/schemas/weatherForecast_dayMinimum"
              },
              "precipitationProbability": {
                "$ref": "#/components/schemas/precipitationProbability"
              },
              "cloudCover": {
                "$ref": "#/components/schemas/cloudCover"
              },
              "dataProvider": {
                "type": "string",
                "description": "A sequence of characters identifying the provider of the harmonised data entity."
              }
            }
          }
        ]
      },
      "astronomy": {
        "type": "object",
        "description": "Astronomical data.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "sunrise": {
                "$ref": "#/components/schemas/sunrise"
              },
              "sunset": {
                "$ref": "#/components/schemas/sunset"
              },
              "moonrise": {
                "$ref": "#/components/schemas/moonrise"
              },
              "moonset": {
                "$ref": "#/components/schemas/moonset"
              },
              "moonPhase": {
                "$ref": "#/components/schemas/moonPhase"
              },
              "illumination": {
                "$ref": "#/components/schemas/illumination"
              }
            }
          }
        ]
      },
      "seaCondition": {
        "type": "object",
        "description": "Sea condition.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "surfaceTemperature": {
                "$ref": "#/components/schemas/surfaceTemperature"
              },
              "waveHeight": {
                "$ref": "#/components/schemas/waveHeight"
              },
              "waveLevel": {
                "$ref": "#/components/schemas/waveLevel"
              },
              "wavePeriod": {
                "$ref": "#/components/schemas/wavePeriod"
              },
              "source": {
                "$ref": "#/components/schemas/source"
              }
            }
          }
        ]
      },
      "wavePrediction": {
        "required": [
          "forecastedDate",
          "waveHeight"
        ],
        "type": "object",
        "description": "Wave prediction.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "forecastedDate": {
                "$ref": "#/components/schemas/forecastedDate"
              },
              "waveHeight": {
                "$ref": "#/components/schemas/waveHeight"
              },
              "swellHeight": {
                "$ref": "#/components/schemas/swellHeight"
              },
              "swellPeriod": {
                "$ref": "#/components/schemas/swellPeriod"
              },
              "swellDirection": {
                "$ref": "#/components/schemas/swellDirection"
              },
              "windDirection": {
                "$ref": "#/components/schemas/windDirection"
              },
              "windSpeed": {
                "$ref": "#/components/schemas/windSpeed"
              }
            }
          }
        ]
      },
      "tides": {
        "required": [
          "forecastedDate"
        ],
        "type": "object",
        "properties": {
          "forecastedDate": {
            "$ref": "#/components/schemas/forecastedDate"
          },
          "highTide": {
            "$ref": "#/components/schemas/tides_highTide"
          },
          "lowTide": {
            "$ref": "#/components/schemas/tides_lowTide"
          }
        },
        "description": "Tidal information."
      },
      "airQuality": {
        "type": "object",
        "description": "Air Quality Index (AQI) and level.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "airQualityIndex": {
                "$ref": "#/components/schemas/airQualityIndex"
              },
              "airQualityLevel": {
                "$ref": "#/components/schemas/airQualityLevel"
              }
            }
          }
        ]
      },
      "airParameters": {
        "type": "object",
        "description": "Values of several parameters that measure the air quality.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "airQualityIndex": {
                "$ref": "#/components/schemas/airQualityIndex"
              },
              "CO": {
                "$ref": "#/components/schemas/co"
              },
              "NONO": {
                "$ref": "#/components/schemas/nono"
              },
              "NO2": {
                "$ref": "#/components/schemas/no2"
              },
              "NOx": {
                "$ref": "#/components/schemas/nox"
              },
              "SO2": {
                "$ref": "#/components/schemas/so2"
              }
            }
          }
        ]
      },
      "waterQuality": {
        "required": [
          "waterQualityIndex"
        ],
        "type": "object",
        "description": "Water Quality Index (WQI) and level.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "waterQualityIndex": {
                "$ref": "#/components/schemas/waterQualityIndex"
              },
              "waterQualityLevel": {
                "$ref": "#/components/schemas/waterQualityLevel"
              }
            }
          }
        ]
      },
      "waterParameters": {
        "type": "object",
        "description": "Water quality parameters and chemical agents.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "waterTemperature": {
                "$ref": "#/components/schemas/waterTemperature"
              },
              "salinity": {
                "$ref": "#/components/schemas/salinity"
              },
              "ph": {
                "$ref": "#/components/schemas/ph"
              },
              "turbidity": {
                "$ref": "#/components/schemas/turbidity"
              },
              "o2": {
                "$ref": "#/components/schemas/o2"
              },
              "tss": {
                "$ref": "#/components/schemas/tss"
              },
              "tds": {
                "$ref": "#/components/schemas/tds"
              },
              "nitrates": {
                "$ref": "#/components/schemas/nitrates"
              },
              "nitrites": {
                "$ref": "#/components/schemas/nitrites"
              },
              "ammonia": {
                "$ref": "#/components/schemas/ammonia"
              },
              "silicate": {
                "$ref": "#/components/schemas/silicate"
              },
              "phosphate": {
                "$ref": "#/components/schemas/phosphate"
              }
            }
          }
        ]
      },
      "noiseLevel": {
        "required": [
          "noiseLevel"
        ],
        "type": "object",
        "description": "Noise level, expressed in dB.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "noiseLevel": {
                "$ref": "#/components/schemas/noiseLevel_1"
              }
            }
          }
        ]
      },
      "railConnection": {
        "type": "object",
        "description": "Inland railway station connected to a port and logistic service provider that offers this service.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "railService": {
                "$ref": "#/components/schemas/railService"
              },
              "railwayStationNearestCity": {
                "$ref": "#/components/schemas/railwayStationNearestCity"
              },
              "railTerminalLocode": {
                "$ref": "#/components/schemas/railTerminalLocode"
              },
              "railTerminalCode": {
                "$ref": "#/components/schemas/railTerminalCode"
              },
              "railTerminalName": {
                "$ref": "#/components/schemas/railTerminalName"
              },
              "railDirection": {
                "$ref": "#/components/schemas/railDirection"
              },
              "railLogisticServiceProvider": {
                "$ref": "#/components/schemas/railLogisticServiceProvider_1"
              }
            }
          }
        ]
      },
      "inlandTerminal": {
        "type": "object",
        "description": "Rail destinations served by one port",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "locode": {
                "$ref": "#/components/schemas/locode"
              },
              "railTerminalCode": {
                "$ref": "#/components/schemas/railTerminalCode"
              },
              "railTerminalName": {
                "$ref": "#/components/schemas/railTerminalName"
              }
            }
          }
        ]
      },
      "railwayUndertaking": {
        "required": [
          "companyName"
        ],
        "type": "object",
        "description": "The rail undertaking is the entity responsible for running the trains and must have a valid license that shows that is authorized to run the train.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "companyName": {
                "$ref": "#/components/schemas/companyName"
              }
            }
          }
        ]
      },
      "railLogisticServiceProvider": {
        "required": [
          "companyName"
        ],
        "type": "object",
        "description": "A Logistic Service Provider (LSP) is a provider of logistic services who provides the goods for transport (not necessarily the owner of the goods). The LSP can be a freight forwarder, a shipping agent or a company dedicated exclussivelly to the rail transport of goods.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "companyName": {
                "$ref": "#/components/schemas/companyName"
              }
            }
          }
        ]
      },
      "trainArrivals": {
        "required": [
          "estimatedTimeOfArrival",
          "placeOfDeparture",
          "placeOfDestination",
          "trainType"
        ],
        "type": "object",
        "description": "List of trains that have arrived or will arrive today.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "trainType": {
                "$ref": "#/components/schemas/trainType"
              },
              "placeOfDeparture": {
                "$ref": "#/components/schemas/placeOfDeparture"
              },
              "placeOfDestination": {
                "$ref": "#/components/schemas/placeOfDestination"
              },
              "estimatedTimeOfArrival": {
                "$ref": "#/components/schemas/estimatedTimeOfArrival"
              },
              "actualTimeOfArrival": {
                "$ref": "#/components/schemas/actualTimeOfArrival"
              }
            }
          }
        ]
      },
      "trainDepartures": {
        "required": [
          "estimatedTimeOfDeparture",
          "placeOfDeparture",
          "placeOfDestination",
          "trainType"
        ],
        "type": "object",
        "description": "List of trains that have departed or will depart today.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "trainType": {
                "$ref": "#/components/schemas/trainType"
              },
              "placeOfDeparture": {
                "$ref": "#/components/schemas/placeOfDeparture"
              },
              "placeOfDestination": {
                "$ref": "#/components/schemas/placeOfDestination"
              },
              "estimatedTimeOfDeparture": {
                "$ref": "#/components/schemas/estimatedTimeOfDeparture"
              },
              "actualTimeOfDeparture": {
                "$ref": "#/components/schemas/actualTimeOfDeparture"
              }
            }
          }
        ]
      },
      "vehicleTraffic": {
        "required": [
          "vehicleTraffic"
        ],
        "type": "object",
        "description": "The number of vehicles entering or leaving a port or a terminal.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "portCode": {
                "$ref": "#/components/schemas/portCode"
              },
              "vehicleTypes": {
                "$ref": "#/components/schemas/vehicleTypes"
              },
              "portGate": {
                "$ref": "#/components/schemas/gate"
              },
              "vehicleTraffic": {
                "$ref": "#/components/schemas/units"
              }
            }
          }
        ]
      },
      "accessTime": {
        "required": [
          "terminalCode"
        ],
        "type": "object",
        "description": "Estimated period of time, in minites, that trucks have to queue before they can enter a terminal.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "terminalCode": {
                "$ref": "#/components/schemas/terminalCode"
              },
              "waitTime": {
                "$ref": "#/components/schemas/waitTime"
              }
            }
          }
        ]
      },
      "throughput": {
        "required": [
          "terminalCode"
        ],
        "type": "object",
        "description": "Flow of goods or equipment units, expressed as movements per hour.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "terminalCode": {
                "$ref": "#/components/schemas/terminalCode"
              },
              "flowDirection": {
                "$ref": "#/components/schemas/flowDirection"
              },
              "hourReported": {
                "$ref": "#/components/schemas/hour"
              },
              "throughput": {
                "$ref": "#/components/schemas/throughput_1"
              }
            }
          }
        ]
      },
      "subscriber": {
        "required": [
          "categories",
          "contactInfo",
          "language"
        ],
        "type": "object",
        "description": "A subscriber identified by an email or a phone number.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "contactInfo": {
                "$ref": "#/components/schemas/contactInfo"
              },
              "name": {
                "$ref": "#/components/schemas/name"
              },
              "surname": {
                "$ref": "#/components/schemas/surname"
              },
              "company": {
                "$ref": "#/components/schemas/companyOverviewInfo"
              },
              "categories": {
                "$ref": "#/components/schemas/newsCategory"
              },
              "language": {
                "$ref": "#/components/schemas/language"
              }
            }
          }
        ]
      },
      "news": {
        "required": [
          "id",
          "language",
          "startTime",
          "subject"
        ],
        "type": "object",
        "description": "News from its unique id.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              },
              "language": {
                "$ref": "#/components/schemas/language"
              },
              "subject": {
                "$ref": "#/components/schemas/subject"
              },
              "content": {
                "$ref": "#/components/schemas/content"
              },
              "category": {
                "$ref": "#/components/schemas/noticeCategory"
              },
              "fromDate": {
                "$ref": "#/components/schemas/fromDate"
              },
              "toDate": {
                "$ref": "#/components/schemas/toDate"
              },
              "uri": {
                "$ref": "#/components/schemas/uri"
              }
            }
          }
        ]
      },
      "newsCategories": {
        "type": "array",
        "description": "A list of news categories.",
        "example": [
          "Traffic",
          "Environment",
          "Economy",
          "Stakeholders",
          "Infrastructure",
          "Presentations"
        ],
        "items": {
          "$ref": "#/components/schemas/newsCategory"
        }
      },
      "newsLanguages": {
        "type": "array",
        "description": "A list of languages available for news.",
        "example": [
          "ca",
          "es",
          "en",
          "fr"
        ],
        "items": {
          "$ref": "#/components/schemas/newsLanguage"
        }
      },
      "validationMessage": {
        "type": "string",
        "example": "Your request has been approved"
      },
      "notice": {
        "required": [
          "id",
          "language",
          "startTime",
          "subject"
        ],
        "type": "object",
        "description": "A notice from its unique id.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              },
              "category": {
                "$ref": "#/components/schemas/alertCategory"
              },
              "subCategory": {
                "$ref": "#/components/schemas/alertSubCategory"
              },
              "severity": {
                "$ref": "#/components/schemas/severity"
              },
              "subject": {
                "$ref": "#/components/schemas/subject"
              },
              "content": {
                "$ref": "#/components/schemas/content"
              },
              "dateIssued": {
                "$ref": "#/components/schemas/dateIssued"
              },
              "fromDate": {
                "$ref": "#/components/schemas/fromDate"
              },
              "toDate": {
                "$ref": "#/components/schemas/toDate"
              },
              "uri": {
                "$ref": "#/components/schemas/uri"
              },
              "language": {
                "$ref": "#/components/schemas/language"
              },
              "alertSource": {
                "$ref": "#/components/schemas/alertSource"
              }
            }
          }
        ]
      },
      "noticesCategories": {
        "type": "array",
        "description": "A list of notices categories.",
        "example": [
          "Ship arrival",
          "Ship departure",
          "Sea state",
          "Pollution warning",
          "Traffic status",
          "Terminal notices"
        ],
        "items": {
          "$ref": "#/components/schemas/noticeCategory"
        }
      },
      "noticesLanguages": {
        "type": "array",
        "description": "A list of languages available for the notices.",
        "example": [
          "ca",
          "es",
          "en",
          "fr"
        ],
        "items": {
          "$ref": "#/components/schemas/noticeLanguage"
        }
      },
      "ratesAndFeesUrl": {
        "type": "object",
        "description": "URI where a customs clearance procedure from a port can be found.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "ratesAndFeesUrl": {
                "$ref": "#/components/schemas/uri"
              }
            }
          }
        ]
      },
      "shipService": {
        "required": [
          "shipService"
        ],
        "type": "object",
        "description": "Information about a port service that can be ordered for a ship.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "shipService": {
                "$ref": "#/components/schemas/shipServiceType"
              },
              "companyName": {
                "$ref": "#/components/schemas/companyName"
              },
              "contactInfo": {
                "$ref": "#/components/schemas/contactInfo"
              },
              "servedShipTypes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/shipType"
                }
              }
            }
          }
        ]
      },
      "holiday": {
        "required": [
          "holidayDate"
        ],
        "type": "object",
        "description": "A day on which normal activities, especially business or work including school, are suspended or reduced.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "holidayDate": {
                "$ref": "#/components/schemas/holidayDate"
              },
              "holidayType": {
                "$ref": "#/components/schemas/holidayType"
              },
              "holidayCountry": {
                "$ref": "#/components/schemas/countryCode"
              },
              "holidaySubdivision": {
                "$ref": "#/components/schemas/subdivisionCode"
              },
              "holidayPort": {
                "$ref": "#/components/schemas/portCode"
              }
            }
          }
        ]
      },
      "companyOverviewData": {
        "type": "object",
        "description": "Basic information about a company.",
        "allOf": [
          {
            "required": [
              "activities",
              "companyName"
            ],
            "type": "object",
            "properties": {
              "companyName": {
                "$ref": "#/components/schemas/companyName"
              },
              "activities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/activity"
                }
              },
              "companyVat": {
                "$ref": "#/components/schemas/companyVat"
              }
            }
          }
        ]
      },
      "activities": {
        "type": "array",
        "description": "A list of all the possible activities for a company or governmental body..",
        "example": [
          "Port Authority",
          "Harbour Master",
          "Customs",
          "Border Control Post (BCP)",
          "Immigration",
          "Container Depot",
          "Container Terminal",
          "Container (CFS)",
          "General Cargo Terminal",
          "Multi Purpose Terminal",
          "Liquid Cargo Terminal",
          "Bulk Cargo Terminal",
          "Temperature Controlled Terminal",
          "Dangerous Cargo Warehouse",
          "Passenger Terminal",
          "Inland Container Terminal",
          "Liner Agent - Carrier",
          "Railway Undertaking",
          "Haulier",
          "Barge Carrier",
          "Freight Forwarder",
          "Customs Broker",
          "Stevedoring & Lashing",
          "Tally",
          "Ship Supplier",
          "Nautic-technic",
          "Tug",
          "Mooring",
          "Shipyards & Repair",
          "Shipowner",
          "Pilots",
          "Research",
          "Consulting",
          "Port Community System - PCS",
          "IT-Service",
          "Insurance",
          "Container Leasing",
          "Railway Services",
          "Railway Logistics Operator",
          "Other"
        ],
        "items": {
          "$ref": "#/components/schemas/activity"
        }
      },
      "portCode": {
        "maxLength": 5,
        "type": "string",
        "description": "UN/LOCODE code for a port.",
        "example": "ESBCN"
      },
      "fromDate": {
        "type": "string",
        "description": "The initial date of a period.",
        "format": "date",
        "example": "2022-01-20"
      },
      "dateRange": {
        "type": "string",
        "description": "The duration of a period is expressed as an ISO 8601 code. E.g. 4 weeks and 2 days are represented as P4W2D.",
        "format": "iso8601",
        "example": "P4W"
      },
      "shipType": {
        "maxLength": 2,
        "type": "string",
        "description": "The type of the ship. The value is populated using the 2-character code from Annex VI from DIRECTIVE 2009/42/EC OF THE EUROPEAN PARLIAMENT AND OF THE COUNCIL of 6 May 2009 on statistical returns in respect of the carriage of goods and passengers by sea.\n\n  * `10` Liquid bulk (Oil tanker, Chemical tanker, LG tanker, Tanker barge, Other tanker)\n  * `20` Dry bulk (Bulk/oil carrier, Bulk carrier)\n  * `31` Container (Full container)\n  * `32` Specialised (Barge carrier, Chemical carrier, Irradiated fuel, Livestock carrier, Vehicle carrier, Other specialised)\n  * `33` General cargo, non-specialised (Reefer, Ro-ro passenger, Ro-ro container, Other ro-ro cargo,Combination carrier general cargo/passenger, Combination carrier general cargo/container, Single-decker, Multi-decker)\n  * `34` Dry cargo barge (Deck barge, Hopper barge, Lash-seabee barge, Open dry cargo barge, Covered dry cargo barge, Other dry cargo barge nes)\n  * `35` Passenger (Passenger, excluding cruise passengers)\n  * `36` Cruise Passenger (Cruise ships only)\n  * `41` Fishing (Fish catching, Fish processing)\n  * `42` Offshore activities (Drilling and exploration, Offshore support)\n  * `43` Tugs (Tugs, Pusher craft)\n  * `49` Miscellaneous Dredgers (Research/survey, Other vessel nes)\n  * `XX` Unknown Unknown type of vessel\n",
        "example": "31",
        "enum": [
          "10",
          "20",
          "31",
          "32",
          "33",
          "34",
          "35",
          "36",
          "41",
          "42",
          "43",
          "49",
          "XX"
        ]
      },
      "metadata": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "description": "The unique identifier of the request. Include this as a reference when reporting issues."
          },
          "dateCreated": {
            "type": "string",
            "description": "Entity creation timestamp. This will usually be allocated by the storage platform.",
            "format": "date-time"
          },
          "dateModified": {
            "type": "string",
            "description": "Timestamp of the last modification of the entity. This will usually be allocated by the storage platform.",
            "format": "date-time"
          },
          "dateRetrieved": {
            "type": "string",
            "description": "The date and time the information was retrieved in ISO8601 UTC format.",
            "format": "date-time"
          }
        },
        "description": "Metadata information associated to a response."
      },
      "error": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "pattern": "/([1-5][0-9]{2})/",
            "type": "string",
            "description": "HTML response status code."
          },
          "messageCode": {
            "type": "string",
            "description": "Code error description.",
            "example": "Not found"
          },
          "message": {
            "type": "string",
            "description": "Error description.",
            "example": "Page not found"
          },
          "timestamp": {
            "type": "string",
            "description": "Timestamp of error ocurrence.",
            "format": "date-time"
          }
        },
        "description": "Error body"
      },
      "shipName": {
        "maxLength": 35,
        "type": "string",
        "description": "The ship's name is shown on the IMO ship's certificates.",
        "example": "AURORA"
      },
      "coastalArea": {
        "maxLength": 4,
        "type": "string",
        "description": "A contiguous stretch of coastline, together with islands offshore as it is defined by Eurostat in Annex VI from Directive 2009/42/EC of the European Parliament and of the Council.",
        "example": "GR00"
      },
      "countryCode": {
        "maxLength": 2,
        "description": "Country alpha-2 code from ISO 3166 — Codes for the representation of names of countries and their subdivisions.",
        "example": "ES"
      },
      "linkedPort": {
        "properties": {
          "portCode": {
            "maxLength": 5,
            "type": "string",
            "description": "UN/LOCODE code for a port.",
            "example": "SGSGP"
          },
          "portName": {
            "maxLength": 35,
            "type": "string",
            "description": "Port name.",
            "example": "Singapore"
          }
        },
        "description": "A port that is served by a direct service of a liner and that does not require a transhipment."
      },
      "linerCarrier": {
        "properties": {
          "carrierName": {
            "type": "string",
            "description": "Carrier name.",
            "example": "Mediterranean Shipping Company (MSC)"
          },
          "carrierCode": {
            "type": "string",
            "description": "Carrier code as Standard Carrier Alpha Code (SCAC)",
            "example": "MSCU"
          }
        },
        "description": "Liner carrier."
      },
      "gate": {
        "properties": {
          "gateName": {
            "type": "string",
            "description": "Gate name."
          },
          "gateCoordinates": {
            "$ref": "#/components/schemas/coordinates"
          },
          "flowDirection": {
            "$ref": "#/components/schemas/flowDirection"
          },
          "vehicleTypes": {
            "$ref": "#/components/schemas/vehicleTypes"
          }
        },
        "description": "Attributes of an access gate."
      },
      "coordinates": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "description": "Latitude of a point.",
            "example": 41.35331
          },
          "longitude": {
            "type": "number",
            "description": "Longitude of a point",
            "example": 2.175017
          }
        },
        "description": "Either of the two lines of latitude and longitude whose intersection determines the geographical point of a place."
      },
      "flowDirection": {
        "type": "string",
        "description": "Flow direction (inwards, outwards) is determined by reference to the reporting port/terminal: \"inwards\" means \"arriving at the port/terminal\", \"outwards\" means \"leaving the port/terminal\". It is also possible to choose \"both\" directions.",
        "example": "inwards",
        "enum": [
          "outwards",
          "inwards",
          "both"
        ]
      },
      "vehicleTypes": {
        "type": "string",
        "description": "Type of vehicles from the point of view of their structural characteristics.  \n  * `Cars`\n  * `Trucks`\n  * `Both` - Trucks and cars\n  * `Trains`\n",
        "example": "Trucks",
        "enum": [
          "Cars",
          "Trucks",
          "Both",
          "Trains"
        ]
      },
      "berth": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "berthCode": {
            "type": "string",
            "description": "Code assigned to a berth of a port.",
            "example": "01B"
          },
          "berthName": {
            "type": "string",
            "description": "Berth name.",
            "example": "ADOSSAT"
          },
          "berthCoordinates": {
            "$ref": "#/components/schemas/coordinates"
          },
          "berthLength": {
            "$ref": "#/components/schemas/berthLength"
          },
          "berthDepth": {
            "$ref": "#/components/schemas/underwaterDepth"
          }
        },
        "description": "Identification of a berth from a port."
      },
      "berthLength": {
        "type": "integer",
        "description": "Berth length expressed in meters (m).",
        "example": 635
      },
      "underwaterDepth": {
        "type": "number",
        "description": "Bathymetric information. Depth expessed in meters. It must be expressed with positive values.",
        "example": 12.5
      },
      "containerNumber": {
        "maxLength": 11,
        "type": "string",
        "description": "Container number following the identification system described in clause 3 of the ISO6346:1995 standard.",
        "example": "ABCU1234567"
      },
      "activity": {
        "type": "string",
        "description": "Activity performed by a company or a governmental body.\n\nThe following list include most of the activities and, if it is not included, `Other` must be selected: \n  * `Port Authority`\n  * `Harbour Master`\n  * `Customs`\n  * `Border Control Post (BCP)`\n  * `Immigration`\n  * `Container Depot`\n  * `Container Terminal`\n  * `Container (CFS)`\n  * `General Cargo Terminal`\n  * `Multi Purpose Terminal`              \n  * `Liquid Cargo Terminal`\n  * `Bulk Cargo Terminal`\n  * `Temperature Controlled Terminal`\n  * `Dangerous Cargo Warehouse`\n  * `Passenger Terminal`\n  * `Inland Container Terminal`\n  * `Liner Agent - Carrier`\n  * `Railway Undertaking`\n  * `Haulier`\n  * `Barge Carrier`\n  * `Freight Forwarder`\n  * `Customs Broker`\n  * `Stevedoring & Lashing`\n  * `Tally`\n  * `Ship Supplier`\n  * `Nautic-technic`\n  * `Tug`\n  * `Mooring`\n  * `Shipyards & Repair`\n  * `Shipowner`\n  * `Pilots`\n  * `Research`\n  * `Consulting`\n  * `Port Community System - PCS`\n  * `IT-Service`\n  * `Insurance`\n  * `Container Leasing`\n  * `Railway Services`\n  * `Railway Logistics Operator`\n  * `Other`\n",
        "example": "Port Authority",
        "enum": [
          "Port Authority",
          "Harbour Master",
          "Customs",
          "Border Control Post (BCP)",
          "Immigration",
          "Container Depot",
          "Container Terminal",
          "Container (CFS)",
          "General Cargo Terminal",
          "Multi Purpose Terminal",
          "Liquid Cargo Terminal",
          "Bulk Cargo Terminal",
          "Temperature Controlled Terminal",
          "Dangerous Cargo Warehouse",
          "Passenger Terminal",
          "Inland Container Terminal",
          "Liner Agent - Carrier",
          "Railway Undertaking",
          "Haulier",
          "Barge Carrier",
          "Freight Forwarder",
          "Customs Broker",
          "Stevedoring & Lashing",
          "Tally",
          "Ship Supplier",
          "Nautic-technic",
          "Tug",
          "Mooring",
          "Shipyards & Repair",
          "Shipowner",
          "Pilots",
          "Research",
          "Consulting",
          "Port Community System - PCS",
          "IT-Service",
          "Insurance",
          "Container Leasing",
          "Railway Services",
          "Railway Logistics Operator",
          "Other"
        ]
      },
      "typeOfCargo": {
        "maxLength": 2,
        "type": "string",
        "description": "2-character code of type of cargo, as defined in annex II from Directive 2009/42/EC of the European Parliament and of the Council. * `1X`  Liquid bulk goods (no cargo unit) * `11`  Liquefied gas * `12`Crude oil * `13`Oil products * `19`Other liquid bulk goods * `2X`Dry bulk goods (no cargo unit) * `21`Ores * `22`Coal * `23`Agricultural products (e.g. grain, soya, tapioca) * `29`Other dry bulk goods * `3X`Large containers * `31`20 ft freight units * `32`40 ft freight units * `33`Freight units > 20 ft and < 40 ft * `34`Freight units > 40 ft * `5X`Mobile self-propelled units * `51`Road goods vehicles and accompanying trailers * `52`Passenger cars, motorcycles and accompanying trailers/caravans * `53`Passenger buses * `54`Trade vehicles (including import/export motor vehicles) * `56`Live animals on the hoof * `59`Other mobile self-propelled units * `6X`Mobile non-self-propelled units * `61`Unaccompanied road goods trailers and semitrailers * `62`Unaccompanied caravans and other road, agricultural and industrial vehicles * `64`Rail wagons engaged in goods transport * `65`Shipborne port-to-port trailers engaged in goods transport * `66`Shipborne barges engaged in goods transport * `69`Other mobile non-self-propelled units * `9X`Other cargo, not elsewhere specified * `91`Forestry products * `92`Iron and steel products * `99`Other general cargo * `RX`Large Ro-Ro containers * `R1`20 ft freight units * `R2`40 ft freight units X * `R3`Freight units > 20 ft and < 40 ft * `R4`Freight units > 40 ft",
        "example": "34",
        "enum": [
          "1X",
          "11",
          "12",
          "13",
          "19",
          "2X",
          "21",
          "22",
          "23",
          "29",
          "3X",
          "31",
          "32",
          "33",
          "34",
          "5X",
          "51",
          "52",
          "53",
          "54",
          "56",
          "59",
          "6X",
          "61",
          "62",
          "64",
          "65",
          "66",
          "69",
          "9X",
          "91",
          "92",
          "99",
          "RX",
          "R1",
          "R2",
          "R3",
          "R4"
        ]
      },
      "commodity": {
        "maxLength": 2,
        "type": "string",
        "description": "NST2007 code.\n  * `01`Products of agriculture, hunting, and forestry; fish and other fishing products\n  * `02`Coal and lignite; crude petroleum and natural gas\n  * `03`Metal ores and other mining and quarrying products; peat; uranium and thorium\n  * `04`Food products, beverages and tobacco\n  * `05`Textiles and textile products; leather and leather products\n  * `06`Wood and products of wood and cork (except furniture); articles of straw and plaiting materials; pulp, paper and paper products; printed matter and recorded media\n  * `07`Coke and refined petroleum products\n  * `08`Chemicals, chemical products, and man-made fibers; rubber and plastic products; nuclear fuel\n  * `09`Other non metallic mineral products\n  * `10`  Basic metals; fabricated metal products, except machinery and equipment\n  * `11`Machinery and equipment n.e.c.; office machinery and computers; electrical machinery and apparatus n.e.c.; radio, television and communication equipment and apparatus; medical, precision and optical instruments; watches and clocks\n  * `12`Transport equipment\n  * `13`Furniture; other manufactured goods n.e.c.\n  * `14`Secondary raw materials; municipal wastes and other wastes\n  * `15`Mail, parcels\n  * `16`Equipment and material utilized in the transport of goods\n  * `17`Goods moved in the course of household and office removals; baggage and articles accompanying travellers; motor vehicles being moved for repair; other non market goods n.e.c.\n  * `18` Grouped goods: a mixture of types of goods which are transported together\n  * `19`Unidentifiable goods: goods which for any reason cannot be identified and therefore cannot be assigned to groups 01-16\n  * `20`Other goods n.e.c.            \n",
        "example": "8.0",
        "enum": [
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "07",
          "08",
          "09",
          "10",
          "11",
          "12",
          "13",
          "14",
          "15",
          "16",
          "17",
          "18",
          "19",
          "20"
        ]
      },
      "forecastedDate": {
        "type": "string",
        "description": "The forecasted date.",
        "format": "date",
        "example": "2022-04-12"
      },
      "terminalCode": {
        "minLength": 10,
        "type": "string",
        "description": "Port facility number. GISIS code assigned by IMO to a facility from a port.",
        "example": "ESBCN-0042"
      },
      "subscriptionReference": {
        "type": "object",
        "properties": {
          "subscriptionRequestReference": {
            "$ref": "#/components/schemas/subscriptionRequestReference"
          },
          "subscriptionRequestMessage": {
            "$ref": "#/components/schemas/subscriptionRequestMessage"
          }
        },
        "description": "Response after a subscription request has been received"
      },
      "subscriptionRequestReference": {
        "type": "string",
        "description": "Reference assigned to a subscription request.",
        "example": "2022-02-07T17:05:12_REF001"
      },
      "subscriptionRequestMessage": {
        "type": "string",
        "description": "Response message to a subscription request.",
        "example": "Your subscription request has been received and soon you will receive a validation code (email/sms)"
      },
      "validationKey": {
        "type": "string",
        "description": "The code received to complete a subscription process.",
        "example": "4ZT2"
      },
      "email": {
        "type": "string",
        "description": "email"
      },
      "phone": {
        "type": "string",
        "description": "Phone number"
      },
      "unsubscriptionReference": {
        "type": "object",
        "properties": {
          "unsubscriptionRequestReference": {
            "$ref": "#/components/schemas/unsubscriptionRequestReference"
          },
          "unsubscriptionRequestMessage": {
            "$ref": "#/components/schemas/unsubscriptionRequestMessage"
          }
        },
        "description": "Response after an unsubscription request has been received"
      },
      "unsubscriptionRequestReference": {
        "type": "string",
        "description": "Reference assigned to an unsubscription request.",
        "example": "2022-02-10T17:05:12_UNS056"
      },
      "unsubscriptionRequestMessage": {
        "type": "string",
        "description": "Response message to an unsubscription request.",
        "example": "Your unsubscription request has been received and soon you will repoint encodedceive a validation code (email/sms)"
      },
      "publishingStage": {
        "type": "string",
        "description": "Stages of a publishing process:\n  * `ACTIVE` - Element that is active\n  * `EXPIRED` - Element that has expired \n",
        "enum": [
          "ACTIVE",
          "EXPIRED"
        ]
      },
      "id": {
        "maxLength": 35,
        "type": "string",
        "description": "Entity's unique identifier.",
        "example": "XAC12345CA"
      },
      "noticeLanguage": {
        "maxLength": 2,
        "type": "string",
        "description": "The ISO 639 code of a language. Each language is assigned a two-letter (639-1) lowercase abbreviation. E.g. `ca` Catalan.",
        "example": "ca"
      },
      "shipServiceType": {
        "type": "string",
        "description": "Type of ship service.",
        "enum": [
          "Stevedoring & Lashing",
          "Tally",
          "Ship Supplier",
          "Nautic-technic",
          "Tug",
          "Mooring"
        ]
      },
      "subdivisionCode": {
        "maxLength": 5,
        "description": "Subdivision code from ISO 3166 — Codes for the representation of names of countries and their subdivisions.",
        "example": "ES-CT"
      },
      "toDate": {
        "type": "string",
        "description": "The final date of a period.",
        "format": "date",
        "example": "2022-01-20"
      },
      "holidayType": {
        "type": "string",
        "description": "Type of holiday.",
        "example": "local holiday",
        "enum": [
          "national holiday",
          "other secular holiday",
          "religious holiday",
          "regional holiday local holiday"
        ]
      },
      "searchTerm": {
        "minLength": 3,
        "type": "string",
        "description": "string that is used to search for something."
      },
      "companyInfo": {
        "type": "object",
        "description": "Detailled information about a company or a governmental body.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "activities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/activity"
                }
              },
              "companyName": {
                "$ref": "#/components/schemas/companyName"
              },
              "email": {
                "$ref": "#/components/schemas/email"
              },
              "phone": {
                "$ref": "#/components/schemas/phone"
              },
              "website": {
                "$ref": "#/components/schemas/uri"
              },
              "companyAddress": {
                "$ref": "#/components/schemas/address"
              },
              "openingHours": {
                "$ref": "#/components/schemas/openingHours"
              },
              "afterHours": {
                "$ref": "#/components/schemas/afterHours"
              },
              "companyVat": {
                "$ref": "#/components/schemas/companyVat"
              }
            }
          }
        ]
      },
      "companyName": {
        "type": "string",
        "description": "Company name."
      },
      "uri": {
        "type": "string",
        "description": "Uniform Resource Identifier (URI). A unique sequence of characters that identifies a logical or physical resource used by web technologies."
      },
      "address": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "streetAndNumber": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          }
        },
        "description": "Address."
      },
      "openingHours": {
        "type": "object",
        "properties": {
          "afternoon": {
            "type": "string"
          },
          "closed": {
            "type": "boolean"
          },
          "day": {
            "type": "string"
          },
          "forenoon": {
            "type": "string"
          }
        },
        "description": "Opening hours."
      },
      "afterHours": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "functionTitle": {
            "type": "string"
          },
          "gsm": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "description": "Contact info after hours."
      },
      "companyVat": {
        "type": "string",
        "description": "VAT number that identifies a company."
      },
      "linerServiceName": {
        "maxLength": 50,
        "type": "string",
        "description": "Name of a Liner Service, as it is refered by Alphaliner.",
        "example": "New Eurosal / EuroAndes"
      },
      "shipIMONumber": {
        "maxLength": 7,
        "type": "string",
        "description": "The ship identifier. The unique seven-digit number which remains unchanged through a vessel's lifetime and is linked to its hull.",
        "example": "9876543"
      },
      "estimatedTimeOfArrival": {
        "pattern": "date-time",
        "type": "string",
        "description": "The date and time the means of transport is estimated to arrive at a specified location (ETA), in ISO 8601 Date format.",
        "example": "2022-03-01T11:53:00Z"
      },
      "actualTimeOfArrival": {
        "type": "string",
        "description": "The date and time the means of transport arrives at a specified location (ATA), in ISO 8601 Date format.",
        "format": "date-time",
        "example": "2022-03-03T12:56:00Z"
      },
      "estimatedTimeOfDeparture": {
        "type": "string",
        "description": "The date and time the means of transport is estimated to depart from a specified location (ETD), in ISO 8601 Date format.",
        "format": "date-time",
        "example": "2022-03-15T08:23:00Z"
      },
      "lastPortOfCall": {
        "maxLength": 5,
        "type": "string",
        "description": "Last Port of Call UN/LOCODE.",
        "example": "HKHKG"
      },
      "actualTimeOfDeparture": {
        "type": "string",
        "description": "The date and time the means of transport departs from a specified location (ATD), in ISO 8601 Date format.",
        "format": "date-time",
        "example": "2022-03-16T01:04:00Z"
      },
      "nextPortOfCall": {
        "maxLength": 5,
        "type": "string",
        "description": "Next port of call UN/LOCODE.",
        "example": "NLRTM"
      },
      "ferryOperator": {
        "required": [
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Operator code. Code assigned to a ferry operator.",
            "example": "GRM"
          },
          "description": {
            "type": "string",
            "description": "Name of the ferry operator.",
            "example": "GRIMALDI"
          }
        },
        "description": "Identification of the company that operates a ferry."
      },
      "cruiseLine": {
        "required": [
          "description"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Operator code. Code assigned to a cruise line.",
            "example": "COSTA"
          },
          "description": {
            "type": "string",
            "description": "Name of the cruise line.",
            "example": "COSTA CRUCEROS"
          }
        },
        "description": "Identification of the company that operates the cruise ship."
      },
      "facility": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code assigned to a port facility.",
            "example": "08MBCN"
          },
          "name": {
            "type": "string",
            "description": "Facility name.",
            "example": "TERMINAL CREUERS"
          },
          "berth": {
            "$ref": "#/components/schemas/berth"
          }
        },
        "description": "Identification of a port facility."
      },
      "linerServiceCode": {
        "maxLength": 4,
        "type": "string",
        "description": "Code of a Liner Service, as it is refered by Alphaliner.",
        "example": "6513"
      },
      "linerServiceType": {
        "maxLength": 2,
        "type": "string",
        "description": "Type of Liner Service, coded. \n  * `FC`Full container - Containership.\n  * `CC`  Car-carrier.\n  * `RR`  Ro-Ro.\n  * `MP`  Multipurpose\n",
        "example": "FC"
      },
      "linerServiceCapacity": {
        "properties": {
          "capacity": {
            "type": "integer",
            "description": "Capacity.",
            "example": 23064
          },
          "unitsOf Measure": {
            "type": "string",
            "description": "Units of measure.",
            "example": "TEU"
          }
        },
        "description": "The capacity of a liner service, expressed in units according to the typology of the liner service. Units are TEUs for containerships, cars for car-carriers and LIMs (lanes in meters) for ro-ro vessels."
      },
      "linerSailingFrequency": {
        "type": "string",
        "description": "Frequency of a liner service, expressed in days",
        "example": "7"
      },
      "linerDurationOfRotation": {
        "type": "string",
        "description": "Duration of the liner service rotation, expressed in days",
        "example": "43"
      },
      "portName": {
        "maxLength": 35,
        "type": "string",
        "description": "Port name.",
        "example": "Barcelona"
      },
      "totalArea": {
        "type": "integer",
        "description": "The total area expressed in hectares (ha)."
      },
      "coveredWarehouses": {
        "type": "integer",
        "description": "The total area of the covered warehouses in square meters."
      },
      "terminalName": {
        "type": "string",
        "description": "Terminal name.",
        "example": "Terminal Port Nou"
      },
      "railTerminalName": {
        "type": "string",
        "description": "Name of a railway terminal.",
        "example": "Zaragoza-Corbera-Alta"
      },
      "railTerminalCode": {
        "type": "string",
        "description": "Code that identifies a railway terminal.",
        "example": "ESCRB"
      },
      "freightType": {
        "type": "string",
        "description": "Type of freight.  \n  * `Solid bulk`\n  * `Liquid bulk`\n  * `Roll-on / roll-off`\n  * `Breakbulk`\n  * `Containers`\n",
        "example": "Containers",
        "enum": [
          "Solid bulk",
          "Liquid bulk",
          "Roll-on / roll-off",
          "Breakbulk",
          "Containers"
        ]
      },
      "railBundles": {
        "type": "integer",
        "description": "The number of rail tracks in a facility.",
        "example": 8
      },
      "trackMaximumLength": {
        "type": "integer",
        "description": "The maximum length of a rail track of a facility, expressed in meters.",
        "example": 800
      },
      "trackGauge": {
        "type": "string",
        "description": "Distance between the inside surfaces of the two load-bearing rails of a railway track. \n  * `Standard gauge - UIC` 1,435 mm\n  * `Iberian gauge` 1,668 mm\n  * `Metre gauge` 1,000 mm\n",
        "example": "Iberian gauge",
        "enum": [
          "Standard gauge - UIC",
          "Iberian gauge",
          "Metre gauge"
        ]
      },
      "gantryCranes": {
        "type": "integer",
        "description": "THe number of gantry cranes of a facility.",
        "example": 3
      },
      "markRegion": {
        "type": "string",
        "description": "Mark region, according to the IALA/AISM Maritime Buoyage System and Other Aids to Navigation. \n  * In `Region A` red colour is used for port and green colour starboard. \n  * In `Region B` green colour is used for port and red colour starboard. \n",
        "example": "Region A",
        "enum": [
          "Region A",
          "Region B"
        ]
      },
      "markType": {
        "type": "string",
        "description": "Type of marks, according to the IALA/AISM Maritime Buoyage System and Other Aids to Navigation.  \n  * `Lateral Marks`\n  * `Cardinal Marks`\n  * `Isolated Danger Mark`\n  * `Safe Waters Mark`\n  * `Marking New Dangers`\n  * `Other Marks`\n",
        "example": "Isolated Danger Mark",
        "enum": [
          "Lateral Marks",
          "Cardinal Marks",
          "Isolated Danger Mark",
          "Safe Waters Mark",
          "Marking New Dangers",
          "Other Marks"
        ]
      },
      "markTop": {
        "type": "string",
        "description": "The upper part of a mark. It can be one or two spheres, cilinders, cones or crosses.",
        "example": "Two black spheres."
      },
      "markColour": {
        "type": "string",
        "description": "Mark colour.",
        "example": "Red and white vertical stripes."
      },
      "shapeOfBuoy": {
        "type": "string",
        "description": "Distinctive shape for a mark identification.",
        "example": "Conical shape."
      },
      "markLight": {
        "properties": {
          "colour": {
            "type": "string",
            "description": "Colour",
            "example": "red",
            "enum": [
              "white",
              "red",
              "green",
              "yellow",
              "yellow/blue"
            ]
          },
          "rhythm": {
            "type": "string",
            "description": "Rhythm of the light and dark periodes of a mark light.",
            "example": "group flashing (2)"
          }
        },
        "description": "Characteristics of a mark light."
      },
      "singularPoint": {
        "description": "A singular point of the port waters. It can be used to specify a point where bathymetric data is available.",
        "oneOf": [
          {
            "$ref": "#/components/schemas/berth"
          },
          {
            "$ref": "#/components/schemas/channel"
          }
        ]
      },
      "channel": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Code assigned to a port channel.",
            "example": "NE"
          },
          "description": {
            "type": "string",
            "description": "Channel name.",
            "example": "North East entrance"
          },
          "channelCoordinates": {
            "$ref": "#/components/schemas/coordinates"
          }
        },
        "description": "Channel identification of a port."
      },
      "equipmentTare": {
        "type": "integer",
        "description": "Tare of a unit of equipment, expressed in kilograms (kg).",
        "example": 2340
      },
      "iso6346": {
        "maxLength": 4,
        "type": "string",
        "description": "Size and type codes of a container, used as a whole. Size codes are determined by annex D of ISO 6346:1995 and type codes according to annex E of the same international standard.",
        "example": "22G1"
      },
      "dataset": {
        "type": "object",
        "description": "2-character code, as defined in annex VIII from Directive 2009/42/EC of the European Parliament and of the Council. Dataset",
        "example": "A2. Non-unit-load seaborne transport in the main European ports, by port, type of cargo and counterpart",
        "enum": [
          "A1.Seaborne transport in the main European ports, by port, type of cargo and counterpart",
          "A2. Non-unit-load seaborne transport in the main European ports, by port, type of cargo and counterpart",
          "A3. Data required both for selected ports and ports for which detailed statistics are not required",
          "B1. Seaborne transport in the main European ports, by port, type of cargo, goods and counterpart",
          "C1. Unit-load seaborne transport in the main European ports, by port, type of cargo, counterpart and loaded status",
          "C2. Ro-Ro container seaborne transport in the main European ports, by port, type of cargo, counterpart and loaded status",
          "D1. Passenger transport in the main European ports, by port, counterpart and nationality of registration of vessel",
          "E1. Seaborne transport in the main European ports, by port, type of cargo, counterpart and nationality of registration of vessels",
          "F1. Vessel traffic in the main European ports, by port, type and size of vessels loading or unloading cargo, embarking or disembarking passengers (including cruise passengers on a cruise passenger excursion)",
          "F2. Vessel traffic in the main European ports, by port, type and size of vessels loading or unloading cargo, embarking or disembarking passengers (including cruise passengers on a cruise passenger excursion)"
        ]
      },
      "year": {
        "maxLength": 4,
        "type": "integer",
        "description": "Year.",
        "example": 2022
      },
      "quarter": {
        "type": "integer",
        "description": "Quarter.",
        "example": 2,
        "enum": [
          1,
          2,
          3,
          4
        ]
      },
      "reportingPort": {
        "maxLength": 5,
        "type": "string",
        "description": "Port that provides some information. Use port UN/LOCODE.",
        "example": "ESBCN"
      },
      "portLoadingUnloading": {
        "maxLength": 5,
        "type": "string",
        "description": "For a vessel that operates in a port, port where the cargo was loaded (port of loading) or where it will be unloaded (port of unloading). Use port UN/LOCODE.",
        "example": "HKHKG"
      },
      "grossWeight": {
        "type": "integer",
        "description": "Gross weight, expressed in metric tonnes.",
        "example": 875200
      },
      "units": {
        "type": "integer",
        "description": "The number of units (containers, intermodal transport units -ITU-, vehicles, vessels...).",
        "example": 4823
      },
      "passengers": {
        "type": "integer",
        "description": "The number of passengers.",
        "example": 24200
      },
      "vesselNationality": {
        "maxLength": 4,
        "type": "string",
        "description": "The code used for the Nationality of registration consists of four digit, the ISO3166 alpha 2 code for each country, followed by 2 zeros except for countries with more than one register exists, which are identified by a fourth digit other than zero (from 1 to 4). Codes are in annex V from Directive 2009/42/EC of the European Parliament and of the Council.",
        "example": "GB04"
      },
      "vesselDwt": {
        "type": "integer",
        "description": "The deadweight (DWT) of a ship is the difference in tonnes between the displacement of a ship on the summer load line in the water with a specific gravity of 1.025 and the total weight of the ship.",
        "example": 174300
      },
      "vesselGt": {
        "type": "integer",
        "description": "Gross tonnage (GT) is a measure of the overall size of a ship determined by the provisions of the International Convention on Tonnage Measurement of Ships (1969). It is calculated as a function of the moulded volume of all enclosed spaces of the ship.",
        "example": 235400
      },
      "currency": {
        "type": "string",
        "description": "3-character ISO4217 alpha code for the representation of currencies.",
        "example": "EUR"
      },
      "netProffit": {
        "type": "integer",
        "description": "Net proffit. The value is expressed in thousands (x1000) of a given currency.",
        "example": 24200
      },
      "operatingProffit": {
        "type": "integer",
        "description": "Operating proffit. The value is expressed in thousands (x1000) of a given currency.",
        "example": 26100
      },
      "financialResult": {
        "type": "integer",
        "description": "Financial result. The value is expressed in thousands (x1000) of a given currency.",
        "example": 970
      },
      "netTurnover": {
        "type": "integer",
        "description": "Net turnover. The value is expressed in thousands (x1000) of a given currency.",
        "example": 113650
      },
      "ebitda": {
        "type": "integer",
        "description": "Earnings before interest, tax, depreciation and amortisation. The value is expressed in thousands (x1000) of a given currency.",
        "example": 24200
      },
      "cashFlow": {
        "type": "integer",
        "description": "Cash flow. The value is expressed in thousands (x1000) of a given currency.",
        "example": 13800
      },
      "investments": {
        "type": "integer",
        "description": "Investments. The value is expressed in thousands (x1000) of a given currency.",
        "example": 54300
      },
      "dataProvider": {
        "type": "string",
        "description": "Specifies the URL to inform the provider of this information."
      },
      "name": {
        "type": "string",
        "description": "Given name of a person."
      },
      "location": {
        "type": "string",
        "description": "Location of the weather observation is represented by a GeoJSON geometry. Mandatory if the address is not defined."
      },
      "dateObserved": {
        "type": "string",
        "description": "The date and time of this observation are in ISO8601 UTC format. It can be represented by a specific time instant or by an ISO8601 interval.",
        "format": "date-time",
        "example": "2022-05-09T09:14:00Z"
      },
      "source": {
        "type": "string",
        "description": "Uniform Resource Identifier (URI). A unique sequence of characters that identifies a logical or physical resource used by web technologies."
      },
      "refDevice": {
        "type": "string",
        "description": "A reference to the device(s) which captured this observation."
      },
      "refPointOfInterest": {
        "type": "string",
        "description": "A reference to a point of interest."
      },
      "weatherType": {
        "type": "string",
        "description": "The observed weather types.",
        "example": "cloudy",
        "enum": [
          "clearNight",
          "sunnyDay",
          "slightlyCloudy",
          "partlyCloudy",
          "mist",
          "fog",
          "highClouds",
          "cloudy",
          "veryCloudy",
          "overcast",
          "lightRainShower",
          "drizzle",
          "lightRain",
          "heavyRainShower",
          "heavyRain",
          "sleetShower",
          "sleet",
          "hailShower",
          "hail",
          "shower",
          "lightSnow",
          "snow",
          "heavySnowShower",
          "heavySnow",
          "thunderShower",
          "thunder"
        ]
      },
      "dewPoint": {
        "type": "number",
        "description": "The dew point is encoded as a number. The default unit is Celsius degrees."
      },
      "visibility": {
        "type": "string",
        "description": "Visibility reported.",
        "example": "good",
        "enum": [
          "veryPoor",
          "poor",
          "moderate",
          "good",
          "veryGood",
          "excellent"
        ]
      },
      "temperature": {
        "type": "number",
        "description": "Air temperature observed. The default unit is degrees centigrades.",
        "example": 2
      },
      "feelsLikeTemperature": {
        "type": "number",
        "description": "Wind chill/Feels like Temperature (C)",
        "example": -4
      },
      "relativeHumidity": {
        "maximum": 1,
        "minimum": 0,
        "type": "number",
        "description": "Air relative humidity observed (percentage, expressed in parts per one).",
        "example": 0.4
      },
      "precipitation": {
        "type": "number",
        "description": "Precipitation level observed. The default unit is liters per square meter.",
        "example": 13
      },
      "windDirection": {
        "maximum": 360,
        "minimum": 0,
        "type": "number",
        "description": "The wind direction is expressed in decimal degrees compared to geographic North (measured clockwise), encoded as a Number. Range 0 to 360.",
        "example": 135
      },
      "windSpeed": {
        "type": "number",
        "description": "The observed wind speed in m/s.",
        "example": 4.5
      },
      "atmosphericPressure": {
        "type": "number",
        "description": "The atmospheric pressure observed, measured in Hecto Pascals (hPa).",
        "example": 1013
      },
      "pressureTendency": {
        "type": "string",
        "description": "Is the pressure rising or falling? It is expressed in qualitative terms.",
        "example": "steady",
        "enum": [
          "raising",
          "falling",
          "steady"
        ]
      },
      "solarRadiation": {
        "type": "number",
        "description": "The solar radiation observed, measured in Watts per square meter."
      },
      "illuminance": {
        "type": "number",
        "description": "The illuminance observed, measured in lux (lx) or lumens per square metre (cd * sr * m-2).",
        "example": 1000
      },
      "precipitationProbability": {
        "maximum": 1,
        "minimum": 0,
        "type": "number",
        "description": "Rain precipitation probability (%)"
      },
      "cloudCover": {
        "maximum": 1,
        "minimum": 0,
        "type": "number",
        "description": "Cloud cover in percentage (%)",
        "example": 0.25
      },
      "sunrise": {
        "type": "string",
        "description": "Time for sunrise on a certain date and place.",
        "format": "date-time",
        "example": "2022-06-14T06:01:00Z"
      },
      "sunset": {
        "type": "string",
        "description": "Time for sunset on a certain date and place.",
        "format": "date-time",
        "example": "2022-06-14T20:52:00Z"
      },
      "moonrise": {
        "type": "string",
        "description": "Time for moonrise on a certain date and place.",
        "format": "date-time",
        "example": "2022-06-14T01:22:00Z"
      },
      "moonset": {
        "type": "string",
        "description": "Time for moonset on a certain date and place.",
        "format": "date-time",
        "example": "2022-06-14T05:37:00Z"
      },
      "moonPhase": {
        "type": "string",
        "description": "Moon phase.",
        "example": "Full Moon",
        "enum": [
          "New Moon",
          "First Quarter",
          "Full Moon",
          "Last Quarter"
        ]
      },
      "illumination": {
        "maximum": 100,
        "minimum": 0,
        "type": "integer",
        "description": "Moon percentage illumination.",
        "example": 90
      },
      "surfaceTemperature": {
        "type": "number",
        "description": "Sea surface temperature, expressed in Celsius degrees.",
        "example": 18.5
      },
      "waveHeight": {
        "type": "number",
        "description": "Height of the waves, expressed in meters.",
        "example": 1.2
      },
      "waveLevel": {
        "type": "number",
        "description": "Indicates the height of the waves and measures the swell of the sea, expressed in meters.",
        "example": 1.7
      },
      "wavePeriod": {
        "type": "number",
        "description": "Indicates the time between the crests of a wave, expressed in seconds.",
        "example": 12
      },
      "swellHeight": {
        "type": "number",
        "description": "Swell height in meters (m)"
      },
      "swellPeriod": {
        "type": "integer",
        "description": "Swell period in seconds (s)"
      },
      "swellDirection": {
        "maximum": 360,
        "minimum": 0,
        "type": "integer",
        "description": "Swell direction"
      },
      "height": {
        "type": "number",
        "description": "Representation of a height expressed in meters (m)."
      },
      "time": {
        "type": "string",
        "description": "Representation of Time, expressed in hours, minutes, and seconds using ISO 8601 Time format.",
        "example": "13:04:00"
      },
      "airQualityIndex": {
        "maximum": 100,
        "minimum": 0,
        "type": "integer",
        "description": "Value of the Air Quality Index (AQI).",
        "example": 65
      },
      "airQualityLevel": {
        "type": "string",
        "description": "Air Quality Level. Example values are those defined by the USA EPA Agency: (good, moderate, unhealthyForSensitiveGroups, unhealthy, veryUnhealthy, hazardous).",
        "example": "moderate",
        "enum": [
          "good",
          "moderate",
          "unhealthyForSensitiveGroups",
          "unhealthy",
          "veryUnhealthy",
          "hazardous"
        ]
      },
      "co": {
        "type": "integer",
        "description": "Carbon monoxide (CO) concentration, in milligrams per cubic meter.",
        "example": 500
      },
      "nono": {
        "type": "integer",
        "description": "Nitric oxide (NO) concentration, in milligrams per cubic meter.",
        "example": 43
      },
      "no2": {
        "type": "integer",
        "description": "Nitrogen dioxide (NO2) concentration, in milligrams per cubic meter.",
        "example": 70
      },
      "nox": {
        "type": "integer",
        "description": "Mono-nitrogen oxides (NOx) concentration, in milligrams per cubic meter.",
        "example": 490
      },
      "so2": {
        "type": "integer",
        "description": "Sulfur dioxide (SO2) concentration, in milligrams per cubic meter.",
        "example": 12
      },
      "waterQualityIndex": {
        "maximum": 100,
        "minimum": 0,
        "type": "integer",
        "description": "Value of the Water Quality Index (WQI).",
        "example": 83
      },
      "waterQualityLevel": {
        "type": "string",
        "description": "Water Quality Level. Example values are excellent quality, good, average, bad.",
        "example": "moderate",
        "enum": [
          "excellent quality",
          "good",
          "average",
          "bad"
        ]
      },
      "waterTemperature": {
        "type": "number",
        "description": "Water temperature, expressed in Celsius degrees.",
        "example": 22.5
      },
      "salinity": {
        "type": "number",
        "description": "Amount of salts dissolved in water, measured in parts per thousand (ppt).",
        "example": 22.15
      },
      "ph": {
        "type": "number",
        "description": "Acidity or basicity of an aqueous solution, expressed as the negative of the logarithm to base 10 of the activity of the hydrogen ion.",
        "example": 7.5
      },
      "turbidity": {
        "type": "number",
        "description": "Amount of light scattered by particles in the water column, measured in Formazin Turbidity Units (FTU).",
        "example": 18.15
      },
      "o2": {
        "type": "number",
        "description": "Level of free, non-compound oxygen present, expressed in milligrams per liter (mg/L).",
        "example": 4.12
      },
      "tss": {
        "type": "number",
        "description": "The total suspended solids, measured in milligrams per liter (mg/L).",
        "example": 123
      },
      "tds": {
        "type": "number",
        "description": "The total dissolved solids, measured in milligrams per liter (mg/L).",
        "example": 100
      },
      "nitrates": {
        "type": "number",
        "description": "The concentration of nitrates, expressed in milligrams per liter (mg/L).",
        "example": 0.01
      },
      "nitrites": {
        "type": "number",
        "description": "The concentration of nitrites, expressed in milligrams per liter (mg/L).",
        "example": 0.972
      },
      "ammonia": {
        "type": "number",
        "description": "The concentration of ammonia, expressed in milligrams per liter (mg/L).",
        "example": 0.996
      },
      "silicate": {
        "type": "number",
        "description": "The concentration of silicate, expressed in milligrams per liter (mg/L).",
        "example": 0.994
      },
      "phosphate": {
        "type": "number",
        "description": "The concentration of phosphate, expressed in milligrams per liter (mg/L).",
        "example": 0.996
      },
      "noiseLevel_1": {
        "maximum": 140,
        "minimum": 0,
        "type": "integer",
        "description": "Noise level, expressed in decibels (dB).",
        "example": 65
      },
      "railService": {
        "type": "string",
        "description": "Code that identifies a rail service."
      },
      "railwayStationNearestCity": {
        "type": "string",
        "description": "Name of the nearest city to a railway station."
      },
      "railTerminalLocode": {
        "type": "string",
        "description": "UN/LOCODE code of a rail terminal.",
        "example": "ESZAZ"
      },
      "railDirection": {
        "type": "string",
        "description": "The direction of a train:\n  * `UP` - Up or inbound is used for trains that are coming to a port.\n  * `DOWN` - Down or outbound is used for trains that are leaving a port. \n",
        "example": "UP",
        "enum": [
          "UP",
          "DOWN"
        ]
      },
      "railLogisticServiceProvider_1": {
        "type": "string",
        "description": "Name of the Rail Logistic Service Provider",
        "example": "Freight2Rail"
      },
      "locode": {
        "maxLength": 5,
        "type": "string",
        "description": "Code for identifying a location as specified in the UN/ECE Recommendation nº16 (UN/LOCODE)"
      },
      "trainType": {
        "maxLength": 35,
        "type": "string",
        "description": "Train type. The value is one of the following enumeration:\n  * `Containers`General cargo vesselVessel designed to carry general cargo.\n  * `Vehicles`Unit carrierVessel designed to carry unit loads\n  * `Bulk`Bulk carrierVessel designed to carry bulk cargo.\n  * `Tanker`TankerVessel solely equipped with tanks to carry cargo. \n",
        "example": "Containers",
        "enum": [
          "Containers",
          "Vehicles",
          "Bulk",
          "Tanker"
        ]
      },
      "placeOfDeparture": {
        "type": "object",
        "description": "Place of departure.",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "code": {
                "maxLength": 5,
                "type": "string",
                "description": "Place of departure code."
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "maxLength": 35,
                "type": "string",
                "description": "Name of place of departure."
              }
            }
          }
        ]
      },
      "placeOfDestination": {
        "type": "object",
        "description": "Place of destination.",
        "anyOf": [
          {
            "type": "object",
            "properties": {
              "code": {
                "maxLength": 5,
                "type": "string",
                "description": "Place of destination code."
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "description": {
                "maxLength": 35,
                "type": "string",
                "description": "Name of place of destination."
              }
            }
          }
        ]
      },
      "waitTime": {
        "minimum": 0,
        "type": "integer",
        "description": "Wait time, expressed in minutes.",
        "example": 15
      },
      "hour": {
        "maximum": 23,
        "minimum": 0,
        "type": "integer",
        "description": "Hour expressed in a 24 hours format and represents the period between hh:00:00 and hh:59:59",
        "example": 7
      },
      "throughput_1": {
        "minimum": 0,
        "type": "integer",
        "description": "Throughput."
      },
      "contactInfo": {
        "type": "string",
        "description": "email or phone"
      },
      "surname": {
        "type": "string",
        "description": "Hereditary name common to all members of a family."
      },
      "companyOverviewInfo": {
        "type": "object",
        "description": "Basic information about a company or a governmental body.",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "companyName": {
                "$ref": "#/components/schemas/companyName"
              },
              "activities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/activity"
                }
              },
              "companyVat": {
                "$ref": "#/components/schemas/companyVat"
              }
            }
          }
        ]
      },
      "newsCategory": {
        "type": "string",
        "description": "Category of a publication.",
        "example": "Traffic"
      },
      "language": {
        "maxLength": 2,
        "type": "string",
        "description": "The ISO 639 code of a language. Each language is assigned a two-letter (639-1) lowercase abbreviation. E.g. `ca` Catalan.",
        "example": "ca"
      },
      "subject": {
        "type": "string",
        "description": "The subject of a publication."
      },
      "content": {
        "type": "string",
        "description": "The content of a publication."
      },
      "noticeCategory": {
        "type": "string",
        "description": "Category of a publication.",
        "example": "Ship arrival"
      },
      "newsLanguage": {
        "maxLength": 2,
        "type": "string",
        "description": "The ISO 639 code of a language. Each language is assigned a two-letter (639-1) lowercase abbreviation. E.g. `ca` Catalan.",
        "example": "ca"
      },
      "alertCategory": {
        "type": "string",
        "description": "Define the category of alert.",
        "example": "weather conditions",
        "enum": [
          "Traffic jam",
          "accidents",
          "weather conditions",
          "high level of pollutants"
        ]
      },
      "alertSubCategory": {
        "type": "string",
        "description": "Define the sub category of alert. For traffic category: trafficJam, carAccident, carWrongDirection, carStopped, pothole, roadClosed, roadWorks, hazardOnRoad, injuredBiker.  For naturalDisaster category: flood, tsunami, coastalEvent, earthquake.  For weather category: rainfall, highTemperature, lowTemperature, heatWave, coldWave, ice, snow, wind, fog, tornado, tropicalCyclone, hurricane, snow/ice, thunderstorms, fireRisk, avalancheRisk, floodRisk.  For environment category: airPollution, waterPollution, pollenConcentration. \n",
        "example": "wind"
      },
      "severity": {
        "type": "string",
        "description": "Define the level of gravity of a given alert.",
        "example": "medium",
        "enum": [
          "informational",
          "low",
          "medium",
          "high",
          "critical"
        ]
      },
      "dateIssued": {
        "type": "string",
        "description": "The date and time the alert was issued by the alert generator.",
        "format": "date",
        "example": "2022-01-18"
      },
      "alertSource": {
        "type": "string",
        "description": "Reference to the source of the alert. For example, it could be a user of an application, a device, or a service."
      },
      "holidayDate": {
        "type": "string",
        "description": "Holiday date.",
        "format": "date",
        "example": "2022-06-24"
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "shipArrivalForecast": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shipArrivalForecast"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_queryParams"
          }
        }
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "shipsInPort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shipInPort"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_2": {
        "type": "object",
        "properties": {
          "shipArrivals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shipArrival"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_3": {
        "type": "object",
        "properties": {
          "shipDepartures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shipDeparture"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_4": {
        "type": "object",
        "properties": {
          "shipsAproximation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shipAproximation"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_5": {
        "type": "object",
        "properties": {
          "ferriesArrivals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ferryArrival"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_6": {
        "type": "object",
        "properties": {
          "ferriesDepartures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ferryDeparture"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_7": {
        "type": "object",
        "properties": {
          "cruiseCalls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cruiseCall"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_7_queryParams"
          }
        }
      },
      "inline_response_200_8": {
        "type": "object",
        "properties": {
          "linerServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/linerService"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_8_queryParams"
          }
        }
      },
      "inline_response_200_9": {
        "type": "object",
        "properties": {
          "linkedPorts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/linkedPort"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_9_queryParams"
          }
        }
      },
      "inline_response_200_10": {
        "type": "object",
        "properties": {
          "linerCarriers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/linerCarrier"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_10_queryParams"
          }
        }
      },
      "inline_response_200_11": {
        "type": "object",
        "properties": {
          "portInfrastructure": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/portInfrastructure"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_12": {
        "type": "object",
        "properties": {
          "portGates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/gate"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_13": {
        "type": "object",
        "properties": {
          "berths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/berth"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_14": {
        "type": "object",
        "properties": {
          "portTerminals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/portTerminal"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_15": {
        "type": "object",
        "properties": {
          "railTerminals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/railTerminal"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_16": {
        "type": "object",
        "properties": {
          "portMarks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/portMark"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_17": {
        "type": "object",
        "properties": {
          "batymetry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bathymetry"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_18": {
        "type": "object",
        "properties": {
          "customsClearanceProcedures": {
            "$ref": "#/components/schemas/customsClearanceProcedure"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_19": {
        "type": "object",
        "properties": {
          "borderInspectionProcedures": {
            "$ref": "#/components/schemas/borderInspectionProcedure"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_20": {
        "type": "object",
        "properties": {
          "vgmProcedures": {
            "$ref": "#/components/schemas/vgmProcedure"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_21": {
        "type": "object",
        "properties": {
          "containerTareWeight": {
            "$ref": "#/components/schemas/containerTare"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_21_queryParams"
          }
        }
      },
      "inline_response_200_22": {
        "type": "object",
        "properties": {
          "qualityCertificationProcedures": {
            "$ref": "#/components/schemas/qualityCertificationProcedure"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_23": {
        "type": "object",
        "properties": {
          "qualityCertifiedPartners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/qualityCertifiedPartner"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_24": {
        "type": "object",
        "properties": {
          "partnerActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/activity"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_25": {
        "type": "object",
        "properties": {
          "pickupProcedures": {
            "$ref": "#/components/schemas/pickupProcedure"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_26": {
        "type": "object",
        "properties": {
          "deliveryProcedures": {
            "$ref": "#/components/schemas/deliveryProcedure"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_27": {
        "type": "object",
        "properties": {
          "approachInstructions": {
            "$ref": "#/components/schemas/approachInstructions"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_28": {
        "type": "object",
        "properties": {
          "basicTrafficStatistics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/basicTrafficStatistics"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_29": {
        "type": "object",
        "properties": {
          "basicEconomicData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/basicEconomicData"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_30": {
        "type": "object",
        "properties": {
          "typesOfCargo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/typeOfCargo"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_31": {
        "type": "object",
        "properties": {
          "commoditiesList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/commodity"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_32": {
        "type": "object",
        "properties": {
          "realtimeWeather": {
            "$ref": "#/components/schemas/realtimeWeather"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_33": {
        "type": "object",
        "properties": {
          "weatherForecast": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/weatherForecast"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_34": {
        "type": "object",
        "properties": {
          "astronomy": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/astronomy"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_35": {
        "type": "object",
        "properties": {
          "seaCondition": {
            "$ref": "#/components/schemas/seaCondition"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_36": {
        "type": "object",
        "properties": {
          "wavePrediction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/wavePrediction"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_36_queryParams"
          }
        }
      },
      "inline_response_200_37": {
        "type": "object",
        "properties": {
          "tides": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tides"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_36_queryParams"
          }
        }
      },
      "inline_response_200_38": {
        "type": "object",
        "properties": {
          "airQuality": {
            "$ref": "#/components/schemas/airQuality"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_39": {
        "type": "object",
        "properties": {
          "airPollution": {
            "$ref": "#/components/schemas/airParameters"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_40": {
        "type": "object",
        "properties": {
          "waterQuality": {
            "$ref": "#/components/schemas/waterQuality"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_41": {
        "type": "object",
        "properties": {
          "waterParameters": {
            "$ref": "#/components/schemas/waterParameters"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_42": {
        "type": "object",
        "properties": {
          "noiseLevel": {
            "$ref": "#/components/schemas/noiseLevel"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_43": {
        "type": "object",
        "properties": {
          "railConnections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/railConnection"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_44": {
        "type": "object",
        "properties": {
          "inlandTerminals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/inlandTerminal"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_45": {
        "type": "object",
        "properties": {
          "railUndertakings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/railwayUndertaking"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_46": {
        "type": "object",
        "properties": {
          "railLogisticServiceProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/railLogisticServiceProvider"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_47": {
        "type": "object",
        "properties": {
          "trainArrivals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/trainArrivals"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_48": {
        "type": "object",
        "properties": {
          "trainDepartures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/trainDepartures"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_49": {
        "type": "object",
        "properties": {
          "trafficFlowObserved": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vehicleTraffic"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_49_queryParams"
          }
        }
      },
      "inline_response_200_50": {
        "type": "object",
        "properties": {
          "accessWaitTime": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/accessTime"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_50_queryParams"
          }
        }
      },
      "inline_response_200_51": {
        "type": "object",
        "properties": {
          "landsideThroughput": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/throughput"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_50_queryParams"
          }
        }
      },
      "inline_response_200_52": {
        "type": "object",
        "properties": {
          "accessTime": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/throughput"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_50_queryParams"
          }
        }
      },
      "newsSubscriptionValidation_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/subscriptionRequestReference"
          },
          {
            "$ref": "#/components/schemas/validationKey"
          }
        ]
      },
      "newsUnsubscriptionRequest_body": {
        "example": {
          "email": "name@domain.com"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/email"
          },
          {
            "$ref": "#/components/schemas/phone"
          }
        ]
      },
      "newsUnsubscriptionValidation_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/subscriptionRequestReference"
          },
          {
            "$ref": "#/components/schemas/validationKey"
          }
        ]
      },
      "inline_response_200_53": {
        "type": "object",
        "properties": {
          "news": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/news"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_53_queryParams"
          }
        }
      },
      "inline_response_200_54": {
        "type": "object",
        "properties": {
          "newsCategories": {
            "$ref": "#/components/schemas/newsCategories"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_55": {
        "type": "object",
        "properties": {
          "newsLanguages": {
            "$ref": "#/components/schemas/newsLanguages"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_56": {
        "type": "object",
        "properties": {
          "news": {
            "$ref": "#/components/schemas/news"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "noticesSubscriptionValidation_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/subscriptionRequestReference"
          },
          {
            "$ref": "#/components/schemas/validationKey"
          }
        ]
      },
      "noticesUnsubscriptionRequest_body": {
        "example": {
          "email": "name@domain.com"
        },
        "oneOf": [
          {
            "$ref": "#/components/schemas/email"
          },
          {
            "$ref": "#/components/schemas/phone"
          }
        ]
      },
      "noticesUnsubscriptionValidation_body": {
        "allOf": [
          {
            "$ref": "#/components/schemas/subscriptionRequestReference"
          },
          {
            "$ref": "#/components/schemas/validationKey"
          }
        ]
      },
      "inline_response_200_57": {
        "type": "object",
        "properties": {
          "notice": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/notice"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/portCode"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_53_queryParams"
          }
        }
      },
      "inline_response_200_58": {
        "type": "object",
        "properties": {
          "noticeCategories": {
            "$ref": "#/components/schemas/noticesCategories"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_58_queryParams"
          }
        }
      },
      "inline_response_200_59": {
        "type": "object",
        "properties": {
          "noticesLanguages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/noticesLanguages"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_60": {
        "type": "object",
        "properties": {
          "notice": {
            "$ref": "#/components/schemas/notice"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_60_queryParams"
          }
        }
      },
      "inline_response_200_61": {
        "type": "object",
        "properties": {
          "portRatesAndFees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ratesAndFeesUrl"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_62": {
        "type": "object",
        "properties": {
          "shipServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/shipService"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_62_queryParams"
          }
        }
      },
      "inline_response_200_63": {
        "type": "object",
        "properties": {
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/activity"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_64": {
        "type": "object",
        "properties": {
          "holidays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/holiday"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_64_queryParams"
          }
        }
      },
      "inline_response_200_65": {
        "type": "object",
        "properties": {
          "holidayTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/holidayType"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "inline_response_200_66": {
        "type": "object",
        "properties": {
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/companyOverviewData"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_66_queryParams"
          }
        }
      },
      "inline_response_200_67": {
        "type": "object",
        "properties": {
          "companiesByName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/companyInfo"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_67_queryParams"
          }
        }
      },
      "inline_response_200_68": {
        "type": "object",
        "properties": {
          "companyByVat": {
            "$ref": "#/components/schemas/companyInfo"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_68_queryParams"
          }
        }
      },
      "inline_response_200_69": {
        "type": "object",
        "properties": {
          "companyActivities": {
            "$ref": "#/components/schemas/activities"
          },
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "queryParams": {
            "$ref": "#/components/schemas/inline_response_200_1_queryParams"
          }
        }
      },
      "weatherForecast_dayMaximum": {
        "type": "object",
        "properties": {
          "feelsLikeTemperature": {
            "$ref": "#/components/schemas/feelsLikeTemperature"
          },
          "relativeHumidity": {
            "$ref": "#/components/schemas/relativeHumidity"
          },
          "temperature": {
            "$ref": "#/components/schemas/temperature"
          }
        },
        "description": "The maximum values for the reported period. Subattributes:- `temperature` : The maximum temperature. See `WeatherForecast.temperature` for description and units. - `feelLikesTemperature`. The maximum feels like temperature. Same semantics and units as `WeatherForecast.feelsLikeTemperature`.-   `relativeHumidity`. The maximum relative humidity. Same semantics and units as `WeatherForecast.relativeHumidity`.",
        "example": null
      },
      "weatherForecast_dayMinimum": {
        "type": "object",
        "properties": {
          "feelsLikeTemperature": {
            "$ref": "#/components/schemas/feelsLikeTemperature"
          },
          "relativeHumidity": {
            "$ref": "#/components/schemas/relativeHumidity"
          },
          "temperature": {
            "$ref": "#/components/schemas/temperature"
          }
        },
        "description": "Minimum values forecasted for the reported period.  Minimum values for the reported period. Subattributes:- `temperature` : Minimum temperature. See `WeatherForecast.temperature` for description and units. - `feelLikesTemperature`. Minimum feels like temperature. Same semantics and units as `WeatherForecast.feelsLikeTemperature`.- `relativeHumidity`. Minimum relative humidity. Same semantics and units as `WeatherForecast.relativeHumidity`",
        "example": null
      },
      "tides_highTide": {
        "type": "object",
        "properties": {
          "height": {
            "$ref": "#/components/schemas/height"
          },
          "time": {
            "$ref": "#/components/schemas/time"
          }
        },
        "description": "The maximum height reached by a rising tide.  High tide is measured in meters.",
        "example": null
      },
      "tides_lowTide": {
        "type": "object",
        "properties": {
          "height": {
            "$ref": "#/components/schemas/height"
          },
          "time": {
            "$ref": "#/components/schemas/time"
          }
        },
        "description": "The minimum height reached by a falling tide.  Low tide is measured in meters.",
        "example": null
      },
      "inline_response_200_queryParams": {
        "type": "object",
        "properties": {
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "fromDate": {
            "$ref": "#/components/schemas/fromDate"
          },
          "dateRange": {
            "$ref": "#/components/schemas/dateRange"
          },
          "shipType": {
            "$ref": "#/components/schemas/shipType"
          }
        },
        "example": null
      },
      "inline_response_200_1_queryParams": {
        "type": "object",
        "properties": {
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          }
        },
        "example": null
      },
      "inline_response_200_7_queryParams": {
        "type": "object",
        "properties": {
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "shipName": {
            "$ref": "#/components/schemas/shipName"
          }
        },
        "example": null
      },
      "inline_response_200_8_queryParams": {
        "type": "object",
        "properties": {
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "linkedPortCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "coastalArea": {
            "$ref": "#/components/schemas/coastalArea"
          }
        },
        "example": null
      },
      "inline_response_200_9_queryParams": {
        "type": "object",
        "properties": {
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "coastalArea": {
            "$ref": "#/components/schemas/coastalArea"
          },
          "countryCode": {
            "$ref": "#/components/schemas/countryCode"
          }
        },
        "example": null
      },
      "inline_response_200_10_queryParams": {
        "type": "object",
        "properties": {
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "coastalArea": {
            "$ref": "#/components/schemas/coastalArea"
          },
          "countryCode": {
            "$ref": "#/components/schemas/countryCode"
          },
          "linkedPortCode": {
            "$ref": "#/components/schemas/portCode"
          }
        },
        "example": null
      },
      "inline_response_200_21_queryParams": {
        "type": "object",
        "properties": {
          "containerNumber": {
            "$ref": "#/components/schemas/containerNumber"
          }
        },
        "example": null
      },
      "inline_response_200_36_queryParams": {
        "type": "object",
        "properties": {
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "forecastedDate": {
            "$ref": "#/components/schemas/forecastedDate"
          }
        },
        "example": null
      },
      "inline_response_200_49_queryParams": {
        "type": "object",
        "properties": {
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "vehicleTypes": {
            "$ref": "#/components/schemas/vehicleTypes"
          },
          "portGate": {
            "$ref": "#/components/schemas/gate"
          },
          "flowDirection": {
            "$ref": "#/components/schemas/flowDirection"
          }
        },
        "example": null
      },
      "inline_response_200_50_queryParams": {
        "type": "object",
        "properties": {
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "terminalCode": {
            "$ref": "#/components/schemas/terminalCode"
          }
        },
        "example": null
      },
      "inline_response_200_53_queryParams": {
        "type": "object",
        "properties": {
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "publishingStage": {
            "$ref": "#/components/schemas/publishingStage"
          },
          "fromDate": {
            "$ref": "#/components/schemas/fromDate"
          }
        },
        "example": null
      },
      "inline_response_200_58_queryParams": {
        "type": "object",
        "properties": {
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "noticeLanguage": {
            "$ref": "#/components/schemas/noticeLanguage"
          }
        },
        "example": null
      },
      "inline_response_200_60_queryParams": {
        "type": "object",
        "properties": {
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          }
        },
        "example": null
      },
      "inline_response_200_62_queryParams": {
        "type": "object",
        "properties": {
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "shipServiceType": {
            "$ref": "#/components/schemas/shipServiceType"
          }
        },
        "example": null
      },
      "inline_response_200_64_queryParams": {
        "type": "object",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/countryCode"
          },
          "subdivision": {
            "$ref": "#/components/schemas/subdivisionCode"
          },
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "fromDate": {
            "$ref": "#/components/schemas/fromDate"
          },
          "toDate": {
            "$ref": "#/components/schemas/toDate"
          }
        },
        "example": null
      },
      "inline_response_200_66_queryParams": {
        "type": "object",
        "properties": {
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "activity": {
            "$ref": "#/components/schemas/activity"
          }
        },
        "example": null
      },
      "inline_response_200_67_queryParams": {
        "type": "object",
        "properties": {
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "companyName": {
            "$ref": "#/components/schemas/companyName"
          }
        },
        "example": null
      },
      "inline_response_200_68_queryParams": {
        "type": "object",
        "properties": {
          "portCode": {
            "$ref": "#/components/schemas/portCode"
          },
          "companyVat": {
            "$ref": "#/components/schemas/companyVat"
          }
        },
        "example": null
      }
    },
    "parameters": {
      "portCode": {
        "name": "portCode",
        "in": "query",
        "description": "Port UN/LOCODE. Default value is Locode of Port what provides the services.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/portCode"
        }
      },
      "country": {
        "name": "country",
        "in": "query",
        "description": "ISO3166 2 characters country code.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/countryCode"
        }
      },
      "subdivision": {
        "name": "subdivision",
        "in": "query",
        "description": "ubdivision code from ISO 3166 - Codes for the representation of names of countries and their subdivisions.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/subdivisionCode"
        }
      },
      "fromDate": {
        "name": "fromDate",
        "in": "query",
        "description": "The start date of the period for which schedule information is requested. The value is populated in ISO 8601 Date format. If not provided, the current date is used by default.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/fromDate"
        }
      },
      "toDate": {
        "name": "toDate",
        "in": "query",
        "description": "Last day of a period is expressed as YYYY-MM-DD.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/toDate"
        }
      },
      "dateRange": {
        "name": "dateRange",
        "in": "query",
        "description": "The time period for which schedule information is sent. The duration is populated in ISO 8601 Duration format. If not provided, 24 hours is used by default.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/dateRange"
        },
        "example": "T24H"
      },
      "shipType": {
        "name": "shipType",
        "in": "query",
        "description": "Type of ship. Default value are all types.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/shipType"
        }
      },
      "shipName": {
        "name": "shipName",
        "in": "query",
        "description": "Name of the cruise ship.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/shipName"
        }
      },
      "shipServiceType": {
        "name": "shipServiceType",
        "in": "query",
        "description": "Type of ship service.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/shipServiceType"
        }
      },
      "coastalArea": {
        "name": "coastalArea",
        "in": "query",
        "description": "Maritime coastal areas.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/coastalArea"
        }
      },
      "countryCode": {
        "name": "countryCode",
        "in": "query",
        "description": "Country code as in ISO3166 2 alpha characters.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/countryCode"
        }
      },
      "linkedPortCode": {
        "name": "linkedPortCode",
        "in": "query",
        "description": "Port that is served by a direct service of a liner and do not requires a transshipment.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/portCode"
        },
        "example": "HKHKG"
      },
      "linerServiceName": {
        "name": "fromDate",
        "in": "query",
        "description": "The name of a Liner Service as it is in Alphaliner.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/linerServiceName"
        }
      },
      "containerNumber": {
        "name": "containerNumber",
        "in": "query",
        "description": "Container number as is described in ISO6346.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/containerNumber"
        },
        "example": "ABCU1234567"
      },
      "forecastedDate": {
        "name": "forecastedDate",
        "in": "query",
        "description": "Date of the forecast.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/forecastedDate"
        }
      },
      "vehicleTypes": {
        "name": "vehicleTypes",
        "in": "query",
        "description": "Type of vehicle from the point of view of its structural characteristics.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/vehicleTypes"
        }
      },
      "portGate": {
        "name": "portGate",
        "in": "query",
        "description": "Access gate",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/gate"
        }
      },
      "flowDirection": {
        "name": "flowDirection",
        "in": "query",
        "description": "Flow direction.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/flowDirection"
        }
      },
      "terminal": {
        "name": "terminal",
        "in": "query",
        "description": "Code that identifies a terminal.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/terminalCode"
        }
      },
      "publishingStage": {
        "name": "publishingStage",
        "in": "query",
        "description": "The stage of the publishing process of a notice or news. There are only two possible stages, ACTIVE and EXPIRED. This parameter must be used when the publishing process is EXPIRED. If not provided, the ACTIVE stage is used by default.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/publishingStage"
        }
      },
      "id": {
        "name": "id",
        "in": "query",
        "description": "The unique identification of a database register.",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/id"
        }
      },
      "companyName": {
        "name": "companyName",
        "in": "query",
        "description": "Name of the company",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/companyName"
        }
      },
      "companiesByName": {
        "name": "searchTerm",
        "in": "query",
        "description": "Part of the name of the company without diacritics",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/searchTerm"
        }
      },
      "companyByVat": {
        "name": "companyName",
        "in": "query",
        "description": "Vat number of the company",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/companyVat"
        }
      },
      "activity": {
        "name": "activity",
        "in": "query",
        "description": "Activity of a company",
        "required": false,
        "style": "form",
        "explode": false,
        "schema": {
          "$ref": "#/components/schemas/activity"
        }
      }
    },
    "headers": {
      "oiapApiVersion": {
        "description": "string that is usedto identify the version implemented of the Open Info API for Ports.",
        "example": "0.9.0-oas3"
      }
    }
  }
}