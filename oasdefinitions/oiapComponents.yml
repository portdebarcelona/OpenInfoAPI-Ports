openapi: '3.0.3'
info:
  version: '0.9.0-oas3'
  title: OIAP Components
  description: |
    **Open Info API para Puertos**


    List of components that are used in the APIs developed for the Open Info API para Puertos project.
  license:
    name: CC0 1.0 Universal (CC0 1.0)
    url: https://creativecommons.org/publicdomain/zero/1.0/deed.es
  contact:
    name: OpenInfoAPI github
    url: https://github.com/portdebarcelona/OpenInfoAPI-Ports
# servers:
#  - url: https://github.com/portdebarcelona/OpenInfoAPI-Ports/blob/develop/oasdefinitions/
paths:
  /dummyPath:   # We don't need a path  --> INDEX
    get:
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      responses:
        default:
          description: successful operation 

components:
# This section include all the headers and schemas that are reused in the project Info Open API para Puertos (OIAP).
# They are grouped according to the groups established by the United Nations in the Trade Data Element Directory (UNTDED, ISO 7372) that is developed and published by UN/CEFACT, where: 
#   Group 1 is for documentation and references.
#   Group 2 is for dates, times, periods of time
#   Group 3 is for Parties, addresses, places, countries
#   Group 4 is for  clauses, conditions, terms, instructions
#   Group 5 is for amounts, charges, percentages
#   Group 6 is for measure identifiers, quantities (other than monetary)
#   Group 7 is for goods and articles: descriptions and identifiers
#   Group 8 is for transport modes, means and equipments
#   Group 9 is for other data elements 

  headers: 
    currentPage: 
        description: A link to the current page.
        schema: 
            type: string
            example: CZs+aW-1pdD01
        required: true
    nextPage: 
        description: A link to the next page. Next-Page header link MAY be omitted if the current page is the last page.
        schema:
            type: string
            example: 3+fE9mZnNldHw
        required: false
    prevPage:
        description: A link to the previous page. Previous-Page header link MAY be omitted if the current page is the first page.
        schema: 
            type: string
            example: ZnNl=dHw9MCZs
        required: false
    lastPage: 
        description: A link to the last page. Last-Page header link MAY be omitted if the current page is the last page.
        schema: 
            type: string
            example: ldHw9NTkm-bGlt
        required: false
    firstPage: 
        description: A link to thefirst page. First-Page header link MAY be omitted if current page is the first page.
        schema: 
            type: string
            example: aXttva7+dWZ42i
        required: false
    oiapApiVersion:
        description: SemVer used to indicate the version of the contract (API version) returned.
        schema: 
            type: string
            example: 0.9.0-oas3
  schemas:
#   Group 1: Documentation and references.

    id:
      description: |
            Entity's unique identifier.
      type: string
      maxLength: 35
      example: XAC12345CA

    uri:
      description: |
            The Uniform Resource Identifier (URI) is a unique sequence of characters that identifies a logical or physical resource used by web technologies.
      type: string

    componentInfo:
      description: |
            Metadata information associated to an API call.
      type: object
      properties:
        uriCall:
          description: URI of the API call.
          $ref: '#/components/schemas/uri'           
        urlOas3:
          description: URL of the OAS 3.x.
          $ref: '#/components/schemas/uri'
        definition:
          description: Definition.
          type: string
      required:
        - uriCall
        - definition

    validationKey:
      description: The code received to complete a subscription process.
      type: string
      example: '4ZT2'

    searchTerm:
      description: String used to search something.
      type: string
      minLength: 3

    dataProvider:
      description: Specifies the URL to inform about the provider of this information.
      type: string

    alertCategory:
      description: Define the category of alert (Traffic jam, accidents, weather conditions, high level of pollutants)
      type: string
      enum: [Traffic jam, accidents, weather conditions, high level of pollutants]
      example: weather conditions

    alertSubCategory:
      description: >
              Define the sub category of alert.
              (trafficJam, carAccident, carWrongDirection, carStopped, pothole, roadClosed, roadWorks, hazardOnRoad, injuredBiker) (for traffic category)
              (flood, tsunami, coastalEvent, earthquake) (for naturalDisaster category)
              (rainfall, highTemperature, lowTemperature, heatWave, coldWave, ice, snow, wind, fog, tornado, tropicalCyclone, hurricane, snow/ice, thunderstorms, fireRisk, avalancheRisk, floodRisk) (for weather category)
              (airPollution, waterPollution, pollenConcentration) (for environment category)
      type: string
      example: wind

    alertSource:
      description: >
              Reference to the source of the alert. For example, it could be a user of an application, a device, or a service.
      type: string

    severity:
      description: >
              Define the level of gravity of a given alert.
      type: string
      enum: [informational, low, medium, high, critical]

    error:
      description: Error body
      type: object
      properties:
        code:
          description: HTML response status code.
          type: string
          pattern: /([1-5][0-9]{2})/
        messageCode:
          description: Code error description.
          type: string
          example: Error description
        message:
          description: Error description.
          type: string
          example: Error description
        timestamp:  
          description: Timestamp of error ocurrence.
          type: string
          format: date-time
      required:
        - code
        - message

    metadata:
      description: Metadata information.
      type: object
      properties:
        dateCreated:    
          description: 'Entity creation timestamp. This will usually be allocated by the storage platform.'    
          type: string 
          format: date-time    
        dateIssued:    
          description: 'The date and time the forecast was issued by the meteorological bureau in ISO8601 UTC format.'    
          type: string 
          format: date-time    
        dateModified:    
          description: 'Timestamp of the last modification of the entity. This will usually be allocated by the storage platform.'    
          type: string   
          format: date-time    
        dateRetrieved:    
          description: 'The date and time the forecast was retrieved in ISO8601 UTC format.'      
          type: string    
          format: date-time  

    lastCheckedResult:
      description: 'Timestamp when the last update of the attribute happened.'
      type: string
      format: date-time


#   Group 2: Dates, times, periods of time

    dateIssued:  
      description: The date and time the alert was issued by the alert generator. The value is populated in ISO 8601 Date format.
      type: string
      format: date
      example: 2022-01-18 

    fromDate:  
      description: The initial date of a periode of time. The value is populated in ISO 8601 Date format.
      type: string
      format: date
      example: 2022-01-20 

    toDate:  
      description: The final date of a periode of time. The value is populated in ISO 8601 Date format.
      type: string
      format: date
      example: 2022-01-20 

    forecastedDate:  
      description: The forecast date.
      type: string
      format: date
      example: 2022-04-12 

    dateRange: 
      description: 
            The duration of a time period. It is populated in ISO 8601 duration format. E.g. 4 weeks and 2 days is represented as P4W2D
      type: string
      format: iso8601
      example: P4W  

    estimatedTimeOfArrival:  
      description: The date and time the means of transport is estimated to arrive at a specified location (ETA), in ISO 8601 Date format.
      type: string
      format: date-time
      example: 2022-03-01T11:53:00Z

    actualTimeOfArrival:  
      description: The date and time the means of transport arrives at a specified location (ATA), in ISO 8601 Date format.
      type: string
      format: date-time
      example: 2022-03-03T12:56:00Z

    estimatedTimeOfDeparture:  
      description: The date and time the means of transport is estimated to depart from a specified location (ETD), in ISO 8601 Date format.
      type: string
      format: date-time
      example: 2022-03-15T08:23:00Z

    actualTimeOfDeparture:  
      description: The date and time the means of transport departs from a specified location (ATD), in ISO 8601 Date format.
      type: string
      format: date-time
      example: 2022-03-16T01:04:00Z   

    time:  
      description: Representation of a time, in ISO 8601 Time format.
      type: string
      example: 13:04:00 

    hour: 
      description: Hour expressed in a 24 hours format and represents the periode between hh:00:00 and hh:59:59
      type: string
      example: 07

#   Group 3: Parties, addresses, places, countries
    contactInfo:
      description: email or phone
      type: string

    email:
      description: email
      type: string

    phone:
      description: phone number 
      type: string

    name:
      description: name
      type: string

    surname:
      description: surname
      type: string      

    openingHours:   # Pending
      description: Opening hours.
      type: object
      properties:
        afternoon:
          type: string
        closed:
          type: boolean
        day:
          type: string
        forenoon:
          type: string

    afterHours:  # Pending 
      description: Contact info after hours.
      type: object
      properties:
        email:
          type: string
        fax:
          type: string
        functionTitle:
          type: string
        gsm:
          type: string
        name:
          type: string
        phone:
          type: string

    address:
      description: Address.
      type: object
      properties:
        city:
          type: string
        country:
          type: string
        streetAndNumber:
          type: string
        zipCode:
          type: string

    language:
      description: |
            The ISO 639 code of a language. Each language is assigned a two-letter (639-1) lowercase abbreviation.
            E.g. `ca` Catalan.
      type: string
      maxLength: 2
      example: ca 

    companyDetails: # Definition pending. Look at schema.org
      description: Information about a company.
      type: string

    governmentalBodyDetails: # Definition pending. Look at schema.org Thonk about merging with companyDetails
      description: Information about a governmental body.
      type: string

    companyOverviewInfo: 
      description: 'Basic information about a company or a governmental body.'
      type: object
      allOf:
        - type: object 
          properties:
            companyName:
              $ref: '#/components/schemas/companyName' 
            activities:  # array, because they can be more than one
              type: array
              items:
                $ref: './oiapComponents.yml#/components/schemas/activity'
            companyVat:
              $ref: '#/components/schemas/companyVat'

    companyInfo: 
      description: 'Detailled information about a company or a governmental body.' 
      type: object
      allOf:
        - type: object 
          properties:  
            activities:  # array, because theycan be more than one
              type: array
              items:
                $ref: '#/components/schemas/activity'
            companyName:  
              $ref: '#/components/schemas/companyName' 
            email:  
              $ref: '#/components/schemas/email'
            phone:  
              $ref: '#/components/schemas/phone'
            website:  
              $ref: '#/components/schemas/uri'
            companyAddress:  
              $ref: '#/components/schemas/address'
            openingHours:
              $ref: '#/components/schemas/openingHours'             
            afterHours: # contact info for after hours  
              $ref: '#/components/schemas/afterHours' 
            companyVat:  
              $ref: '#/components/schemas/companyVat'

    companyVat:
      description: Vat number of a company.
      type: string

    partnerActivity:   # Maybe it can be replaced by activity
      description: Main activity of a partner.
      type: string
      example: Freight forwarder

    activity:  
      description: >
            Activity performed by a company or a governmental body.


            The following list include most of the activities and, if it is not included, `Other` must be selected: 
              * `Port Authority`
              * `Harbour Master`
              * `Customs`
              * `Border Control Post (BCP)`
              * `Immigration`
              * `Container Depot`
              * `Container Terminal`
              * `Container (CFS)`
              * `General Cargo Terminal`
              * `Multi Purpose Terminal`              
              * `Liquid Cargo Terminal`
              * `Bulk Cargo Terminal`
              * `Temperature Controlled Terminal`
              * `Dangerous Cargo Warehouse`
              * `Passenger Terminal`
              * `Inland Container Terminal`
              * `Liner Agent - Carrier`
              * `Railway Undertaking`
              * `Haulier`
              * `Barge Carrier`
              * `Freight Forwarder`
              * `Customs Broker`
              * `Stevedoring & Lashing`
              * `Tally`
              * `Ship Supplier`
              * `Nautic-technic`
              * `Tug`
              * `Mooring`
              * `Shipyards & Repair`
              * `Shipowner`
              * `Pilots`
              * `Research`
              * `Consulting`
              * `Port Community System - PCS`
              * `IT-Service`
              * `Insurance`
              * `Container Leasing`
              * `Railway Services`
              * `Railway Logistics Operator`
              * `Other`
      type: string
      enum: [Port Authority, Harbour Master, Customs, Border Control Post (BCP), Immigration, Container Depot, Container Terminal, Container (CFS), General Cargo Terminal, Multi Purpose Terminal, Liquid Cargo Terminal, Bulk Cargo Terminal, Temperature Controlled Terminal, Dangerous Cargo Warehouse, Passenger Terminal, Inland Container Terminal, Liner Agent - Carrier, Railway Undertaking, Haulier, Barge Carrier, Freight Forwarder, Customs Broker, Stevedoring & Lashing, Tally, Ship Supplier, Nautic-technic, Tug, Mooring, Shipyards & Repair, Shipowner, Pilots, Research, Consulting, Port Community System - PCS, IT-Service, Insurance, Container Leasing, Railway Services, Railway Logistics Operator, Other]
      example: Port Authority

    companyName: 
      description: Name of a company.
      type: string

    ferryOperator:
      description: 
        Identification of the company that operates a ferry.  
      type: object
      properties:
        code:
          description: Operator code. Code assigned to a ferry operator.  
          type: string
          example: GRM
        description:
          description: Name of the ferry operator. 
          type: string
          example: GRIMALDI 
      required:
        - description

    cruiseLine:
      description: 
        Identification of the company that operates the cruise ship.  
      type: object
      properties:
        code:
          description: Operator code. Code assigned to a cruise line.  
          type: string
          example: COSTA
        description:
          description: Name of the cruise line. 
          type: string
          example: COSTA CRUCEROS 
      required:
        - description

    locode:
      description: UN/LOCODE of a location as specified in the UN/ECE Recommendation nº16
      type: string
      maxLength: 5

    portCode:
      description: Port UN/LOCODE
      type: string
      maxLength: 5
      example: ESBCN 

    portName:
      description: Port name.
      type: string
      example: Barcelona 

    coastalArea: 
      description: >
            MARITIME COASTAL AREAS The nomenclature to be used is the Geonomenclature (the nomenclature of countries and territories for the external trade statistics of the Union and statistics of trade between Member States) (1) in force in the year to which the data refer. The code consists of four digits: the ISO alpha 2 standard code for each country from the abovementioned nomenclature, followed by two zeros (e.g. code GR00 for Greece), except for countries which are divided into two or more maritime coastal areas, which are identified by a fourth digit other than zero (from 1 to 7)Name of a geographical area, based on the Nomenclature of Countries and Territories for the European statistics on international trade in goods and on the geographical breakdown for other business statistics.            
      maxLength: 4
      example: GR00  

    countryCode: 
      description: Country code as a 2 alpha characters from ISO3166.            
      maxLength: 2
      example: GR 

    linkedPort: 
      description: 'Port that is served by a direct service of a liner and do not requires a transshipment.'
      properties:
        portCode:
          example: SGSGP
          $ref: '#/components/schemas/portCode' 
        portName:
          type: string 
          example: Singapore

    linkedPortCode: 
      description: 'Port UN/LOCODE served by a liner.'
      example: SGSGP
      $ref: '#/components/schemas/portCode'

    lastPortOfCall:
      description: |
            UN/LOCODE of the last POrt of Call
      type: string
      maxLength: 5
      example: HKHKG 

    nextPortOfCall:
      description: UN/LOCODE from next port of call. 
      type: string
      maxLength: 5
      example: NLRTM

    placeOfDeparture:
      description: Name of the place of departure. 
      type: object
      anyOf:
        - type: object
          properties:
            code:
              description: Code of the place of departure.  
              type: string
              maxLength: 5
        - type: object
          properties:
            description:
              description: Name of the place of departure.  
              type: string
              maxLength: 35

    placeOfDestination:
      description: Name of the place of destination. 
      type: object
      anyOf:
        - type: object
          properties:
            code:
              description: Code of the place of destination.  
              type: string
              maxLength: 5
        - type: object
          properties:
            description:
              description: Name of the place of destination.  
              type: string
              maxLength: 35

    coordinates: 
      description: >
        Either of the two lines of latitude and longitude whose intersection determines the geographical point of a place.
      properties:
        latitude:
          description: latitude of a point. 
          type: number
          example: 41.35331
        longitude:
          description: Longitude of a point 
          type: number
          example: 2.175017

    berth:
      type: object
      description: 
        Identification of a berth from a port.  
      properties:
        berthCode:
          description: Berth code. Code assigned to a berth from a port.  
          type: string
          example: 01B 
        berthName:
          description: Berth name. 
          type: string
          example: ADOSSAT 
        berthCoordinates:
          $ref: '#/components/schemas/coordinates'
        berthLength:
          $ref: '#/components/schemas/berthLength'
        berthDepth:
          description: Berth depth. 
          $ref: '#/components/schemas/underwaterDepth' 
      required:
        - code

    channel:
      type: object
      description: 
        Identification of a port channel.  
      properties:
        code:
          description: Channel code. Code assigned to a port channel.  
          type: string
          example: NE 
        description:
          description: Channel name. 
          type: string
          example: North East entrance 
        channelCoordinates:
          $ref: '#/components/schemas/coordinates'
      required:
        - code

    facility:
      type: object
      description: 
        Identification of a port facility.  
      properties:
        code:
          description: Facility code. Code assigned to a facility from a port.  
          type: string
          example: 08MBCN
        description:
          description: Facility name. 
          type: string
          example: TERMINAL CREUERS
        berth:
          $ref: '#/components/schemas/berth' 
      required:
        - description

    terminalCode:
      description: Port facility number. GISIS code assigned by IMO to a facility from a port.
      type: string
      minLength: 10
      example: ESBCN-0042     

    gate: 
      description: 'Attributes of an access gate.'
      properties:
        gateName:
          description: Name of a gate. 
          type: string
        gateCoordinates:
          description: Coordinates of a gate. 
          $ref: '#/components/schemas/coordinates'
        vehicleFlowDirection:
          description: > 
                Direction of the vehicle flow at the gate. 
                  * `Inward`
                  * `Outward`
                  * `Both` - inward and outward
          type: string
          enum: [Inward, Outward, Both]
          example: Both
        gateTypeOfVehicles:
          description: >
                Type of vehicles. 
                  * `Cars`
                  * `Trucks`
                  * `Both` - Trucks and cars
                  * `Trains`
          type: string
          enum: [Cars, Trucks, Both, Trains]
          example: Trucks

    totalArea: 
      description: Total area expressed in ha.
      type: integer

    berthLength:
      description: Berth length, expresed in meters. 
      type: integer
      example: 635  

    coveredWarehouses: 
      description: Total area of the covered warehouses in sq m.
      type: integer

    underwaterDepth:
      description: Bathymetric information. Depth expessed in meters. It must be used positive numbers. 
      type: number
      example: 12.5

    singularPoint:
      description: A singular point of the port waters. It can be used to specify a point where bathymetric data is vailable. 
      oneOf:
        - $ref: '#/components/schemas/berth'
        - $ref: '#/components/schemas/channel' 

    railBundles:
      description: Number of rail tracks in a facility. 
      type: integer
      example: 8

    trackMaximumLength: 
      description: Maximum length of a rail track in a facility, expressed in meters. 
      type: integer
      example: 800

    trackGauge: 
      description: >
            Distance between the inside surfaces of the two load-bearing rails of a railway track. 
              * `Standard gauge - UIC` 1,435 mm
              * `Iberian gauge` 1,668 mm
              * `Metre gauge` 1,000 mm
      type: string
      enum: [Standard gauge - UIC, Iberian gauge, Metre gauge]
      example: Iberian gauge    

    gantryCranes: 
      description: Number of gantry cranes in a facility. 
      type: integer
      example: 3



#   Group 4: Clauses, conditions, terms, instructions



#   Group 5: Amounts, charges, percentages
  # Statistics
  # Rates and fees

    height:  
      description: Representation of a height, in meters.
      type: number








#   Group 6: Measure identifiers, quantities (other than monetary)

#   Group 7: Goods and articles: descriptions and identifiers




#   Group 8 is for transport modes, means and equipments
  # Maritime transport
    shipIMONumber:
      description: The identifier of ship.
      type: string
      maxLength: 7 
      example: 9876543 

    shipName:
      description: The ship’s name shown on the IMO ship’s certificates.
      type: string
      maxLength: 35
      example: AURORA 

    shipType:
      description: >
            The type of the ship. The value is populated using the 2 character code from Annex 2 from UN/ECE Recommendation Nº28 when the means of transport is 1 (maritime).
            E.g.  50 Is the code  for a General cargo vessel. A vessel designed to carry general cargo.
              * `50`	General cargo vessel	Vessel designed to carry general cargo.
              * `51`	Unit carrier	Vessel designed to carry unit loads
              * `52`	Bulk carrier	Vessel designed to carry bulk cargo.
              * `53`	Tanker	Vessel solely equipped with tanks to carry cargo.
              * `54`	Liquefied gas tanker	Tanker designed to carry liquefied gas.
              * `55`	Other special tanker	Tanker designed to carry other special liquids.
              * `57`	Cargo and passenger vessel	Vessel designed to carry cargo and passengers.
              * `59`	Passenger ship	Vessel designed to carry more than 12 passengers.
              * `60`	Assistance vessel	Vessel designed to give assistance.
              * `70`	Other sea-going vessel	Sea-going vessel, not otherwise specified.
              * `72`	Work ship	Vessel designed to assist in work.
              * `73`	Push boat	Vessel designed to push other vessels.
              * `74`	Dredger	Vessel designed to scoop or suck mud or sand.
              * `75`	Fishing boat	Vessel designed for fishing.
              * `76`	Research and education ship	Vessel designed for research and education.
              * `77`	Navy vessel	Vessel operated by a Navy.
              * `78`	Structure, floating	Any floating structure.
              * `80`	Pleasure boat	Vessel designed for recreation.
              * `81`	Speedboat	Vessel designed for speed, often used for recreation.
              * `82`	Sailing boat with auxiliary motor	Vessel designed primarily for sailing outfitted with an auxiliary motor.
              * `83`	Sailing yacht	A specific type of vessel mostly used for pleasure and designed for sailing.
              * `84`	Boat for sport fishing	Vessel designed for sport fishing.
              * `85`	Craft, pleasure, longer than 20 metres	Vessel longer than 20 metres, designed for recreation.
              * `89`	Craft, other, recreational	Vessel designed for recreation, not otherwise specified.
              * `90`	Fast ship	Fast, all-purpose vessel.
              * `91`	Hydrofoil	Vessel with wing-like structure for skimming at high speed.
              * `92`	Catamaran, fast	Fast vessel designed with two parallel hulls.   
      type: string
      maxLength: 2
      example: 50    
      enum: [50, 51, 52, 53, 54, 55, 57, 59, 60, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92]

    linerServiceName: 
      description: Name of a Liner Service, as it is refered in Alphaliner
      type: string
      maxLength: 50 
      example: New Eurosal / EuroAndes  

    linerServiceCode: 
      description: Code of a Liner Service, as it is refered in Alphaliner
      type: string
      maxLength: 4 
      example: 6513

    linerServiceType: 
      description: >
            Type of Liner Service, coded. 
              * `FC`	Full container - Containership.
              * `CC`  Car-carrier.
              * `RR`  Ro-Ro.
              * `MP`  Multipurpose
      type: string
      maxLength: 2 
      example: FC

    linerServiceCapacity: 
      description: Capacity of a liner service, expressed in units according to the typology of the liner service. Units are TEUs for containerships, cars for car-carriers and LIMs (lanes in meters) for ro-ro vessels. 
      type: string
      example: 23064 TEU

    linerCarrier: 
      description: Liner carrier
      properties:
        carrierName:
          description: Carrier name 
          type: string
          example: Mediterranean Shipping Company (MSC)
        carrierCode:
          description: Carrier code as Standard Carrier Alpha Code (SCAC) 
          type: string
          example: MSCU

    linerSlot: 
      description: Code of a Liner Slot
      type: string
      example: MSC

    linerSailingFrequency: 
      description: Frequency of a liner service, expressed in days
      type: string
      example: 7

    linerDurationOfRotation: 
      description: Duration of the liner service rotation, expressed in days
      type: string
      example: 43  
      
  # Rail transport
    trainType:
      description: >
            The type of the train. The value is populated using the following enumeration:
              * `Containers`	General cargo vessel	Vessel designed to carry general cargo.
              * `Vehicles`	Unit carrier	Vessel designed to carry unit loads
              * `Bulk`	Bulk carrier	Vessel designed to carry bulk cargo.
              * `Tanker`	Tanker	Vessel solely equipped with tanks to carry cargo. 
      type: string
      maxLength: 35
      example: "Containers"    
      enum: ["Containers", "Vehicles", "Bulk", "Tanker"]  

    railService:      
      type: string
      description: Code that identifies a rail service.     

    railwayStationNearestCity:
      type: string
      description: Name of the nearest city to a railway station.

    railTerminalLocode:
      type: string
      description: UN/LOCODE of a rail terminal. 

    railTerminalCode: 
      type: string
      description: Code that identifies a railway terminal. 
      example: ESCRB

    railTerminalName: 
      type: string
      description: Name of a railway terminal. 
      example: Zaragoza-Corbera-Alta  

    railDirection:  
      description: > 
        Direction of a train:
          * `UP` - Up or inbound is used for trains that are coming to a port.
          * `DOWN` - Down or outbound is used for trains that are leaving a port. 
      type: string
      enum: [UP, DOWN]
      example: UP

    # Road transport

    # Equipment
    freightType:
      description: >
            Type of freight.  
              * `Solid bulk`
              * `Liquid bulk`
              * `Roll-on / roll-off`
              * `Breakbulk`
              * `Containers`
      type: string
      enum: [Solid bulk, Liquid bulk, Roll-on / roll-off, Breakbulk, Containers]
      example: Containers

    containerNumber:
      description: Container number as is described in ISO6346
      type: string
      maxLength: 11
      example: ABCU1234567    

    equipmentTare:
      description: Tare of a unit of equipment, expressed in Kg.
      type: integer
      example: 2340     

    iso6346:
      description: Size and type codes of a container, used as a whole. Size codes are determined in accordance with annex D of ISO 6346:1995 and type codes according to annex E of the same international standard.
      type: string
      maxLength: 4
      example: 22G1 


#   Group 9 is for other data elements 
    # Environment



    # Port marks
    markRegion: 
      description: >
            Mark region, according to the IALA/AISM Maritime Buoyage System nd Other Aids to Navigation. 
              * In `Region A` red colour is used for port and green colour starboard. 
              * In `Region B` green colour is used for port and red colour starboard. 
      type: string
      enum: [Region A, Region B]
      example: Region A

    markType: 
      description: >
            Type of marks, according to the IALA/AISM Maritime Buoyage System and Other Aids to Navigation.  
              * `Lateral Marks`
              * `Cardinal Marks`
              * `Isolated Danger Mark`
              * `Safe Waters Mark`
              * `Marking New Dangers`
              * `Other Marks`
      type: string
      enum: [Lateral Marks, Cardinal Marks, Isolated Danger Mark, Safe Waters Mark, Marking New Dangers, Other Marks]
      example: Isolated Danger Mark

    markTop: 
      description: Upper part of a mark. It can be one or two spheres, cilinders, cones or crosses.
      type: string
      example: Two black spheres.

    markColour: 
      description: Mark colour.
      type: string
      example: Red and white vertical stripes.

    shapeOfBuoy: 
      description: Distinctive shape for identification of a mark.
      type: string
      example: Conical shape.

    markLight: 
      description: Characteristics of a mark light.
      properties:
        colour:
          description: Colour 
          type: string
          example: red
        rhythm:
          description: Rhythm of the light and dark periodes of a mark light. 
          type: string
          example: group flashing (2)

    # Notices and news
    noticeLanguage:
      description: Language used to write a notice. 
      $ref: '#/components/schemas/language'

    newsLanguage:
      description: Language used to write news. 
      $ref: '#/components/schemas/language'

    publishingStage:  
      description: > 
        Stages of a publishing process:
          * `ACTIVE` - Element that is active
          * `EXPIRED` - Element that has expired 
      type: string
      enum: [ACTIVE, EXPIRED]

    subject:
      description: Subject of a publication.      
      type: string

    content:
      description: Content of a publication. 
      type: string

    noticeCategory:
      description: Category of a publication. 
      type: string
      example: 'Ship arrival'

    newsCategory:
      description: Category of a publication. 
      type: string
      example: 'Traffic'

    # Subscriptions
    subscriptionReference:
      description: Response after a subscription request has been received
      type: object
      properties:
        subscriptionRequestReference:
          $ref: '#/components/schemas/subscriptionRequestReference'
        subscriptionRequestMessage:
          $ref: '#/components/schemas/subscriptionRequestMessage'

    subscriptionRequestReference: 
      type: string
      example: '2022-02-07T17:05:12_REF001'

    subscriptionRequestMessage:
      type: string 
      example: 'Your subscription request has been received and soon you will receive a validation code (email/sms)'

    unsubscriptionRequestReference: 
      type: string
      example: '2022-02-10T17:05:12_UNS056'

    unsubscriptionRequestMessage:
      type: string 
      example: 'Your unsubscription request has been received and soon you will receive a validation code (email/sms)'

    unsubscriptionReference:
      description: Response after an unsubscription request has been received
      type: object
      properties:
        unsubscriptionRequestReference:
          $ref: '#/components/schemas/unsubscriptionRequestReference'
        unsubscriptionRequestMessage:
          $ref: '#/components/schemas/unsubscriptionRequestMessage'


    # Environmenet-weather
    weatherType: 
      description: The observed weather type. 
      type: string
      enum: [clearNight,sunnyDay, slightlyCloudy, partlyCloudy, mist, fog, highClouds, cloudy, veryCloudy, overcast, lightRainShower, drizzle, lightRain, heavyRainShower, heavyRain, sleetShower, sleet, hailShower, hail, shower, lightSnow, snow, heavySnowShower, heavySnow, thunderShower, thunder]
      example: cloudy
