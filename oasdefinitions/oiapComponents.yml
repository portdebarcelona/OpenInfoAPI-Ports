openapi: '3.0.3'
info:
  version: '0.9.0-oas3'
  title: OIAP Components
  description: |
    **Open Info API para Puertos**


    List of components that are used in the APIs developed for the Open Info API para Puertos project.
  license:
    name: CC0 1.0 Universal (CC0 1.0)
    url: https://creativecommons.org/publicdomain/zero/1.0/deed.es
  contact:
    name: OpenInfoAPI github
    url: https://github.com/portdebarcelona/OpenInfoAPI-Ports
# servers:
#  - url: https://github.com/portdebarcelona/OpenInfoAPI-Ports/blob/develop/oasdefinitions/
paths:
  /resADir:
    get:
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      responses:
        default:
          description: successful operation 
components:
  headers: 
    currentPage: 
        schema: 
            type: string
            example: fE9mZnNldHw9MCZsaW1pdD01
        description: A link to the current page.
        required: true
    nextPage: 
        schema:
            type: string
            example: fE9mZnNldHw9NSZsaW1pdD01
        description: A link to the next page. Next-Page header link MAY be omitted if the current page is the last page.
        required: false
    prevPage:
        schema: 
            type: string
            example: fE9mZnNldHw9MCZsaW1pdD01
        description: A link to the previous page. Previous-Page header link MAY be omitted if the current page is the first page.
        required: false
    lastPage: 
        schema: 
            type: string
            example: fE9mZnNldHw9NTkmbGltaXQ9NQ==
        description: A link to the last page. Last-Page header link MAY be omitted if the current page is the last page.
        required: false
    firstPage: 
        schema: 
            type: string
            example: fE9mZnNldHw9NjAmbGltaXQ9NQ==
        description: A link to thefirst page. First-Page header link MAY be omitted if current page is the first page.
        required: false
    oiapApiVersion:
        schema: 
            type: string
            example: 0.9.0-oas3
        description: SemVer used to indicate the version of the contract (API version) returned.
  schemas:
    # Reference components
    id:
      description: |
            Unique identifier of an element of a dataset.
      type: string
      maxLength: 35
      example: XAC12345CA
    uri:
      description: |
            The Uniform Resource Identifier (URI) is a unique sequence of characters that identifies a logical or physical resource used by web technologies.
      type: string
    validationKey:
      description: |
            The code received to complete a subscription process.
      type: string
      example: '4ZT2'
    # Persons
    contactInfo:
      description: email or phone
      type: string
    email:
      description: email
      type: string
    phone:
      description: phone number 
      type: string
    name:
      description: name
      type: string
    surname:
      description: surname
      type: string      
    company:
      type: object
      description: 
        Company
      properties:
        companyName:
          type: string 
          description: Name of the company
        companyCode:
          type: string
          description: VAT code of the company
      required:
        - companyName   
    language:
      description: |
            The ISO 639 code of a language. Each language is assigned a two-letter (639-1) lowercase abbreviation.
            E.g. `ca` Catalan.
      type: string
      maxLength: 2
      example: ca 
    # Location components
    locode:
      type: string
      maxLength: 5
      description: UN/LOCODE of a location as specified in the UN/ECE Recommendation nº16
    portCode:
      description: |
            Port UN/LOCODE
      type: string
      maxLength: 5
      example: ESBCN 
    lastPortOfCall:
      description: |
            UN/LOCODE of the last POrt of Call
      type: string
      maxLength: 5
      example: HKHKG 
    nextPortOfCall:
      description: UN/LOCODE from next port of call. 
      type: string
      maxLength: 5
      example: NLRTM
    placeOfDeparture:
      type: object
      description: Name of the place of departure. 
      anyOf:
        - type: object
          properties:
            code:
              description: Code of the place of departure.  
              type: string
              maxLength: 5
        - type: object
          properties:
            description:
              description: Name of the place of departure.  
              type: string
              maxLength: 35
    placeOfDestination:
      type: object
      description: Name of the place of destination. 
      anyOf:
        - type: object
          properties:
            code:
              description: Code of the place of destination.  
              type: string
              maxLength: 5
        - type: object
          properties:
            description:
              description: Name of the place of destination.  
              type: string
              maxLength: 35
    # Ship components
    shipIMONumber:
      type: string
      maxLength: 7 
      description: The identifier of ship.
      example: 9876543 
    shipName:
      type: string
      description: The ship’s name shown on the IMO ship’s certificates.
      maxLength: 35
      example: AURORA 
    shipType:
      description: >
            The type of the ship. The value is populated using the 2 character code from Annex 2 from UN/ECE Recommendation Nº28 when the means of transport is 1 (maritime).
            E.g.  50 Is the code  for a General cargo vessel. A vessel designed to carry general cargo.
              * `50`	General cargo vessel	Vessel designed to carry general cargo.
              * `51`	Unit carrier	Vessel designed to carry unit loads
              * `52`	Bulk carrier	Vessel designed to carry bulk cargo.
              * `53`	Tanker	Vessel solely equipped with tanks to carry cargo.
              * `54`	Liquefied gas tanker	Tanker designed to carry liquefied gas.
              * `55`	Other special tanker	Tanker designed to carry other special liquids.
              * `57`	Cargo and passenger vessel	Vessel designed to carry cargo and passengers.
              * `59`	Passenger ship	Vessel designed to carry more than 12 passengers.
              * `60`	Assistance vessel	Vessel designed to give assistance.
              * `70`	Other sea-going vessel	Sea-going vessel, not otherwise specified.
              * `72`	Work ship	Vessel designed to assist in work.
              * `73`	Push boat	Vessel designed to push other vessels.
              * `74`	Dredger	Vessel designed to scoop or suck mud or sand.
              * `75`	Fishing boat	Vessel designed for fishing.
              * `76`	Research and education ship	Vessel designed for research and education.
              * `77`	Navy vessel	Vessel operated by a Navy.
              * `78`	Structure, floating	Any floating structure.
              * `80`	Pleasure boat	Vessel designed for recreation.
              * `81`	Speedboat	Vessel designed for speed, often used for recreation.
              * `82`	Sailing boat with auxiliary motor	Vessel designed primarily for sailing outfitted with an auxiliary motor.
              * `83`	Sailing yacht	A specific type of vessel mostly used for pleasure and designed for sailing.
              * `84`	Boat for sport fishing	Vessel designed for sport fishing.
              * `85`	Craft, pleasure, longer than 20 metres	Vessel longer than 20 metres, designed for recreation.
              * `89`	Craft, other, recreational	Vessel designed for recreation, not otherwise specified.
              * `90`	Fast ship	Fast, all-purpose vessel.
              * `91`	Hydrofoil	Vessel with wing-like structure for skimming at high speed.
              * `92`	Catamaran, fast	Fast vessel designed with two parallel hulls.   
      type: string
      maxLength: 2
      example: 50    
      enum: [50, 51, 52, 53, 54, 55, 57, 59, 60, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92]
    # Train components
    trainType:
      description: >
            The type of the train. The value is populated using the following enumeration:
              * `Containers`	General cargo vessel	Vessel designed to carry general cargo.
              * `Vehicles`	Unit carrier	Vessel designed to carry unit loads
              * `Bulk`	Bulk carrier	Vessel designed to carry bulk cargo.
              * `Tanker`	Tanker	Vessel solely equipped with tanks to carry cargo. 
      type: string
      maxLength: 35
      example: "Containers"    
      enum: ["Containers", "Vehicles", "Bulk", "Tanker"]  
    # Partners      
    companyName: #Revisar
      type: string
      description: Name of a company.
    ferryOperator:
      type: object
      description: 
        Identification of the company that operates a ferry.  
      properties:
        code:
          description: Operator code. Code assigned to a ferry operator.  
          type: string
          example: GRM
        description:
          description: Name of the ferry operator. 
          type: string
          example: GRIMALDI 
      required:
        - description
    cruiseLine:
      type: object
      description: 
        Identification of the company that operates the cruise ship.  
      properties:
        code:
          description: Operator code. Code assigned to a cruise line.  
          type: string
          example: COSTA
        description:
          description: Name of the cruise line. 
          type: string
          example: COSTA CRUCEROS 
      required:
        - description
    # Date and time components
    startDate:  
      description: The start date of a period. The value is populated in ISO 8601 Date format.
      type: string
      format: date
      example: 2020-04-06
    dateRange: 
      description: 
            The duration of a time period. It is populated in ISO 8601 duration format. E.g. 4 weeks and 2 days is represented as P4W2D
      type: string
      format: iso8601
      example: P4W  
    estimatedTimeOfArrival:  
      description: The date and time the means of transport is estimated to arrive at a specified location (ETA), in ISO 8601 Date format.
      type: string
      format: date
      example: 2022-03-15 11:53
    actualTimeOfArrival:  
      description: The date and time the means of transport arrives at a specified location (ATA), in ISO 8601 Date format.
      type: string
      format: date
      example: 2022-01-24 21:53
    estimatedTimeOfDeparture:  
      description: The date and time the means of transport is estimated to depart from a specified location (ETD), in ISO 8601 Date format.
      type: string
      format: date
      example: 2022-04-08 12:00
    actualTimeOfDeparture:  
      description: The date and time the means of transport departs from a specified location (ATD), in ISO 8601 Date format.
      type: string
      format: date
      example: 2022-01-25 10:06      
    fromDate:  
      description: The initial date of a periode of time.
      type: string
      format: date
      example: 2022-01-20 
    startTime:  
      description: The initial date of a periode of time.
      type: string
      format: date
      example: 2022-01-20 
    endTime:  
      description: The final date of a periode of time.
      type: string
      format: date
      example: 2022-01-20 
    # Rail transport components
    railService:      
      type: string
      description: Code that identifies a rail service.     
    railwayStationNearestCity:
      type: string
      description: Name of the nearest city to a railway station.
    railTerminalLocode:
      type: string
      description: UN/LOCODE of a rail terminal. 
    railTerminalCode: 
      type: string
      description: Code that identifies a railway terminal. 
      example: ESCRB
    railTerminalName: 
      type: string
      description: Name of a railway terminal. 
      example: Zaragoza-Corbera-Alta  
    railDirection:  
      type: string
      enum: [UP, DOWN]
      example: UP
      description: > 
        Direction of a train:
          * `UP` - Up or inbound is used for trains that are coming to a port.
          * `DOWN` - Down or outbound is used for trains that are leaving a port. 
    # Infrastructure components
    berth:
      type: object
      description: 
        Identification of a berth from a port.  
      properties:
        code:
          description: Berth code. Code assigned to a berth from a port.  
          type: string
          example: 01B 
        description:
          description: Berth name. 
          type: string
          example: ADOSSAT 
      required:
        - code
    facility:
      type: object
      description: 
        Identification of a port facility.  
      properties:
        code:
          description: Facility code. Code assigned to a facility from a port.  
          type: string
          example: 08MBCN
        description:
          description: Facility name. 
          type: string
          example: TERMINAL CREUERS
        berth:
          $ref: '#/components/schemas/berth' 
      required:
        - description
    # Notices and news
    noticeLanguage:
      $ref: '#/components/schemas/language'
    newsLanguage:
      $ref: '#/components/schemas/language'
    publishingStage:
      type: string
      enum: [ACTIVE, EXPIRED]
      description: > 
        Stages of a publishing process:
          * `ACTIVE` - Element that is active
          * `EXPIRED` - Element that has expired 
    subject:
      type: string
      description: Subject of a publication.      
    content:
      type: string
      description: Content of a publication. 
    noticeCategory:
      type: string
      description: Category of a publication. 
      example: 'Ship arrival'
    newsCategory:
      type: string
      description: Category of a publication. 
      example: 'Traffic'
    # Subscriptions
    subscriptionReference:
      description: Response after a subscription request has been received
      type: object
      properties:
        subscriptionRequestReference:
          $ref: '#/components/schemas/subscriptionRequestReference'
        subscriptionRequestMessage:
          $ref: '#/components/schemas/subscriptionRequestMessage'
    subscriptionRequestReference: 
      type: string
      example: '2022-02-07T17:05:12_REF001'
    subscriptionRequestMessage:
      type: string 
      example: 'Your subscription request has been received and soon you will receive a validation code (email/sms)'
    unsubscriptionRequestReference: 
      type: string
      example: '2022-02-10T17:05:12_UNS056'
    unsubscriptionRequestMessage:
      type: string 
      example: 'Your unsubscription request has been received and soon you will receive a validation code (email/sms)'
    unsubscriptionReference:
      description: Response after an unsubscription request has been received
      type: object
      properties:
        unsubscriptionRequestReference:
          $ref: '#/components/schemas/unsubscriptionRequestReference'
        unsubscriptionRequestMessage:
          $ref: '#/components/schemas/unsubscriptionRequestMessage'
    # Error schemas
    error:
      type: object
      description: 
        Error body
      properties:
        code:
          type: string 
          example: Error code
        message:
          type: string
          example: Error description
      required:
        - code
        - message
# https://service.unece.org/trade/uncefact/vocabulary/rec20/
# https://service.unece.org/trade/uncefact/vocabulary/rec21/
# https://service.unece.org/trade/uncefact/vocabulary/unlocode-CC/  (CC is 2a ISO3166 country code)




