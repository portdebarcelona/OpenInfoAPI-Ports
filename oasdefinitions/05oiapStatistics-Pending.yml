openapi: '3.0.3'
info:
  version: '0.9.0-oas3'
  title: OIAP
  description: |
    **Open Info API para Puertos**


    This file contains all the APIs developed for the `Open Info API para Puertos` project for the **Statistics Domain** within the initiative Ports 4.0 form Puertos del Estado (ES). 

  termsOfService: http://swagger.io/terms/
  license:
    name: CC0 1.0 Universal (CC0 1.0)
    url: https://creativecommons.org/publicdomain/zero/1.0/deed.es
  contact:
    name: OpenInfoAPI github
    url: https://github.com/portdebarcelona/OpenInfoAPI-Ports
tags:
  - name: Statistics
    description: "APIs related to the docummentary procedures of a port."
    externalDocs:
      description: Description 
      url: http://swagger.io/ 
servers:
  - url: https://raw.githubusercontent.com/portdebarcelona/OpenInfoAPI-Ports/develop/oasdefinitions
    description: Servidor server 

paths:
  /basicTrafficStatistics:
    get:
      tags:
        - Statistics
      summary: Statistical information from the carriage of goods and passengers by seagoing vessels calling at ports.
      description: >
            Statistical information from the carriage of goods and passengers by seagoing vessels calling at ports.

            It is based on the definitions and classifications as included in the Directive 2009/42/EC of the European Parliament and of the Council of 6 May 2009 on statistical returns in respect of carriage of goods and passenger by sea and later amendments. 
      parameters:
        - $ref: '#/components/parameters/portCode'
      responses: 
        '200':
          description: Successful operation
          headers:
            oiapApiVersion:
              $ref: './oiapComponents.yml#/components/headers/oiapApiVersion'
          content: 
            application/json:
              schema:
                type: object
                properties:
                  basicTrafficStatistics:
                    type: array
                    items:
                      $ref: '#/components/schemas/basicTrafficStatistics'
                  metadata: 
                    $ref: './oiapComponents.yml#/components/schemas/metadata'
                  requestedParams:
                    type: object
                    properties:
                      portCode:
                        $ref: './oiapComponents.yml#/components/schemas/portCode'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error' 
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error'  
  /basicEconomicStatistics:
    get:
      tags:
        - Statistics
      summary: Statistical information from some economical parameters from a port.
      description: Statistical information from some economical parameters from a port. 
      parameters:
        - $ref: '#/components/parameters/portCode'
      responses: #status code
        '200':
          description: Successful operation
          headers:
            oiapApiVersion:
              $ref: './oiapComponents.yml#/components/headers/oiapApiVersion'
          content: 
            application/json:
              schema:
                type: object
                properties:
                  basicEconomicData:
                    type: array
                    items:
                      $ref: '#/components/schemas/basicEconomicData'
                  metadata: 
                    $ref: './oiapComponents.yml#/components/schemas/metadata'
                  requestedParams:
                    type: object
                    properties:
                      portCode:
                        $ref: './oiapComponents.yml#/components/schemas/portCode'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error' 
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: './oiapComponents.yml#/components/schemas/error' 

 

components:
  parameters: 
    portCode:
      in: query
      name: portCode
      description: |
            Port UN/LOCODE
            Default value is Locode of Port what provides the services
            example: portCode=ESBCN        
      required: false
      style: form
      explode: false
      schema:
        $ref: './oiapComponents.yml#/components/schemas/portCode'


  schemas:
    basicTrafficStatistics: 
      description: 'Statistical information from the traffic flows from a port.'
      type: object
      allOf:
        - type: object 
          properties:
            dataset:
              $ref: './oiapComponents.yml#/components/schemas/dataset' 
            year:
              $ref: './oiapComponents.yml#/components/schemas/year' 
            quarter:
              $ref: './oiapComponents.yml#/components/schemas/quarter' 
            reportingPort:
              $ref: './oiapComponents.yml#/components/schemas/reportingPort' 
            flowDirection:  
              $ref: './oiapComponents.yml#/components/schemas/flowDirection' 
            portLoadingUnloading:
              $ref: './oiapComponents.yml#/components/schemas/portLoadingUnloading' 
            coastalArea:
              $ref: './oiapComponents.yml#/components/schemas/coastalArea'             
            typeOfCargo:
              $ref: './oiapComponents.yml#/components/schemas/typeOfCargo' 
            grossWeightOfGoods:
              $ref: './oiapComponents.yml#/components/schemas/grossWeight'
            unitsTotal:
              $ref: './oiapComponents.yml#/components/schemas/units'
            unitsEmpty:
              $ref: './oiapComponents.yml#/components/schemas/units'
            ferryPassengers:
              $ref: './oiapComponents.yml#/components/schemas/passengers'
            cruisePassengers:
              $ref: './oiapComponents.yml#/components/schemas/passengers'
      required:
        - dataset
        - year
        - quarter
        - reportingPort 

    basicEconomicData: # PENDING
      description: 'URI where a border inspection procedure from a port can be found.'
      type: object
      allOf:
        - type: object 
          properties:
            borderInspectionDescription:  
              description: 'Procedure description'
              type: string
              enum: ['The '] 
            borderInspectionUri:  
              $ref: './oiapComponents.yml#/components/schemas/uri' 
      required:
        - borderInsp√®ctionUri 

